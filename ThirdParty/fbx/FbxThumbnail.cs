//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxThumbnail : FbxObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxThumbnail(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FbxWrapperNativePINVOKE.FbxThumbnail_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxThumbnail obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      FbxWrapperNativePINVOKE.FbxThumbnail_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxThumbnail_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(FbxWrapperNativePINVOKE.FbxThumbnail_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxThumbnail Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxThumbnail_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxThumbnail ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxThumbnail(cPtr, false);
    return ret;
  }

  public new static FbxThumbnail Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxThumbnail_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxThumbnail ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxThumbnail(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t CustomHeight {
    set {
      FbxWrapperNativePINVOKE.FbxThumbnail_CustomHeight_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxThumbnail_CustomHeight_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t CustomWidth {
    set {
      FbxWrapperNativePINVOKE.FbxThumbnail_CustomWidth_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxThumbnail_CustomWidth_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public void SetDataFormat(FbxThumbnail.EDataFormat pDataFormat) {
    FbxWrapperNativePINVOKE.FbxThumbnail_SetDataFormat(swigCPtr, (int)pDataFormat);
  }

  public FbxThumbnail.EDataFormat GetDataFormat() {
    FbxThumbnail.EDataFormat ret = (FbxThumbnail.EDataFormat)FbxWrapperNativePINVOKE.FbxThumbnail_GetDataFormat(swigCPtr);
    return ret;
  }

  public void SetSize(FbxThumbnail.EImageSize pImageSize) {
    FbxWrapperNativePINVOKE.FbxThumbnail_SetSize(swigCPtr, (int)pImageSize);
  }

  public FbxThumbnail.EImageSize GetSize() {
    FbxThumbnail.EImageSize ret = (FbxThumbnail.EImageSize)FbxWrapperNativePINVOKE.FbxThumbnail_GetSize(swigCPtr);
    return ret;
  }

  public uint GetSizeInBytes() {
    uint ret = FbxWrapperNativePINVOKE.FbxThumbnail_GetSizeInBytes(swigCPtr);
    return ret;
  }

  public bool SetThumbnailImage(SWIGTYPE_p_unsigned_char pImage) {
    bool ret = FbxWrapperNativePINVOKE.FbxThumbnail_SetThumbnailImage(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(pImage));
    return ret;
  }

  public SWIGTYPE_p_unsigned_char GetThumbnailImage() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxThumbnail_GetThumbnailImage(swigCPtr);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public override FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(FbxWrapperNativePINVOKE.FbxThumbnail_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum EDataFormat {
    eRGB_24,
    eRGBA_32
  }

  public enum EImageSize {
    eNotSet = 0,
    e64x64 = 64,
    e128x128 = 128,
    eCustomSize = -1
  }

}

}

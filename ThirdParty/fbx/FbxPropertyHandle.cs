//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxPropertyHandle : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxPropertyHandle(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxPropertyHandle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxPropertyHandle() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FbxWrapperNativePINVOKE.delete_FbxPropertyHandle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static FbxPropertyHandle Create() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Create__SWIG_0(), true);
    return ret;
  }

  public static FbxPropertyHandle Create(FbxPropertyHandle pInstanceOf) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Create__SWIG_1(FbxPropertyHandle.getCPtr(pInstanceOf)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxPropertyHandle Create(string pName, EFbxType pType) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Create__SWIG_2(pName, (int)pType), true);
    return ret;
  }

  public static FbxPropertyHandle Create(string pName) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Create__SWIG_3(pName), true);
    return ret;
  }

  public static FbxPropertyHandle Create(string pName, FbxPropertyHandle pTypeInfo) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Create__SWIG_4(pName, FbxPropertyHandle.getCPtr(pTypeInfo)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Destroy() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_Destroy(swigCPtr);
    return ret;
  }

  public FbxPropertyHandle() : this(FbxWrapperNativePINVOKE.new_FbxPropertyHandle__SWIG_0(), true) {
  }

  public FbxPropertyHandle(FbxPropertyHandle pAddress) : this(FbxWrapperNativePINVOKE.new_FbxPropertyHandle__SWIG_1(FbxPropertyHandle.getCPtr(pAddress)), true) {
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxPropertyHandle(FbxPropertyPage pPage, int pId) : this(FbxWrapperNativePINVOKE.new_FbxPropertyHandle__SWIG_2(FbxPropertyPage.getCPtr(pPage), pId), true) {
  }

  public FbxPropertyHandle(FbxPropertyPage pPage) : this(FbxWrapperNativePINVOKE.new_FbxPropertyHandle__SWIG_3(FbxPropertyPage.getCPtr(pPage)), true) {
  }

  public FbxPropertyHandle assign(FbxPropertyHandle pHandle) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_assign(swigCPtr, FbxPropertyHandle.getCPtr(pHandle)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool eq(FbxPropertyHandle pHandle) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_eq(swigCPtr, FbxPropertyHandle.getCPtr(pHandle));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ne(FbxPropertyHandle pHandle) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_ne(swigCPtr, FbxPropertyHandle.getCPtr(pHandle));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool lt(FbxPropertyHandle pHandle) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_lt(swigCPtr, FbxPropertyHandle.getCPtr(pHandle));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool gt(FbxPropertyHandle pHandle) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_gt(swigCPtr, FbxPropertyHandle.getCPtr(pHandle));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Is(FbxPropertyHandle pHandle) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_Is(swigCPtr, FbxPropertyHandle.getCPtr(pHandle));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Valid() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_Valid(swigCPtr);
    return ret;
  }

  public string GetName() {
    string ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetName(swigCPtr);
    return ret;
  }

  public string GetLabel() {
    string ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetLabel(swigCPtr);
    return ret;
  }

  public bool SetLabel(string pLabel) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetLabel(swigCPtr, pLabel);
    return ret;
  }

  public EFbxType GetType() {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxPropertyHandle_GetType(swigCPtr);
    return ret;
  }

  public FbxPropertyHandle GetTypeInfo() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetTypeInfo(swigCPtr), true);
    return ret;
  }

  public FbxPropertyFlags.EFlags GetFlags() {
    FbxPropertyFlags.EFlags ret = (FbxPropertyFlags.EFlags)FbxWrapperNativePINVOKE.FbxPropertyHandle_GetFlags(swigCPtr);
    return ret;
  }

  public FbxPropertyFlags.EInheritType GetFlagsInheritType(FbxPropertyFlags.EFlags pFlags, bool pCheckReferences) {
    FbxPropertyFlags.EInheritType ret = (FbxPropertyFlags.EInheritType)FbxWrapperNativePINVOKE.FbxPropertyHandle_GetFlagsInheritType(swigCPtr, (int)pFlags, pCheckReferences);
    return ret;
  }

  public bool ModifyFlags(FbxPropertyFlags.EFlags pFlags, bool pValue) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_ModifyFlags(swigCPtr, (int)pFlags, pValue);
    return ret;
  }

  public bool SetFlagsInheritType(FbxPropertyFlags.EFlags pFlags, FbxPropertyFlags.EInheritType pType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetFlagsInheritType(swigCPtr, (int)pFlags, (int)pType);
    return ret;
  }

  public SWIGTYPE_p_void GetUserData() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetUserData(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public bool SetUserData(SWIGTYPE_p_void pUserData) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetUserData(swigCPtr, SWIGTYPE_p_void.getCPtr(pUserData));
    return ret;
  }

  public int GetUserTag() {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetUserTag(swigCPtr);
    return ret;
  }

  public bool SetUserTag(int pUserData) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetUserTag(swigCPtr, pUserData);
    return ret;
  }

  public int AddEnumValue(string pStringValue) {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_AddEnumValue(swigCPtr, pStringValue);
    return ret;
  }

  public void InsertEnumValue(int pIndex, string pStringValue) {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_InsertEnumValue(swigCPtr, pIndex, pStringValue);
  }

  public int GetEnumCount() {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetEnumCount(swigCPtr);
    return ret;
  }

  public void SetEnumValue(int pIndex, string pStringValue) {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_SetEnumValue(swigCPtr, pIndex, pStringValue);
  }

  public void RemoveEnumValue(int pIndex) {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_RemoveEnumValue(swigCPtr, pIndex);
  }

  public string GetEnumValue(int pIndex) {
    string ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetEnumValue(swigCPtr, pIndex);
    return ret;
  }

  public void BeginCreateOrFindProperty() {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_BeginCreateOrFindProperty(swigCPtr);
  }

  public void EndCreateOrFindProperty() {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_EndCreateOrFindProperty(swigCPtr);
  }

  public bool IsRoot() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsRoot(swigCPtr);
    return ret;
  }

  public bool IsChildOf(FbxPropertyHandle pParent) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsChildOf(swigCPtr, FbxPropertyHandle.getCPtr(pParent));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsDescendentOf(FbxPropertyHandle pParent) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsDescendentOf(swigCPtr, FbxPropertyHandle.getCPtr(pParent));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool SetParent(FbxPropertyHandle pOther) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetParent(swigCPtr, FbxPropertyHandle.getCPtr(pOther));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxPropertyHandle Add(string pName, FbxPropertyHandle pTypeInfo) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Add(swigCPtr, pName, FbxPropertyHandle.getCPtr(pTypeInfo)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxPropertyHandle GetParent() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetParent(swigCPtr), true);
    return ret;
  }

  public FbxPropertyHandle GetChild() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetChild(swigCPtr), true);
    return ret;
  }

  public FbxPropertyHandle GetSibling() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSibling(swigCPtr), true);
    return ret;
  }

  public FbxPropertyHandle GetFirstDescendent() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetFirstDescendent(swigCPtr), true);
    return ret;
  }

  public FbxPropertyHandle GetNextDescendent(FbxPropertyHandle pHandle) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetNextDescendent(swigCPtr, FbxPropertyHandle.getCPtr(pHandle)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxPropertyHandle Find(string pName, bool pCaseSensitive) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Find__SWIG_0(swigCPtr, pName, pCaseSensitive), true);
    return ret;
  }

  public FbxPropertyHandle Find(string pName, FbxPropertyHandle pTypeInfo, bool pCaseSensitive) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Find__SWIG_1(swigCPtr, pName, FbxPropertyHandle.getCPtr(pTypeInfo), pCaseSensitive), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxPropertyHandle Find(string pName, string pChildrenSeparator, bool pCaseSensitive) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Find__SWIG_2(swigCPtr, pName, pChildrenSeparator, pCaseSensitive), true);
    return ret;
  }

  public FbxPropertyHandle Find(string pName, string pChildrenSeparator, FbxPropertyHandle pTypeInfo, bool pCaseSensitive) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_Find__SWIG_3(swigCPtr, pName, pChildrenSeparator, FbxPropertyHandle.getCPtr(pTypeInfo), pCaseSensitive), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ConnectSrc(FbxPropertyHandle pSrc, FbxConnection.EType pType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_ConnectSrc__SWIG_0(swigCPtr, FbxPropertyHandle.getCPtr(pSrc), (int)pType);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ConnectSrc(FbxPropertyHandle pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_ConnectSrc__SWIG_1(swigCPtr, FbxPropertyHandle.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetSrcCount(FbxConnectionPointFilter pFilter) {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSrcCount__SWIG_0(swigCPtr, FbxConnectionPointFilter.getCPtr(pFilter));
    return ret;
  }

  public int GetSrcCount() {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSrcCount__SWIG_1(swigCPtr);
    return ret;
  }

  public FbxPropertyHandle GetSrc(FbxConnectionPointFilter pFilter, int pIndex) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSrc__SWIG_0(swigCPtr, FbxConnectionPointFilter.getCPtr(pFilter), pIndex), true);
    return ret;
  }

  public FbxPropertyHandle GetSrc(FbxConnectionPointFilter pFilter) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSrc__SWIG_1(swigCPtr, FbxConnectionPointFilter.getCPtr(pFilter)), true);
    return ret;
  }

  public FbxPropertyHandle GetSrc() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSrc__SWIG_2(swigCPtr), true);
    return ret;
  }

  public bool DisconnectSrc(FbxPropertyHandle pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_DisconnectSrc(swigCPtr, FbxPropertyHandle.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsConnectedSrc(FbxPropertyHandle pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsConnectedSrc(swigCPtr, FbxPropertyHandle.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ConnectDst(FbxPropertyHandle pDst, FbxConnection.EType pType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_ConnectDst__SWIG_0(swigCPtr, FbxPropertyHandle.getCPtr(pDst), (int)pType);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ConnectDst(FbxPropertyHandle pDst) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_ConnectDst__SWIG_1(swigCPtr, FbxPropertyHandle.getCPtr(pDst));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetDstCount(FbxConnectionPointFilter pFilter) {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetDstCount__SWIG_0(swigCPtr, FbxConnectionPointFilter.getCPtr(pFilter));
    return ret;
  }

  public int GetDstCount() {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetDstCount__SWIG_1(swigCPtr);
    return ret;
  }

  public FbxPropertyHandle GetDst(FbxConnectionPointFilter pFilter, int pIndex) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetDst__SWIG_0(swigCPtr, FbxConnectionPointFilter.getCPtr(pFilter), pIndex), true);
    return ret;
  }

  public FbxPropertyHandle GetDst(FbxConnectionPointFilter pFilter) {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetDst__SWIG_1(swigCPtr, FbxConnectionPointFilter.getCPtr(pFilter)), true);
    return ret;
  }

  public FbxPropertyHandle GetDst() {
    FbxPropertyHandle ret = new FbxPropertyHandle(FbxWrapperNativePINVOKE.FbxPropertyHandle_GetDst__SWIG_2(swigCPtr), true);
    return ret;
  }

  public bool DisconnectDst(FbxPropertyHandle pDst) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_DisconnectDst(swigCPtr, FbxPropertyHandle.getCPtr(pDst));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsConnectedDst(FbxPropertyHandle pDst) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsConnectedDst(swigCPtr, FbxPropertyHandle.getCPtr(pDst));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ClearConnectCache() {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_ClearConnectCache(swigCPtr);
  }

  public void WipeAllConnections() {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_WipeAllConnections(swigCPtr);
  }

  public bool HasMin() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_HasMin(swigCPtr);
    return ret;
  }

  public bool GetMin(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetMin(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool SetMin(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetMin(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool HasSoftMin() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_HasSoftMin(swigCPtr);
    return ret;
  }

  public bool GetSoftMin(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSoftMin(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool SetSoftMin(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetSoftMin(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool HasMax() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_HasMax(swigCPtr);
    return ret;
  }

  public bool GetMax(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetMax(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool SetMax(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetMax(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool HasSoftMax() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_HasSoftMax(swigCPtr);
    return ret;
  }

  public bool GetSoftMax(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetSoftMax(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool SetSoftMax(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetSoftMax(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public FbxPropertyFlags.EInheritType GetValueInheritType(bool pCheckReferences) {
    FbxPropertyFlags.EInheritType ret = (FbxPropertyFlags.EInheritType)FbxWrapperNativePINVOKE.FbxPropertyHandle_GetValueInheritType(swigCPtr, pCheckReferences);
    return ret;
  }

  public bool SetValueInheritType(FbxPropertyFlags.EInheritType pType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_SetValueInheritType(swigCPtr, (int)pType);
    return ret;
  }

  public bool GetDefaultValue(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetDefaultValue(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool Get(SWIGTYPE_p_void pValue, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_Get(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType);
    return ret;
  }

  public bool Set(SWIGTYPE_p_void pValue, EFbxType pValueType, bool pCheckValueEquality) {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_Set(swigCPtr, SWIGTYPE_p_void.getCPtr(pValue), (int)pValueType, pCheckValueEquality);
    return ret;
  }

  public void SetPageDataPtr(SWIGTYPE_p_void pData) {
    FbxWrapperNativePINVOKE.FbxPropertyHandle_SetPageDataPtr(swigCPtr, SWIGTYPE_p_void.getCPtr(pData));
  }

  public SWIGTYPE_p_void GetPageDataPtr() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetPageDataPtr(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public bool PushPropertiesToParentInstance() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_PushPropertiesToParentInstance(swigCPtr);
    return ret;
  }

  public bool IsAReferenceTo() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsAReferenceTo(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_void GetReferenceTo() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetReferenceTo(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public bool IsReferencedBy() {
    bool ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_IsReferencedBy(swigCPtr);
    return ret;
  }

  public int GetReferencedByCount() {
    int ret = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetReferencedByCount(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_void GetReferencedBy(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxPropertyHandle_GetReferencedBy(swigCPtr, pIndex);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

}

}

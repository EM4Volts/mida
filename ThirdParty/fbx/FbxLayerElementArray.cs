//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxLayerElementArray : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxLayerElementArray(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxLayerElementArray obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxLayerElementArray() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FbxWrapperNativePINVOKE.delete_FbxLayerElementArray(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxLayerElementArray(EFbxType pDataType) : this(FbxWrapperNativePINVOKE.new_FbxLayerElementArray((int)pDataType), true) {
  }

  public void ClearStatus() {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_ClearStatus(swigCPtr);
  }

  public LockAccessStatus.ELockAccessStatus GetStatus() {
    LockAccessStatus.ELockAccessStatus ret = (LockAccessStatus.ELockAccessStatus)FbxWrapperNativePINVOKE.FbxLayerElementArray_GetStatus(swigCPtr);
    return ret;
  }

  public bool IsWriteLocked() {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_IsWriteLocked(swigCPtr);
    return ret;
  }

  public int GetReadLockCount() {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetReadLockCount(swigCPtr);
    return ret;
  }

  public bool IsInUse() {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_IsInUse(swigCPtr);
    return ret;
  }

  public int ReadLock() {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_ReadLock(swigCPtr);
    return ret;
  }

  public int ReadUnlock() {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_ReadUnlock(swigCPtr);
    return ret;
  }

  public bool WriteLock() {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_WriteLock(swigCPtr);
    return ret;
  }

  public void WriteUnlock() {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_WriteUnlock(swigCPtr);
  }

  public bool ReadWriteLock() {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_ReadWriteLock(swigCPtr);
    return ret;
  }

  public void ReadWriteUnlock() {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_ReadWriteUnlock(swigCPtr);
  }

  public virtual SWIGTYPE_p_void GetLocked(FbxLayerElementArray.ELockMode pLockMode, EFbxType pDataType) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetLocked__SWIG_0(swigCPtr, (int)pLockMode, (int)pDataType);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_void GetLocked(FbxLayerElementArray.ELockMode pLockMode) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetLocked__SWIG_1(swigCPtr, (int)pLockMode);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_void GetLocked() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetLocked__SWIG_2(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public virtual void Release(SWIGTYPE_p_p_void pDataPtr, EFbxType pDataType) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_Release__SWIG_0(swigCPtr, SWIGTYPE_p_p_void.getCPtr(pDataPtr), (int)pDataType);
  }

  public void Release(SWIGTYPE_p_p_void pDataPtr) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_Release__SWIG_1(swigCPtr, SWIGTYPE_p_p_void.getCPtr(pDataPtr));
  }

  public virtual uint GetStride() {
    uint ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetStride(swigCPtr);
    return ret;
  }

  public int GetCount() {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetCount(swigCPtr);
    return ret;
  }

  public void SetCount(int pCount) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_SetCount(swigCPtr, pCount);
  }

  public void Clear() {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_Clear(swigCPtr);
  }

  public void Resize(int pItemCount) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_Resize(swigCPtr, pItemCount);
  }

  public void AddMultiple(int pItemCount) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_AddMultiple(swigCPtr, pItemCount);
  }

  public int Add(SWIGTYPE_p_void pItem, EFbxType pValueType) {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_Add(swigCPtr, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public int InsertAt(int pIndex, SWIGTYPE_p_void pItem, EFbxType pValueType) {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_InsertAt(swigCPtr, pIndex, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public void SetAt(int pIndex, SWIGTYPE_p_void pItem, EFbxType pValueType) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_SetAt(swigCPtr, pIndex, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
  }

  public void SetLast(SWIGTYPE_p_void pItem, EFbxType pValueType) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_SetLast(swigCPtr, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
  }

  public void RemoveAt(int pIndex, SWIGTYPE_p_p_void pItem, EFbxType pValueType) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_RemoveAt(swigCPtr, pIndex, SWIGTYPE_p_p_void.getCPtr(pItem), (int)pValueType);
  }

  public void RemoveLast(SWIGTYPE_p_p_void pItem, EFbxType pValueType) {
    FbxWrapperNativePINVOKE.FbxLayerElementArray_RemoveLast(swigCPtr, SWIGTYPE_p_p_void.getCPtr(pItem), (int)pValueType);
  }

  public bool RemoveIt(SWIGTYPE_p_p_void pItem, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_RemoveIt(swigCPtr, SWIGTYPE_p_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public bool GetAt(int pIndex, SWIGTYPE_p_p_void pItem, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetAt(swigCPtr, pIndex, SWIGTYPE_p_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public bool GetFirst(SWIGTYPE_p_p_void pItem, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetFirst(swigCPtr, SWIGTYPE_p_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public bool GetLast(SWIGTYPE_p_p_void pItem, EFbxType pValueType) {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_GetLast(swigCPtr, SWIGTYPE_p_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public int Find(SWIGTYPE_p_void pItem, EFbxType pValueType) {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_Find(swigCPtr, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public int FindAfter(int pAfterIndex, SWIGTYPE_p_void pItem, EFbxType pValueType) {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_FindAfter(swigCPtr, pAfterIndex, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public int FindBefore(int pBeforeIndex, SWIGTYPE_p_void pItem, EFbxType pValueType) {
    int ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_FindBefore(swigCPtr, pBeforeIndex, SWIGTYPE_p_void.getCPtr(pItem), (int)pValueType);
    return ret;
  }

  public bool IsEqual(FbxLayerElementArray pArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxLayerElementArray_IsEqual(swigCPtr, FbxLayerElementArray.getCPtr(pArray));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum ELockMode {
    eReadLock = 1,
    eWriteLock = 2,
    eReadWriteLock = 3
  }

}

}

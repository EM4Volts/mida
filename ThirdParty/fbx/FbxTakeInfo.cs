//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxTakeInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxTakeInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxTakeInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxTakeInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FbxWrapperNativePINVOKE.delete_FbxTakeInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxTakeInfo() : this(FbxWrapperNativePINVOKE.new_FbxTakeInfo__SWIG_0(), true) {
  }

  public FbxTakeInfo(FbxTakeInfo pTakeInfo) : this(FbxWrapperNativePINVOKE.new_FbxTakeInfo__SWIG_1(FbxTakeInfo.getCPtr(pTakeInfo)), true) {
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxTakeInfo assign(FbxTakeInfo pTakeInfo) {
    FbxTakeInfo ret = new FbxTakeInfo(FbxWrapperNativePINVOKE.FbxTakeInfo_assign(swigCPtr, FbxTakeInfo.getCPtr(pTakeInfo)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxString mName {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mName_set(swigCPtr, FbxString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mName_get(swigCPtr);
      FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
      return ret;
    } 
  }

  public FbxString mImportName {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mImportName_set(swigCPtr, FbxString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mImportName_get(swigCPtr);
      FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
      return ret;
    } 
  }

  public FbxString mDescription {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mDescription_set(swigCPtr, FbxString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mDescription_get(swigCPtr);
      FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
      return ret;
    } 
  }

  public bool mSelect {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mSelect_set(swigCPtr, value);
    } 
    get {
      bool ret = FbxWrapperNativePINVOKE.FbxTakeInfo_mSelect_get(swigCPtr);
      return ret;
    } 
  }

  public FbxTimeSpan mLocalTimeSpan {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mLocalTimeSpan_set(swigCPtr, FbxTimeSpan.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mLocalTimeSpan_get(swigCPtr);
      FbxTimeSpan ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTimeSpan(cPtr, false);
      return ret;
    } 
  }

  public FbxTimeSpan mReferenceTimeSpan {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mReferenceTimeSpan_set(swigCPtr, FbxTimeSpan.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mReferenceTimeSpan_get(swigCPtr);
      FbxTimeSpan ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTimeSpan(cPtr, false);
      return ret;
    } 
  }

  public FbxTime mImportOffset {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mImportOffset_set(swigCPtr, FbxTime.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mImportOffset_get(swigCPtr);
      FbxTime ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTime(cPtr, false);
      return ret;
    } 
  }

  public FbxTakeInfo.EImportOffsetType mImportOffsetType {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mImportOffsetType_set(swigCPtr, (int)value);
    } 
    get {
      FbxTakeInfo.EImportOffsetType ret = (FbxTakeInfo.EImportOffsetType)FbxWrapperNativePINVOKE.FbxTakeInfo_mImportOffsetType_get(swigCPtr);
      return ret;
    } 
  }

  public void CopyLayers(FbxTakeInfo pTakeInfo) {
    FbxWrapperNativePINVOKE.FbxTakeInfo_CopyLayers(swigCPtr, FbxTakeInfo.getCPtr(pTakeInfo));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_FbxArrayT_FbxTakeLayerInfo_p_t mLayerInfoList {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mLayerInfoList_set(swigCPtr, SWIGTYPE_p_FbxArrayT_FbxTakeLayerInfo_p_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTakeInfo_mLayerInfoList_get(swigCPtr);
      SWIGTYPE_p_FbxArrayT_FbxTakeLayerInfo_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxArrayT_FbxTakeLayerInfo_p_t(cPtr, false);
      return ret;
    } 
  }

  public int mCurrentLayer {
    set {
      FbxWrapperNativePINVOKE.FbxTakeInfo_mCurrentLayer_set(swigCPtr, value);
    } 
    get {
      int ret = FbxWrapperNativePINVOKE.FbxTakeInfo_mCurrentLayer_get(swigCPtr);
      return ret;
    } 
  }

  public enum EImportOffsetType {
    eAbsolute,
    eRelative
  }

}

}

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxAnimEvalState : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxAnimEvalState(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAnimEvalState obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAnimEvalState() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FbxWrapperNativePINVOKE.delete_FbxAnimEvalState(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxTime GetTime() {
    FbxTime ret = new FbxTime(FbxWrapperNativePINVOKE.FbxAnimEvalState_GetTime(swigCPtr), true);
    return ret;
  }

  public void Reset() {
    FbxWrapperNativePINVOKE.FbxAnimEvalState_Reset(swigCPtr);
  }

  public void Begin(FbxTime pTime) {
    FbxWrapperNativePINVOKE.FbxAnimEvalState_Begin(swigCPtr, FbxTime.getCPtr(pTime));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Flush(FbxNode pNode) {
    FbxWrapperNativePINVOKE.FbxAnimEvalState_Flush__SWIG_0(swigCPtr, FbxNode.getCPtr(pNode));
  }

  public void Flush(FbxProperty pProperty) {
    FbxWrapperNativePINVOKE.FbxAnimEvalState_Flush__SWIG_1(swigCPtr, FbxProperty.getCPtr(pProperty));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxNodeEvalState GetNodeEvalState(FbxNode pNode) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxAnimEvalState_GetNodeEvalState(swigCPtr, FbxNode.getCPtr(pNode));
    FbxNodeEvalState ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNodeEvalState(cPtr, false);
    return ret;
  }

  public FbxPropertyEvalState GetPropertyEvalState(FbxProperty pProperty) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxAnimEvalState_GetPropertyEvalState(swigCPtr, FbxProperty.getCPtr(pProperty));
    FbxPropertyEvalState ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyEvalState(cPtr, false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAnimCurveNode GetPropertyCurveNode(FbxProperty pProperty, FbxAnimLayer pAnimLayer) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxAnimEvalState_GetPropertyCurveNode(swigCPtr, FbxProperty.getCPtr(pProperty), FbxAnimLayer.getCPtr(pAnimLayer));
    FbxAnimCurveNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAnimCurveNode(cPtr, false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAnimEvalState() : this(FbxWrapperNativePINVOKE.new_FbxAnimEvalState(), true) {
  }

}

}

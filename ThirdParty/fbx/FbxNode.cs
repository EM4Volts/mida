//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxNode : FbxObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxNode(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FbxWrapperNativePINVOKE.FbxNode_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxNode obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(FbxWrapperNativePINVOKE.FbxNode_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxNode Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public new static FbxNode Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public FbxNode GetParent() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetParent__SWIG_0(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public bool AddChild(FbxNode pNode) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_AddChild(swigCPtr, FbxNode.getCPtr(pNode));
    return ret;
  }

  public FbxNode RemoveChild(FbxNode pNode) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RemoveChild(swigCPtr, FbxNode.getCPtr(pNode));
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public int GetChildCount(bool pRecursive) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetChildCount__SWIG_0(swigCPtr, pRecursive);
    return ret;
  }

  public int GetChildCount() {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetChildCount__SWIG_1(swigCPtr);
    return ret;
  }

  public FbxNode GetChild(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetChild__SWIG_0(swigCPtr, pIndex);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public FbxNode FindChild(string pName, bool pRecursive, bool pInitial) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_FindChild__SWIG_0(swigCPtr, pName, pRecursive, pInitial);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public FbxNode FindChild(string pName, bool pRecursive) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_FindChild__SWIG_1(swigCPtr, pName, pRecursive);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public FbxNode FindChild(string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_FindChild__SWIG_2(swigCPtr, pName);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public void SetTarget(FbxNode pNode) {
    FbxWrapperNativePINVOKE.FbxNode_SetTarget(swigCPtr, FbxNode.getCPtr(pNode));
  }

  public FbxNode GetTarget() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetTarget(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public void SetPostTargetRotation(FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetPostTargetRotation(swigCPtr, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetPostTargetRotation() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetPostTargetRotation(swigCPtr), true);
    return ret;
  }

  public void SetTargetUp(FbxNode pNode) {
    FbxWrapperNativePINVOKE.FbxNode_SetTargetUp(swigCPtr, FbxNode.getCPtr(pNode));
  }

  public FbxNode GetTargetUp() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetTargetUp(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public void SetTargetUpVector(FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetTargetUpVector(swigCPtr, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetTargetUpVector() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetTargetUpVector(swigCPtr), true);
    return ret;
  }

  public void SetVisibility(bool pIsVisible) {
    FbxWrapperNativePINVOKE.FbxNode_SetVisibility(swigCPtr, pIsVisible);
  }

  public bool GetVisibility() {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetVisibility(swigCPtr);
    return ret;
  }

  public void SetShadingMode(FbxNode.EShadingMode pShadingMode) {
    FbxWrapperNativePINVOKE.FbxNode_SetShadingMode(swigCPtr, (int)pShadingMode);
  }

  public FbxNode.EShadingMode GetShadingMode() {
    FbxNode.EShadingMode ret = (FbxNode.EShadingMode)FbxWrapperNativePINVOKE.FbxNode_GetShadingMode(swigCPtr);
    return ret;
  }

  public FbxNodeAttribute SetNodeAttribute(FbxNodeAttribute pNodeAttribute) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_SetNodeAttribute(swigCPtr, FbxNodeAttribute.getCPtr(pNodeAttribute));
    FbxNodeAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNodeAttribute(cPtr, false);
    return ret;
  }

  public FbxNodeAttribute GetNodeAttribute() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetNodeAttribute__SWIG_0(swigCPtr);
    FbxNodeAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNodeAttribute(cPtr, false);
    return ret;
  }

  public int GetNodeAttributeCount() {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetNodeAttributeCount(swigCPtr);
    return ret;
  }

  public int GetDefaultNodeAttributeIndex() {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetDefaultNodeAttributeIndex(swigCPtr);
    return ret;
  }

  public bool SetDefaultNodeAttributeIndex(int pIndex, FbxStatus pStatus) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_SetDefaultNodeAttributeIndex__SWIG_0(swigCPtr, pIndex, FbxStatus.getCPtr(pStatus));
    return ret;
  }

  public bool SetDefaultNodeAttributeIndex(int pIndex) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_SetDefaultNodeAttributeIndex__SWIG_1(swigCPtr, pIndex);
    return ret;
  }

  public FbxNodeAttribute GetNodeAttributeByIndex(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetNodeAttributeByIndex__SWIG_0(swigCPtr, pIndex);
    FbxNodeAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNodeAttribute(cPtr, false);
    return ret;
  }

  public int GetNodeAttributeIndex(FbxNodeAttribute pNodeAttribute, FbxStatus pStatus) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetNodeAttributeIndex__SWIG_0(swigCPtr, FbxNodeAttribute.getCPtr(pNodeAttribute), FbxStatus.getCPtr(pStatus));
    return ret;
  }

  public int GetNodeAttributeIndex(FbxNodeAttribute pNodeAttribute) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetNodeAttributeIndex__SWIG_1(swigCPtr, FbxNodeAttribute.getCPtr(pNodeAttribute));
    return ret;
  }

  public bool AddNodeAttribute(FbxNodeAttribute pNodeAttribute, FbxStatus pStatus) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_AddNodeAttribute__SWIG_0(swigCPtr, FbxNodeAttribute.getCPtr(pNodeAttribute), FbxStatus.getCPtr(pStatus));
    return ret;
  }

  public bool AddNodeAttribute(FbxNodeAttribute pNodeAttribute) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_AddNodeAttribute__SWIG_1(swigCPtr, FbxNodeAttribute.getCPtr(pNodeAttribute));
    return ret;
  }

  public FbxNodeAttribute RemoveNodeAttribute(FbxNodeAttribute pNodeAttribute) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RemoveNodeAttribute(swigCPtr, FbxNodeAttribute.getCPtr(pNodeAttribute));
    FbxNodeAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNodeAttribute(cPtr, false);
    return ret;
  }

  public FbxNodeAttribute RemoveNodeAttributeByIndex(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RemoveNodeAttributeByIndex(swigCPtr, pIndex);
    FbxNodeAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNodeAttribute(cPtr, false);
    return ret;
  }

  public FbxCachedEffect GetCachedEffect() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetCachedEffect(swigCPtr);
    FbxCachedEffect ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCachedEffect(cPtr, false);
    return ret;
  }

  public FbxLODGroup GetLodGroup() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetLodGroup(swigCPtr);
    FbxLODGroup ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLODGroup(cPtr, false);
    return ret;
  }

  public FbxNull GetNull() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetNull(swigCPtr);
    FbxNull ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNull(cPtr, false);
    return ret;
  }

  public FbxMarker GetMarker() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetMarker(swigCPtr);
    FbxMarker ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxMarker(cPtr, false);
    return ret;
  }

  public FbxSkeleton GetSkeleton() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetSkeleton(swigCPtr);
    FbxSkeleton ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSkeleton(cPtr, false);
    return ret;
  }

  public FbxGeometry GetGeometry() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetGeometry(swigCPtr);
    FbxGeometry ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGeometry(cPtr, false);
    return ret;
  }

  public FbxMesh GetMesh() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetMesh(swigCPtr);
    FbxMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxMesh(cPtr, false);
    return ret;
  }

  public FbxNurbs GetNurbs() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetNurbs(swigCPtr);
    FbxNurbs ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNurbs(cPtr, false);
    return ret;
  }

  public FbxNurbsSurface GetNurbsSurface() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetNurbsSurface(swigCPtr);
    FbxNurbsSurface ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNurbsSurface(cPtr, false);
    return ret;
  }

  public FbxNurbsCurve GetNurbsCurve() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetNurbsCurve(swigCPtr);
    FbxNurbsCurve ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNurbsCurve(cPtr, false);
    return ret;
  }

  public FbxLine GetLine() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetLine(swigCPtr);
    FbxLine ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLine(cPtr, false);
    return ret;
  }

  public FbxTrimNurbsSurface GetTrimNurbsSurface() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetTrimNurbsSurface(swigCPtr);
    FbxTrimNurbsSurface ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTrimNurbsSurface(cPtr, false);
    return ret;
  }

  public FbxSubDiv GetSubdiv() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetSubdiv(swigCPtr);
    FbxSubDiv ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSubDiv(cPtr, false);
    return ret;
  }

  public FbxPatch GetPatch() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetPatch(swigCPtr);
    FbxPatch ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPatch(cPtr, false);
    return ret;
  }

  public FbxCamera GetCamera() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetCamera__SWIG_0(swigCPtr);
    FbxCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCamera(cPtr, false);
    return ret;
  }

  public FbxCameraStereo GetCameraStereo() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetCameraStereo(swigCPtr);
    FbxCameraStereo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCameraStereo(cPtr, false);
    return ret;
  }

  public FbxCameraSwitcher GetCameraSwitcher() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetCameraSwitcher(swigCPtr);
    FbxCameraSwitcher ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCameraSwitcher(cPtr, false);
    return ret;
  }

  public FbxLight GetLight() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetLight__SWIG_0(swigCPtr);
    FbxLight ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLight(cPtr, false);
    return ret;
  }

  public FbxOpticalReference GetOpticalReference() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetOpticalReference(swigCPtr);
    FbxOpticalReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxOpticalReference(cPtr, false);
    return ret;
  }

  public void SetTransformationInheritType(FbxTransform.EInheritType pInheritType) {
    FbxWrapperNativePINVOKE.FbxNode_SetTransformationInheritType(swigCPtr, (int)pInheritType);
  }

  public void GetTransformationInheritType(SWIGTYPE_p_FbxTransform__EInheritType pInheritType) {
    FbxWrapperNativePINVOKE.FbxNode_GetTransformationInheritType(swigCPtr, SWIGTYPE_p_FbxTransform__EInheritType.getCPtr(pInheritType));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetPivotState(FbxNode.EPivotSet pPivotSet, FbxNode.EPivotState pPivotState) {
    FbxWrapperNativePINVOKE.FbxNode_SetPivotState(swigCPtr, (int)pPivotSet, (int)pPivotState);
  }

  public void GetPivotState(FbxNode.EPivotSet pPivotSet, SWIGTYPE_p_FbxNode__EPivotState pPivotState) {
    FbxWrapperNativePINVOKE.FbxNode_GetPivotState(swigCPtr, (int)pPivotSet, SWIGTYPE_p_FbxNode__EPivotState.getCPtr(pPivotState));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetRotationOrder(FbxNode.EPivotSet pPivotSet, FbxEuler.EOrder pRotationOrder) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationOrder(swigCPtr, (int)pPivotSet, (int)pRotationOrder);
  }

  public void GetRotationOrder(FbxNode.EPivotSet pPivotSet, SWIGTYPE_p_FbxEuler__EOrder pRotationOrder) {
    FbxWrapperNativePINVOKE.FbxNode_GetRotationOrder(swigCPtr, (int)pPivotSet, SWIGTYPE_p_FbxEuler__EOrder.getCPtr(pRotationOrder));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetUseRotationSpaceForLimitOnly(FbxNode.EPivotSet pPivotSet, bool pUseForLimitOnly) {
    FbxWrapperNativePINVOKE.FbxNode_SetUseRotationSpaceForLimitOnly(swigCPtr, (int)pPivotSet, pUseForLimitOnly);
  }

  public bool GetUseRotationSpaceForLimitOnly(FbxNode.EPivotSet pPivotSet) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetUseRotationSpaceForLimitOnly(swigCPtr, (int)pPivotSet);
    return ret;
  }

  public void SetRotationActive(bool pVal) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationActive(swigCPtr, pVal);
  }

  public bool GetRotationActive() {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetRotationActive(swigCPtr);
    return ret;
  }

  public void SetQuaternionInterpolation(FbxNode.EPivotSet pPivotSet, EFbxQuatInterpMode pQuatIterp) {
    FbxWrapperNativePINVOKE.FbxNode_SetQuaternionInterpolation(swigCPtr, (int)pPivotSet, (int)pQuatIterp);
  }

  public EFbxQuatInterpMode GetQuaternionInterpolation(FbxNode.EPivotSet pPivotSet) {
    EFbxQuatInterpMode ret = (EFbxQuatInterpMode)FbxWrapperNativePINVOKE.FbxNode_GetQuaternionInterpolation(swigCPtr, (int)pPivotSet);
    return ret;
  }

  public void SetRotationStiffness(FbxVector4 pRotationStiffness) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationStiffness(swigCPtr, FbxVector4.getCPtr(pRotationStiffness));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetRotationStiffness() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetRotationStiffness(swigCPtr), true);
    return ret;
  }

  public void SetMinDampRange(FbxVector4 pMinDampRange) {
    FbxWrapperNativePINVOKE.FbxNode_SetMinDampRange(swigCPtr, FbxVector4.getCPtr(pMinDampRange));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetMinDampRange() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetMinDampRange(swigCPtr), true);
    return ret;
  }

  public void SetMaxDampRange(FbxVector4 pMaxDampRange) {
    FbxWrapperNativePINVOKE.FbxNode_SetMaxDampRange(swigCPtr, FbxVector4.getCPtr(pMaxDampRange));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetMaxDampRange() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetMaxDampRange(swigCPtr), true);
    return ret;
  }

  public void SetMinDampStrength(FbxVector4 pMinDampStrength) {
    FbxWrapperNativePINVOKE.FbxNode_SetMinDampStrength(swigCPtr, FbxVector4.getCPtr(pMinDampStrength));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetMinDampStrength() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetMinDampStrength(swigCPtr), true);
    return ret;
  }

  public void SetMaxDampStrength(FbxVector4 pMaxDampStrength) {
    FbxWrapperNativePINVOKE.FbxNode_SetMaxDampStrength(swigCPtr, FbxVector4.getCPtr(pMaxDampStrength));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetMaxDampStrength() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetMaxDampStrength(swigCPtr), true);
    return ret;
  }

  public void SetPreferedAngle(FbxVector4 pPreferedAngle) {
    FbxWrapperNativePINVOKE.FbxNode_SetPreferedAngle(swigCPtr, FbxVector4.getCPtr(pPreferedAngle));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetPreferedAngle() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetPreferedAngle(swigCPtr), true);
    return ret;
  }

  public void SetRotationOffset(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationOffset(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetRotationOffset(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetRotationOffset(swigCPtr, (int)pPivotSet), false);
    return ret;
  }

  public void SetRotationPivot(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationPivot(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetRotationPivot(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetRotationPivot(swigCPtr, (int)pPivotSet), false);
    return ret;
  }

  public void SetPreRotation(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetPreRotation(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetPreRotation(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetPreRotation(swigCPtr, (int)pPivotSet), false);
    return ret;
  }

  public void SetPostRotation(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetPostRotation(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetPostRotation(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetPostRotation(swigCPtr, (int)pPivotSet), false);
    return ret;
  }

  public void SetScalingOffset(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetScalingOffset(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetScalingOffset(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetScalingOffset(swigCPtr, (int)pPivotSet), false);
    return ret;
  }

  public void SetScalingPivot(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetScalingPivot(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetScalingPivot(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetScalingPivot(swigCPtr, (int)pPivotSet), false);
    return ret;
  }

  public void SetGeometricTranslation(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetGeometricTranslation(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetGeometricTranslation(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetGeometricTranslation(swigCPtr, (int)pPivotSet), true);
    return ret;
  }

  public void SetGeometricRotation(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetGeometricRotation(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetGeometricRotation(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetGeometricRotation(swigCPtr, (int)pPivotSet), true);
    return ret;
  }

  public void SetGeometricScaling(FbxNode.EPivotSet pPivotSet, FbxVector4 pVector) {
    FbxWrapperNativePINVOKE.FbxNode_SetGeometricScaling(swigCPtr, (int)pPivotSet, FbxVector4.getCPtr(pVector));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetGeometricScaling(FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_GetGeometricScaling(swigCPtr, (int)pPivotSet), true);
    return ret;
  }

  public void ResetPivotSet(FbxNode.EPivotSet pPivotSet) {
    FbxWrapperNativePINVOKE.FbxNode_ResetPivotSet(swigCPtr, (int)pPivotSet);
  }

  public void ConvertPivotAnimationRecursive(FbxAnimStack pAnimStack, FbxNode.EPivotSet pConversionTarget, double pFrameRate, bool pKeyReduce) {
    FbxWrapperNativePINVOKE.FbxNode_ConvertPivotAnimationRecursive__SWIG_0(swigCPtr, FbxAnimStack.getCPtr(pAnimStack), (int)pConversionTarget, pFrameRate, pKeyReduce);
  }

  public void ConvertPivotAnimationRecursive(FbxAnimStack pAnimStack, FbxNode.EPivotSet pConversionTarget, double pFrameRate) {
    FbxWrapperNativePINVOKE.FbxNode_ConvertPivotAnimationRecursive__SWIG_1(swigCPtr, FbxAnimStack.getCPtr(pAnimStack), (int)pConversionTarget, pFrameRate);
  }

  public void ResetPivotSetAndConvertAnimation(double pFrameRate, bool pKeyReduce, bool pToNodeCenter, bool pForceResetLimits) {
    FbxWrapperNativePINVOKE.FbxNode_ResetPivotSetAndConvertAnimation__SWIG_0(swigCPtr, pFrameRate, pKeyReduce, pToNodeCenter, pForceResetLimits);
  }

  public void ResetPivotSetAndConvertAnimation(double pFrameRate, bool pKeyReduce, bool pToNodeCenter) {
    FbxWrapperNativePINVOKE.FbxNode_ResetPivotSetAndConvertAnimation__SWIG_1(swigCPtr, pFrameRate, pKeyReduce, pToNodeCenter);
  }

  public void ResetPivotSetAndConvertAnimation(double pFrameRate, bool pKeyReduce) {
    FbxWrapperNativePINVOKE.FbxNode_ResetPivotSetAndConvertAnimation__SWIG_2(swigCPtr, pFrameRate, pKeyReduce);
  }

  public void ResetPivotSetAndConvertAnimation(double pFrameRate) {
    FbxWrapperNativePINVOKE.FbxNode_ResetPivotSetAndConvertAnimation__SWIG_3(swigCPtr, pFrameRate);
  }

  public void ResetPivotSetAndConvertAnimation() {
    FbxWrapperNativePINVOKE.FbxNode_ResetPivotSetAndConvertAnimation__SWIG_4(swigCPtr);
  }

  public void SetRotationPivotAsCenterRecursive(FbxVector4 pParentGeometricOffset) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationPivotAsCenterRecursive__SWIG_0(swigCPtr, FbxVector4.getCPtr(pParentGeometricOffset));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetRotationPivotAsCenterRecursive() {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationPivotAsCenterRecursive__SWIG_1(swigCPtr);
  }

  public FbxAnimEvaluator GetAnimationEvaluator() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetAnimationEvaluator(swigCPtr);
    FbxAnimEvaluator ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAnimEvaluator(cPtr, false);
    return ret;
  }

  public FbxAMatrix EvaluateGlobalTransform(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget, bool pForceEval) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalTransform__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget, pForceEval), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateGlobalTransform(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalTransform__SWIG_1(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateGlobalTransform(FbxTime pTime, FbxNode.EPivotSet pPivotSet) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalTransform__SWIG_2(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateGlobalTransform(FbxTime pTime) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalTransform__SWIG_3(swigCPtr, FbxTime.getCPtr(pTime)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateGlobalTransform() {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalTransform__SWIG_4(swigCPtr), false);
    return ret;
  }

  public FbxAMatrix EvaluateLocalTransform(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget, bool pForceEval) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTransform__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget, pForceEval), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateLocalTransform(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTransform__SWIG_1(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateLocalTransform(FbxTime pTime, FbxNode.EPivotSet pPivotSet) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTransform__SWIG_2(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateLocalTransform(FbxTime pTime) {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTransform__SWIG_3(swigCPtr, FbxTime.getCPtr(pTime)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix EvaluateLocalTransform() {
    FbxAMatrix ret = new FbxAMatrix(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTransform__SWIG_4(swigCPtr), false);
    return ret;
  }

  public FbxVector4 EvaluateLocalTranslation(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget, bool pForceEval) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTranslation__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget, pForceEval), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalTranslation(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTranslation__SWIG_1(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalTranslation(FbxTime pTime, FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTranslation__SWIG_2(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalTranslation(FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTranslation__SWIG_3(swigCPtr, FbxTime.getCPtr(pTime)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalTranslation() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalTranslation__SWIG_4(swigCPtr), false);
    return ret;
  }

  public FbxVector4 EvaluateLocalRotation(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget, bool pForceEval) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalRotation__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget, pForceEval), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalRotation(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalRotation__SWIG_1(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalRotation(FbxTime pTime, FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalRotation__SWIG_2(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalRotation(FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalRotation__SWIG_3(swigCPtr, FbxTime.getCPtr(pTime)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalRotation() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalRotation__SWIG_4(swigCPtr), false);
    return ret;
  }

  public FbxVector4 EvaluateLocalScaling(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget, bool pForceEval) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalScaling__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget, pForceEval), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalScaling(FbxTime pTime, FbxNode.EPivotSet pPivotSet, bool pApplyTarget) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalScaling__SWIG_1(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet, pApplyTarget), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalScaling(FbxTime pTime, FbxNode.EPivotSet pPivotSet) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalScaling__SWIG_2(swigCPtr, FbxTime.getCPtr(pTime), (int)pPivotSet), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalScaling(FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalScaling__SWIG_3(swigCPtr, FbxTime.getCPtr(pTime)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLocalScaling() {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_EvaluateLocalScaling__SWIG_4(swigCPtr), false);
    return ret;
  }

  public bool EvaluateGlobalBoundingBoxMinMaxCenter(FbxVector4 pBBoxMin, FbxVector4 pBBoxMax, FbxVector4 pBBoxCenter, FbxTime pTime) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalBoundingBoxMinMaxCenter__SWIG_0(swigCPtr, FbxVector4.getCPtr(pBBoxMin), FbxVector4.getCPtr(pBBoxMax), FbxVector4.getCPtr(pBBoxCenter), FbxTime.getCPtr(pTime));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EvaluateGlobalBoundingBoxMinMaxCenter(FbxVector4 pBBoxMin, FbxVector4 pBBoxMax, FbxVector4 pBBoxCenter) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_EvaluateGlobalBoundingBoxMinMaxCenter__SWIG_1(swigCPtr, FbxVector4.getCPtr(pBBoxMin), FbxVector4.getCPtr(pBBoxMax), FbxVector4.getCPtr(pBBoxCenter));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EvaluateRayIntersectionPoint(FbxVector4 pOut, FbxVector4 pRayOrigin, FbxVector4 pRayDir, bool pCulling, FbxTime pTime) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_EvaluateRayIntersectionPoint__SWIG_0(swigCPtr, FbxVector4.getCPtr(pOut), FbxVector4.getCPtr(pRayOrigin), FbxVector4.getCPtr(pRayDir), pCulling, FbxTime.getCPtr(pTime));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EvaluateRayIntersectionPoint(FbxVector4 pOut, FbxVector4 pRayOrigin, FbxVector4 pRayDir, bool pCulling) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_EvaluateRayIntersectionPoint__SWIG_1(swigCPtr, FbxVector4.getCPtr(pOut), FbxVector4.getCPtr(pRayOrigin), FbxVector4.getCPtr(pRayDir), pCulling);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EvaluateRayIntersectionPoint(FbxVector4 pOut, FbxVector4 pRayOrigin, FbxVector4 pRayDir) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_EvaluateRayIntersectionPoint__SWIG_2(swigCPtr, FbxVector4.getCPtr(pOut), FbxVector4.getCPtr(pRayOrigin), FbxVector4.getCPtr(pRayDir));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetCharacterLinkCount() {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetCharacterLinkCount(swigCPtr);
    return ret;
  }

  public bool GetCharacterLink(int pIndex, SWIGTYPE_p_p_FbxCharacter pCharacter, SWIGTYPE_p_int pCharacterLinkType, SWIGTYPE_p_int pNodeId, SWIGTYPE_p_int pNodeSubId) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetCharacterLink(swigCPtr, pIndex, SWIGTYPE_p_p_FbxCharacter.getCPtr(pCharacter), SWIGTYPE_p_int.getCPtr(pCharacterLinkType), SWIGTYPE_p_int.getCPtr(pNodeId), SWIGTYPE_p_int.getCPtr(pNodeSubId));
    return ret;
  }

  public int FindCharacterLink(FbxCharacter pCharacter, int pCharacterLinkType, int pNodeId, int pNodeSubId) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_FindCharacterLink(swigCPtr, FbxCharacter.getCPtr(pCharacter), pCharacterLinkType, pNodeId, pNodeSubId);
    return ret;
  }

  public bool GetAnimationInterval(FbxTimeSpan pInterval, FbxAnimStack pAnimStack, int pAnimLayerId) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetAnimationInterval__SWIG_0(swigCPtr, FbxTimeSpan.getCPtr(pInterval), FbxAnimStack.getCPtr(pAnimStack), pAnimLayerId);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetAnimationInterval(FbxTimeSpan pInterval, FbxAnimStack pAnimStack) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetAnimationInterval__SWIG_1(swigCPtr, FbxTimeSpan.getCPtr(pInterval), FbxAnimStack.getCPtr(pAnimStack));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetAnimationInterval(FbxTimeSpan pInterval) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_GetAnimationInterval__SWIG_2(swigCPtr, FbxTimeSpan.getCPtr(pInterval));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int AddMaterial(FbxSurfaceMaterial pMaterial) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_AddMaterial(swigCPtr, FbxSurfaceMaterial.getCPtr(pMaterial));
    return ret;
  }

  public bool RemoveMaterial(FbxSurfaceMaterial pMaterial) {
    bool ret = FbxWrapperNativePINVOKE.FbxNode_RemoveMaterial(swigCPtr, FbxSurfaceMaterial.getCPtr(pMaterial));
    return ret;
  }

  public int GetMaterialCount() {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetMaterialCount(swigCPtr);
    return ret;
  }

  public FbxSurfaceMaterial GetMaterial(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GetMaterial(swigCPtr, pIndex);
    FbxSurfaceMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSurfaceMaterial(cPtr, false);
    return ret;
  }

  public void RemoveAllMaterials() {
    FbxWrapperNativePINVOKE.FbxNode_RemoveAllMaterials(swigCPtr);
  }

  public int GetMaterialIndex(string pName) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_GetMaterialIndex(swigCPtr, pName);
    return ret;
  }

  public FbxPropertyTFbxDouble3 LclTranslation {
    set {
      FbxWrapperNativePINVOKE.FbxNode_LclTranslation_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_LclTranslation_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 LclRotation {
    set {
      FbxWrapperNativePINVOKE.FbxNode_LclRotation_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_LclRotation_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 LclScaling {
    set {
      FbxWrapperNativePINVOKE.FbxNode_LclScaling_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_LclScaling_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble Visibility {
    set {
      FbxWrapperNativePINVOKE.FbxNode_Visibility_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Visibility_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t VisibilityInheritance {
    set {
      FbxWrapperNativePINVOKE.FbxNode_VisibilityInheritance_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_VisibilityInheritance_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_EFbxQuatInterpMode_t QuaternionInterpolate {
    set {
      FbxWrapperNativePINVOKE.FbxNode_QuaternionInterpolate_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_EFbxQuatInterpMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_QuaternionInterpolate_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_EFbxQuatInterpMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_EFbxQuatInterpMode_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 RotationOffset {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationOffset_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationOffset_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 RotationPivot {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationPivot_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationPivot_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 ScalingOffset {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingOffset_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingOffset_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 ScalingPivot {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingPivot_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingPivot_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationActive {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationActive_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationActive_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 TranslationMin {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMin_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMin_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 TranslationMax {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMax_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMax_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationMinX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMinX_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMinX_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationMinY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMinY_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMinY_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationMinZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMinZ_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMinZ_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationMaxX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMaxX_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMaxX_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationMaxY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMaxY_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMaxY_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TranslationMaxZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_TranslationMaxZ_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_TranslationMaxZ_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxEuler__EOrder_t RotationOrder {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationOrder_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxEuler__EOrder_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationOrder_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxEuler__EOrder_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxEuler__EOrder_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationSpaceForLimitOnly {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationSpaceForLimitOnly_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationSpaceForLimitOnly_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble RotationStiffnessX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationStiffnessX_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationStiffnessX_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble RotationStiffnessY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationStiffnessY_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationStiffnessY_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble RotationStiffnessZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationStiffnessZ_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationStiffnessZ_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble AxisLen {
    set {
      FbxWrapperNativePINVOKE.FbxNode_AxisLen_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_AxisLen_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 PreRotation {
    set {
      FbxWrapperNativePINVOKE.FbxNode_PreRotation_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_PreRotation_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 PostRotation {
    set {
      FbxWrapperNativePINVOKE.FbxNode_PostRotation_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_PostRotation_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationActive {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationActive_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationActive_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 RotationMin {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMin_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMin_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 RotationMax {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMax_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMax_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationMinX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMinX_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMinX_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationMinY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMinY_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMinY_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationMinZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMinZ_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMinZ_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationMaxX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMaxX_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMaxX_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationMaxY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMaxY_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMaxY_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t RotationMaxZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_RotationMaxZ_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_RotationMaxZ_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTEInheritType InheritType {
    set {
      FbxWrapperNativePINVOKE.FbxNode_InheritType_set(swigCPtr, FbxPropertyTEInheritType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_InheritType_get(swigCPtr);
      FbxPropertyTEInheritType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTEInheritType(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingActive {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingActive_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingActive_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 ScalingMin {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMin_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMin_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 ScalingMax {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMax_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMax_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingMinX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMinX_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMinX_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingMinY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMinY_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMinY_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingMinZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMinZ_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMinZ_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingMaxX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMaxX_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMaxX_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingMaxY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMaxY_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMaxY_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ScalingMaxZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_ScalingMaxZ_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_ScalingMaxZ_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 GeometricTranslation {
    set {
      FbxWrapperNativePINVOKE.FbxNode_GeometricTranslation_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GeometricTranslation_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 GeometricRotation {
    set {
      FbxWrapperNativePINVOKE.FbxNode_GeometricRotation_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GeometricRotation_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 GeometricScaling {
    set {
      FbxWrapperNativePINVOKE.FbxNode_GeometricScaling_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_GeometricScaling_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MinDampRangeX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MinDampRangeX_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MinDampRangeX_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MinDampRangeY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MinDampRangeY_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MinDampRangeY_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MinDampRangeZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MinDampRangeZ_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MinDampRangeZ_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MaxDampRangeX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MaxDampRangeX_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MaxDampRangeX_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MaxDampRangeY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MaxDampRangeY_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MaxDampRangeY_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MaxDampRangeZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MaxDampRangeZ_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MaxDampRangeZ_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MinDampStrengthX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MinDampStrengthX_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MinDampStrengthX_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MinDampStrengthY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MinDampStrengthY_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MinDampStrengthY_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MinDampStrengthZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MinDampStrengthZ_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MinDampStrengthZ_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MaxDampStrengthX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MaxDampStrengthX_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MaxDampStrengthX_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MaxDampStrengthY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MaxDampStrengthY_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MaxDampStrengthY_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble MaxDampStrengthZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_MaxDampStrengthZ_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_MaxDampStrengthZ_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble PreferedAngleX {
    set {
      FbxWrapperNativePINVOKE.FbxNode_PreferedAngleX_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_PreferedAngleX_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble PreferedAngleY {
    set {
      FbxWrapperNativePINVOKE.FbxNode_PreferedAngleY_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_PreferedAngleY_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble PreferedAngleZ {
    set {
      FbxWrapperNativePINVOKE.FbxNode_PreferedAngleZ_set(swigCPtr, FbxPropertyTFbxDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_PreferedAngleZ_get(swigCPtr);
      FbxPropertyTFbxDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t LookAtProperty {
    set {
      FbxWrapperNativePINVOKE.FbxNode_LookAtProperty_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_LookAtProperty_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t UpVectorProperty {
    set {
      FbxWrapperNativePINVOKE.FbxNode_UpVectorProperty_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_UpVectorProperty_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxObject_p_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t Show {
    set {
      FbxWrapperNativePINVOKE.FbxNode_Show_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Show_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t NegativePercentShapeSupport {
    set {
      FbxWrapperNativePINVOKE.FbxNode_NegativePercentShapeSupport_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_NegativePercentShapeSupport_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t DefaultAttributeIndex {
    set {
      FbxWrapperNativePINVOKE.FbxNode_DefaultAttributeIndex_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_DefaultAttributeIndex_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t Freeze {
    set {
      FbxWrapperNativePINVOKE.FbxNode_Freeze_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Freeze_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t LODBox {
    set {
      FbxWrapperNativePINVOKE.FbxNode_LODBox_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_LODBox_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public class Pivot : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal Pivot(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Pivot obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~Pivot() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            FbxWrapperNativePINVOKE.delete_FbxNode_Pivot(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public static FbxVector4 sZeroVector {
      get {
        global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Pivot_sZeroVector_get();
        FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
        return ret;
      } 
    }
  
    public static FbxVector4 sOneVector {
      get {
        global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_Pivot_sOneVector_get();
        FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
        return ret;
      } 
    }
  
    public Pivot() : this(FbxWrapperNativePINVOKE.new_FbxNode_Pivot(), true) {
    }
  
    public void Reset() {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_Reset(swigCPtr);
    }
  
    public FbxVector4 GetRotationOffset() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetRotationOffset(swigCPtr), false);
      return ret;
    }
  
    public void SetRotationOffset(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetRotationOffset(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetRotationPivot() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetRotationPivot(swigCPtr), false);
      return ret;
    }
  
    public void SetRotationPivot(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetRotationPivot(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetPreRotation() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetPreRotation(swigCPtr), false);
      return ret;
    }
  
    public void SetPreRotation(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetPreRotation(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetPostRotation() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetPostRotation(swigCPtr), false);
      return ret;
    }
  
    public void SetPostRotation(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetPostRotation(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetScalingOffset() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetScalingOffset(swigCPtr), false);
      return ret;
    }
  
    public void SetScalingOffset(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetScalingOffset(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetScalingPivot() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetScalingPivot(swigCPtr), false);
      return ret;
    }
  
    public void SetScalingPivot(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetScalingPivot(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetGeometricTranslation() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetGeometricTranslation(swigCPtr), false);
      return ret;
    }
  
    public void SetGeometricTranslation(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetGeometricTranslation(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetGeometricRotation() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetGeometricRotation(swigCPtr), false);
      return ret;
    }
  
    public void SetGeometricRotation(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetGeometricRotation(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetGeometricScaling() {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivot_GetGeometricScaling(swigCPtr), false);
      return ret;
    }
  
    public void SetGeometricScaling(FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetGeometricScaling(swigCPtr, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxEuler.EOrder GetRotationOrder() {
      FbxEuler.EOrder ret = (FbxEuler.EOrder)FbxWrapperNativePINVOKE.FbxNode_Pivot_GetRotationOrder(swigCPtr);
      return ret;
    }
  
    public void SetRotationOrder(FbxEuler.EOrder pROrder) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetRotationOrder(swigCPtr, (int)pROrder);
    }
  
    public bool GetRotationSpaceForLimitOnly() {
      bool ret = FbxWrapperNativePINVOKE.FbxNode_Pivot_GetRotationSpaceForLimitOnly(swigCPtr);
      return ret;
    }
  
    public void SetRotationSpaceForLimitOnly(bool pVal) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetRotationSpaceForLimitOnly(swigCPtr, pVal);
    }
  
    public EFbxQuatInterpMode GetQuaternionInterpolate() {
      EFbxQuatInterpMode ret = (EFbxQuatInterpMode)FbxWrapperNativePINVOKE.FbxNode_Pivot_GetQuaternionInterpolate(swigCPtr);
      return ret;
    }
  
    public void SetQuaternionInterpolate(EFbxQuatInterpMode pVal) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetQuaternionInterpolate(swigCPtr, (int)pVal);
    }
  
    public FbxNode.EPivotState GetPivotState() {
      FbxNode.EPivotState ret = (FbxNode.EPivotState)FbxWrapperNativePINVOKE.FbxNode_Pivot_GetPivotState(swigCPtr);
      return ret;
    }
  
    public void SetPivotState(FbxNode.EPivotState pVal) {
      FbxWrapperNativePINVOKE.FbxNode_Pivot_SetPivotState(swigCPtr, (int)pVal);
    }
  
  }

  public class Pivots : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal Pivots(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Pivots obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~Pivots() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            FbxWrapperNativePINVOKE.delete_FbxNode_Pivots(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public Pivots() : this(FbxWrapperNativePINVOKE.new_FbxNode_Pivots(), true) {
    }
  
    public FbxNode.Pivot Get(int id) {
      FbxNode.Pivot ret = new FbxNode.Pivot(FbxWrapperNativePINVOKE.FbxNode_Pivots_Get(swigCPtr, id), false);
      return ret;
    }
  
    public FbxVector4 GetRotationOffset(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetRotationOffset(swigCPtr, id), false);
      return ret;
    }
  
    public void SetRotationOffset(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetRotationOffset(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetRotationPivot(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetRotationPivot(swigCPtr, id), false);
      return ret;
    }
  
    public void SetRotationPivot(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetRotationPivot(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetPreRotation(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetPreRotation(swigCPtr, id), false);
      return ret;
    }
  
    public void SetPreRotation(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetPreRotation(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetPostRotation(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetPostRotation(swigCPtr, id), false);
      return ret;
    }
  
    public void SetPostRotation(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetPostRotation(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetScalingOffset(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetScalingOffset(swigCPtr, id), false);
      return ret;
    }
  
    public void SetScalingOffset(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetScalingOffset(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetScalingPivot(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetScalingPivot(swigCPtr, id), false);
      return ret;
    }
  
    public void SetScalingPivot(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetScalingPivot(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetGeometricTranslation(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetGeometricTranslation(swigCPtr, id), false);
      return ret;
    }
  
    public void SetGeometricTranslation(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetGeometricTranslation(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetGeometricRotation(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetGeometricRotation(swigCPtr, id), false);
      return ret;
    }
  
    public void SetGeometricRotation(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetGeometricRotation(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxVector4 GetGeometricScaling(int id) {
      FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxNode_Pivots_GetGeometricScaling(swigCPtr, id), false);
      return ret;
    }
  
    public void SetGeometricScaling(int id, FbxVector4 pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetGeometricScaling(swigCPtr, id, FbxVector4.getCPtr(pV));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    }
  
    public bool GetRotationSpaceForLimitOnly(int id) {
      bool ret = FbxWrapperNativePINVOKE.FbxNode_Pivots_GetRotationSpaceForLimitOnly(swigCPtr, id);
      return ret;
    }
  
    public void SetRotationSpaceForLimitOnly(int id, bool pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetRotationSpaceForLimitOnly(swigCPtr, id, pV);
    }
  
    public EFbxQuatInterpMode GetQuaternionInterpolate(int id) {
      EFbxQuatInterpMode ret = (EFbxQuatInterpMode)FbxWrapperNativePINVOKE.FbxNode_Pivots_GetQuaternionInterpolate(swigCPtr, id);
      return ret;
    }
  
    public void SetQuaternionInterpolate(int id, EFbxQuatInterpMode pV) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetQuaternionInterpolate(swigCPtr, id, (int)pV);
    }
  
    public FbxEuler.EOrder GetRotationOrder(int id) {
      FbxEuler.EOrder ret = (FbxEuler.EOrder)FbxWrapperNativePINVOKE.FbxNode_Pivots_GetRotationOrder(swigCPtr, id);
      return ret;
    }
  
    public void SetRotationOrder(int id, FbxEuler.EOrder pROrder) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetRotationOrder(swigCPtr, id, (int)pROrder);
    }
  
    public FbxNode.EPivotState GetPivotState(int id) {
      FbxNode.EPivotState ret = (FbxNode.EPivotState)FbxWrapperNativePINVOKE.FbxNode_Pivots_GetPivotState(swigCPtr, id);
      return ret;
    }
  
    public void SetPivotState(int id, FbxNode.EPivotState pVal) {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_SetPivotState(swigCPtr, id, (int)pVal);
    }
  
    public void Reset() {
      FbxWrapperNativePINVOKE.FbxNode_Pivots_Reset(swigCPtr);
    }
  
  }

  public class LinkToCharacter : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal LinkToCharacter(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LinkToCharacter obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~LinkToCharacter() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            FbxWrapperNativePINVOKE.delete_FbxNode_LinkToCharacter(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public bool eq(FbxNode.LinkToCharacter pLinkToCharacter) {
      bool ret = FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_eq(swigCPtr, FbxNode.LinkToCharacter.getCPtr(pLinkToCharacter));
      if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
    public FbxCharacter mCharacter {
      set {
        FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mCharacter_set(swigCPtr, FbxCharacter.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mCharacter_get(swigCPtr);
        FbxCharacter ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCharacter(cPtr, false);
        return ret;
      } 
    }
  
    public int mType {
      set {
        FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mType_set(swigCPtr, value);
      } 
      get {
        int ret = FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mType_get(swigCPtr);
        return ret;
      } 
    }
  
    public int mIndex {
      set {
        FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mIndex_set(swigCPtr, value);
      } 
      get {
        int ret = FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mIndex_get(swigCPtr);
        return ret;
      } 
    }
  
    public int mSubIndex {
      set {
        FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mSubIndex_set(swigCPtr, value);
      } 
      get {
        int ret = FbxWrapperNativePINVOKE.FbxNode_LinkToCharacter_mSubIndex_get(swigCPtr);
        return ret;
      } 
    }
  
    public LinkToCharacter() : this(FbxWrapperNativePINVOKE.new_FbxNode_LinkToCharacter(), true) {
    }
  
  }

  public void AddChildName(string pChildName) {
    FbxWrapperNativePINVOKE.FbxNode_AddChildName(swigCPtr, pChildName);
  }

  public string GetChildName(uint pIndex) {
    string ret = FbxWrapperNativePINVOKE.FbxNode_GetChildName(swigCPtr, pIndex);
    return ret;
  }

  public uint GetChildNameCount() {
    uint ret = FbxWrapperNativePINVOKE.FbxNode_GetChildNameCount(swigCPtr);
    return ret;
  }

  public FbxTransform GetTransform() {
    FbxTransform ret = new FbxTransform(FbxWrapperNativePINVOKE.FbxNode_GetTransform(swigCPtr), false);
    return ret;
  }

  public FbxLimits GetTranslationLimits() {
    FbxLimits ret = new FbxLimits(FbxWrapperNativePINVOKE.FbxNode_GetTranslationLimits(swigCPtr), false);
    return ret;
  }

  public FbxLimits GetRotationLimits() {
    FbxLimits ret = new FbxLimits(FbxWrapperNativePINVOKE.FbxNode_GetRotationLimits(swigCPtr), false);
    return ret;
  }

  public FbxLimits GetScalingLimits() {
    FbxLimits ret = new FbxLimits(FbxWrapperNativePINVOKE.FbxNode_GetScalingLimits(swigCPtr), false);
    return ret;
  }

  public FbxNode.Pivots GetPivots() {
    FbxNode.Pivots ret = new FbxNode.Pivots(FbxWrapperNativePINVOKE.FbxNode_GetPivots(swigCPtr), false);
    return ret;
  }

  public void UpdatePivotsAndLimitsFromProperties() {
    FbxWrapperNativePINVOKE.FbxNode_UpdatePivotsAndLimitsFromProperties(swigCPtr);
  }

  public void UpdatePropertiesFromPivotsAndLimits() {
    FbxWrapperNativePINVOKE.FbxNode_UpdatePropertiesFromPivotsAndLimits(swigCPtr);
  }

  public void SetRotationActiveProperty(bool pVal) {
    FbxWrapperNativePINVOKE.FbxNode_SetRotationActiveProperty(swigCPtr, pVal);
  }

  public void PivotSetToMBTransform(FbxNode.EPivotSet pPivotSet) {
    FbxWrapperNativePINVOKE.FbxNode_PivotSetToMBTransform(swigCPtr, (int)pPivotSet);
  }

  public int AddCharacterLink(FbxCharacter pCharacter, int pCharacterLinkType, int pNodeId, int pNodeSubId) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_AddCharacterLink(swigCPtr, FbxCharacter.getCPtr(pCharacter), pCharacterLinkType, pNodeId, pNodeSubId);
    return ret;
  }

  public int RemoveCharacterLink(FbxCharacter pCharacter, int pCharacterLinkType, int pNodeId, int pNodeSubId) {
    int ret = FbxWrapperNativePINVOKE.FbxNode_RemoveCharacterLink(swigCPtr, FbxCharacter.getCPtr(pCharacter), pCharacterLinkType, pNodeId, pNodeSubId);
    return ret;
  }

  public FbxNode DeepCloneWithNodeAttributes() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxNode_DeepCloneWithNodeAttributes(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public override FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(FbxWrapperNativePINVOKE.FbxNode_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override string GetTypeName() {
    string ret = FbxWrapperNativePINVOKE.FbxNode_GetTypeName(swigCPtr);
    return ret;
  }

  public override FbxStringList GetTypeFlags() {
    FbxStringList ret = new FbxStringList(FbxWrapperNativePINVOKE.FbxNode_GetTypeFlags(swigCPtr), true);
    return ret;
  }

  public FbxNode.ECullingType mCullingType {
    set {
      FbxWrapperNativePINVOKE.FbxNode_mCullingType_set(swigCPtr, (int)value);
    } 
    get {
      FbxNode.ECullingType ret = (FbxNode.ECullingType)FbxWrapperNativePINVOKE.FbxNode_mCullingType_get(swigCPtr);
      return ret;
    } 
  }

  public bool mCorrectInheritType {
    set {
      FbxWrapperNativePINVOKE.FbxNode_mCorrectInheritType_set(swigCPtr, value);
    } 
    get {
      bool ret = FbxWrapperNativePINVOKE.FbxNode_mCorrectInheritType_get(swigCPtr);
      return ret;
    } 
  }

  public enum EShadingMode {
    eHardShading,
    eWireFrame,
    eFlatShading,
    eLightShading,
    eTextureShading,
    eFullShading
  }

  public enum EPivotSet {
    eSourcePivot,
    eDestinationPivot
  }

  public enum EPivotState {
    ePivotActive,
    ePivotReference
  }

  public enum ECullingType {
    eCullingOff,
    eCullingOnCCW,
    eCullingOnCW
  }

}

}

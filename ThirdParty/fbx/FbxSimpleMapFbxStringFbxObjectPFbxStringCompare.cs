//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxSimpleMapFbxStringFbxObjectPFbxStringCompare : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxSimpleMapFbxStringFbxObjectPFbxStringCompare(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxSimpleMapFbxStringFbxObjectPFbxStringCompare obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxSimpleMapFbxStringFbxObjectPFbxStringCompare() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FbxWrapperNativePINVOKE.delete_FbxSimpleMapFbxStringFbxObjectPFbxStringCompare(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public void Add(FbxString pKey, FbxObject pValue) {
    FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_Add(swigCPtr, FbxString.getCPtr(pKey), FbxObject.getCPtr(pValue));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType Find(FbxString pKey) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_Find__SWIG_0(swigCPtr, FbxString.getCPtr(pKey));
    SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType(cPtr, false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType Find(FbxObject pValue) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_Find__SWIG_1(swigCPtr, FbxObject.getCPtr(pValue));
    SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType(cPtr, false);
    return ret;
  }

  public void Remove(SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType pIterator) {
    FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_Remove(swigCPtr, SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType.getCPtr(pIterator));
  }

  public SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType GetFirst() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_GetFirst(swigCPtr);
    SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType GetNext(SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType pIterator) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_GetNext(swigCPtr, SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType.getCPtr(pIterator));
    SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxMapT_FbxString_FbxObject_p_FbxStringCompare_FbxBaseAllocator_t__RecordType(cPtr, false);
    return ret;
  }

  public void Clear() {
    FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_Clear(swigCPtr);
  }

  public void Reserve(int pSize) {
    FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_Reserve(swigCPtr, pSize);
  }

  public int GetCount() {
    int ret = FbxWrapperNativePINVOKE.FbxSimpleMapFbxStringFbxObjectPFbxStringCompare_GetCount(swigCPtr);
    return ret;
  }

  public FbxSimpleMapFbxStringFbxObjectPFbxStringCompare() : this(FbxWrapperNativePINVOKE.new_FbxSimpleMapFbxStringFbxObjectPFbxStringCompare(), true) {
  }

}

}

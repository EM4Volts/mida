//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxWrapperNative {
  public static SWIGTYPE_p_double new_DoubleArrayFunc(int nelements) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.new_DoubleArrayFunc(nelements);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static void delete_DoubleArrayFunc(SWIGTYPE_p_double ary) {
    FbxWrapperNativePINVOKE.delete_DoubleArrayFunc(SWIGTYPE_p_double.getCPtr(ary));
  }

  public static double DoubleArrayFunc_getitem(SWIGTYPE_p_double ary, int index) {
    double ret = FbxWrapperNativePINVOKE.DoubleArrayFunc_getitem(SWIGTYPE_p_double.getCPtr(ary), index);
    return ret;
  }

  public static void DoubleArrayFunc_setitem(SWIGTYPE_p_double ary, int index, double value) {
    FbxWrapperNativePINVOKE.DoubleArrayFunc_setitem(SWIGTYPE_p_double.getCPtr(ary), index, value);
  }

  public static SWIGTYPE_p_double new_DoubleArrayPtrFunc() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.new_DoubleArrayPtrFunc();
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_double copy_DoubleArrayPtrFunc(double value) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.copy_DoubleArrayPtrFunc(value);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static void delete_DoubleArrayPtrFunc(SWIGTYPE_p_double obj) {
    FbxWrapperNativePINVOKE.delete_DoubleArrayPtrFunc(SWIGTYPE_p_double.getCPtr(obj));
  }

  public static void DoubleArrayPtrFunc_assign(SWIGTYPE_p_double obj, double value) {
    FbxWrapperNativePINVOKE.DoubleArrayPtrFunc_assign(SWIGTYPE_p_double.getCPtr(obj), value);
  }

  public static double DoubleArrayPtrFunc_value(SWIGTYPE_p_double obj) {
    double ret = FbxWrapperNativePINVOKE.DoubleArrayPtrFunc_value(SWIGTYPE_p_double.getCPtr(obj));
    return ret;
  }

  public static sbyte FbxMin(sbyte arg0) {
    sbyte ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_0(arg0);
    return ret;
  }

  public static byte FbxMin(byte arg0) {
    byte ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_1(arg0);
    return ret;
  }

  public static short FbxMin(short arg0) {
    short ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_2(arg0);
    return ret;
  }

  public static ushort FbxMin(ushort arg0) {
    ushort ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_3(arg0);
    return ret;
  }

  public static int FbxMin(int arg0) {
    int ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_4(arg0);
    return ret;
  }

  public static uint FbxMin(uint arg0) {
    uint ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_5(arg0);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxMin(SWIGTYPE_p_signed___int64 arg0) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxMin__SWIG_6(SWIGTYPE_p_signed___int64.getCPtr(arg0)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ulong FbxMin(ulong arg0) {
    ulong ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_7(arg0);
    return ret;
  }

  public static float FbxMin(float arg0) {
    float ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_8(arg0);
    return ret;
  }

  public static double FbxMin(double arg0) {
    double ret = FbxWrapperNativePINVOKE.FbxMin__SWIG_9(arg0);
    return ret;
  }

  public static sbyte FbxMax(sbyte arg0) {
    sbyte ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_0(arg0);
    return ret;
  }

  public static byte FbxMax(byte arg0) {
    byte ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_1(arg0);
    return ret;
  }

  public static short FbxMax(short arg0) {
    short ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_2(arg0);
    return ret;
  }

  public static ushort FbxMax(ushort arg0) {
    ushort ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_3(arg0);
    return ret;
  }

  public static int FbxMax(int arg0) {
    int ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_4(arg0);
    return ret;
  }

  public static uint FbxMax(uint arg0) {
    uint ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_5(arg0);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxMax(SWIGTYPE_p_signed___int64 arg0) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxMax__SWIG_6(SWIGTYPE_p_signed___int64.getCPtr(arg0)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ulong FbxMax(ulong arg0) {
    ulong ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_7(arg0);
    return ret;
  }

  public static float FbxMax(float arg0) {
    float ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_8(arg0);
    return ret;
  }

  public static double FbxMax(double arg0) {
    double ret = FbxWrapperNativePINVOKE.FbxMax__SWIG_9(arg0);
    return ret;
  }

  public static int COLLADA_MORPH_WEIGHT_TO_FBX_RATIO {
    get {
      int ret = FbxWrapperNativePINVOKE.COLLADA_MORPH_WEIGHT_TO_FBX_RATIO_get();
      return ret;
    } 
  }

  public static void FbxAssertSetProc(SWIGTYPE_p_f_p_q_const__char_p_q_const__char_q_const__unsigned_int_p_q_const__char__void pAssertProc) {
    FbxWrapperNativePINVOKE.FbxAssertSetProc(SWIGTYPE_p_f_p_q_const__char_p_q_const__char_q_const__unsigned_int_p_q_const__char__void.getCPtr(pAssertProc));
  }

  public static void FbxAssertSetDefaultProc() {
    FbxWrapperNativePINVOKE.FbxAssertSetDefaultProc();
  }

  public static void _FbxAssert(string pFileName, string pFunctionName, uint pLineNumber, bool pFormat, string pMessage) {
    FbxWrapperNativePINVOKE._FbxAssert(pFileName, pFunctionName, pLineNumber, pFormat, pMessage);
  }

  public static void _FbxTrace(string pMessage) {
    FbxWrapperNativePINVOKE._FbxTrace(pMessage);
  }

  public static SWIGTYPE_p_void FbxModuleLoad(string pFilePath) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxModuleLoad(pFilePath);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxModuleGetProc(SWIGTYPE_p_void pModuleHandle, string pProcName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxModuleGetProc(SWIGTYPE_p_void.getCPtr(pModuleHandle), pProcName);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static bool FbxModuleFree(SWIGTYPE_p_void pModuleHandle) {
    bool ret = FbxWrapperNativePINVOKE.FbxModuleFree(SWIGTYPE_p_void.getCPtr(pModuleHandle));
    return ret;
  }

  public static FbxPeripheral NULL_PERIPHERAL {
    set {
      FbxWrapperNativePINVOKE.NULL_PERIPHERAL_set(FbxPeripheral.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.NULL_PERIPHERAL_get();
      FbxPeripheral ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPeripheral(cPtr, false);
      return ret;
    } 
  }

  public static FbxPeripheral TMPFILE_PERIPHERAL {
    set {
      FbxWrapperNativePINVOKE.TMPFILE_PERIPHERAL_set(FbxPeripheral.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.TMPFILE_PERIPHERAL_get();
      FbxPeripheral ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPeripheral(cPtr, false);
      return ret;
    } 
  }

  public static void FbxSetMallocHandler(SWIGTYPE_p_f_size_t__p_void pHandler) {
    FbxWrapperNativePINVOKE.FbxSetMallocHandler(SWIGTYPE_p_f_size_t__p_void.getCPtr(pHandler));
  }

  public static void FbxSetCallocHandler(SWIGTYPE_p_f_size_t_size_t__p_void pHandler) {
    FbxWrapperNativePINVOKE.FbxSetCallocHandler(SWIGTYPE_p_f_size_t_size_t__p_void.getCPtr(pHandler));
  }

  public static void FbxSetReallocHandler(SWIGTYPE_p_f_p_void_size_t__p_void pHandler) {
    FbxWrapperNativePINVOKE.FbxSetReallocHandler(SWIGTYPE_p_f_p_void_size_t__p_void.getCPtr(pHandler));
  }

  public static void FbxSetFreeHandler(SWIGTYPE_p_f_p_void__void pHandler) {
    FbxWrapperNativePINVOKE.FbxSetFreeHandler(SWIGTYPE_p_f_p_void__void.getCPtr(pHandler));
  }

  public static SWIGTYPE_p_f_size_t__p_void FbxGetMallocHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetMallocHandler();
    SWIGTYPE_p_f_size_t__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_size_t__p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_size_t_size_t__p_void FbxGetCallocHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetCallocHandler();
    SWIGTYPE_p_f_size_t_size_t__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_size_t_size_t__p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_p_void_size_t__p_void FbxGetReallocHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetReallocHandler();
    SWIGTYPE_p_f_p_void_size_t__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_size_t__p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_p_void__void FbxGetFreeHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetFreeHandler();
    SWIGTYPE_p_f_p_void__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void__void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_size_t__p_void FbxGetDefaultMallocHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetDefaultMallocHandler();
    SWIGTYPE_p_f_size_t__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_size_t__p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_size_t_size_t__p_void FbxGetDefaultCallocHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetDefaultCallocHandler();
    SWIGTYPE_p_f_size_t_size_t__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_size_t_size_t__p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_p_void_size_t__p_void FbxGetDefaultReallocHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetDefaultReallocHandler();
    SWIGTYPE_p_f_p_void_size_t__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_size_t__p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_p_void__void FbxGetDefaultFreeHandler() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetDefaultFreeHandler();
    SWIGTYPE_p_f_p_void__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void__void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxMalloc(uint pSize) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMalloc(pSize);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxCalloc(uint pCount, uint pSize) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxCalloc(pCount, pSize);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxRealloc(SWIGTYPE_p_void pData, uint pSize) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxRealloc(SWIGTYPE_p_void.getCPtr(pData), pSize);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void FbxFree(SWIGTYPE_p_void pData) {
    FbxWrapperNativePINVOKE.FbxFree(SWIGTYPE_p_void.getCPtr(pData));
  }

  public static string FbxStrDup(string pString) {
    string ret = FbxWrapperNativePINVOKE.FbxStrDup(pString);
    return ret;
  }

  public static SWIGTYPE_p_wchar_t FbxStrDupWC(SWIGTYPE_p_wchar_t pString) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxStrDupWC(SWIGTYPE_p_wchar_t.getCPtr(pString));
    SWIGTYPE_p_wchar_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxMallocDebug(uint pSize, int pBlock, string pFile, int pLine) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMallocDebug(pSize, pBlock, pFile, pLine);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxCallocDebug(uint pCount, uint pSize, int pBlock, string pFile, int pLine) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxCallocDebug(pCount, pSize, pBlock, pFile, pLine);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void FbxReallocDebug(SWIGTYPE_p_void pData, uint pSize, int pBlock, string pFile, int pLine) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxReallocDebug(SWIGTYPE_p_void.getCPtr(pData), pSize, pBlock, pFile, pLine);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void FbxFreeDebug(SWIGTYPE_p_void pData, int pBlock) {
    FbxWrapperNativePINVOKE.FbxFreeDebug(SWIGTYPE_p_void.getCPtr(pData), pBlock);
  }

  public static int FBXSDK_sprintf(string dst, uint dstsize, string format) {
    int ret = FbxWrapperNativePINVOKE.FBXSDK_sprintf(dst, dstsize, format);
    return ret;
  }

  public static int FBXSDK_snprintf(string dst, uint dstsize, string format) {
    int ret = FbxWrapperNativePINVOKE.FBXSDK_snprintf(dst, dstsize, format);
    return ret;
  }

  public static int FBXSDK_vsprintf(string dst, uint dstsize, string format, SWIGTYPE_p_va_list vl) {
    int ret = FbxWrapperNativePINVOKE.FBXSDK_vsprintf(dst, dstsize, format, SWIGTYPE_p_va_list.getCPtr(vl));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int FBXSDK_vsnprintf(string dst, uint dstsize, string format, SWIGTYPE_p_va_list vl) {
    int ret = FbxWrapperNativePINVOKE.FBXSDK_vsnprintf(dst, dstsize, format, SWIGTYPE_p_va_list.getCPtr(vl));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void FbxUTF8ToWC(string pInUTF8, SWIGTYPE_p_p_wchar_t pOutWideChar, SWIGTYPE_p_size_t pOutWideCharSize) {
    FbxWrapperNativePINVOKE.FbxUTF8ToWC__SWIG_0(pInUTF8, SWIGTYPE_p_p_wchar_t.getCPtr(pOutWideChar), SWIGTYPE_p_size_t.getCPtr(pOutWideCharSize));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void FbxUTF8ToWC(string pInUTF8, SWIGTYPE_p_p_wchar_t pOutWideChar) {
    FbxWrapperNativePINVOKE.FbxUTF8ToWC__SWIG_1(pInUTF8, SWIGTYPE_p_p_wchar_t.getCPtr(pOutWideChar));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void FbxWCToUTF8(SWIGTYPE_p_wchar_t pInWideChar, string pOutUTF8, SWIGTYPE_p_size_t pOutUTF8Size) {
    FbxWrapperNativePINVOKE.FbxWCToUTF8__SWIG_0(SWIGTYPE_p_wchar_t.getCPtr(pInWideChar), pOutUTF8, SWIGTYPE_p_size_t.getCPtr(pOutUTF8Size));
  }

  public static void FbxWCToUTF8(SWIGTYPE_p_wchar_t pInWideChar, string pOutUTF8) {
    FbxWrapperNativePINVOKE.FbxWCToUTF8__SWIG_1(SWIGTYPE_p_wchar_t.getCPtr(pInWideChar), pOutUTF8);
  }

  public static void FbxWCToAnsi(SWIGTYPE_p_wchar_t pInWideChar, string pOutANSI, SWIGTYPE_p_size_t pOutANSISize) {
    FbxWrapperNativePINVOKE.FbxWCToAnsi__SWIG_0(SWIGTYPE_p_wchar_t.getCPtr(pInWideChar), pOutANSI, SWIGTYPE_p_size_t.getCPtr(pOutANSISize));
  }

  public static void FbxWCToAnsi(SWIGTYPE_p_wchar_t pInWideChar, string pOutANSI) {
    FbxWrapperNativePINVOKE.FbxWCToAnsi__SWIG_1(SWIGTYPE_p_wchar_t.getCPtr(pInWideChar), pOutANSI);
  }

  public static void FbxAnsiToWC(string pInANSI, SWIGTYPE_p_p_wchar_t pOutWideChar, SWIGTYPE_p_size_t pOutWideCharSize) {
    FbxWrapperNativePINVOKE.FbxAnsiToWC__SWIG_0(pInANSI, SWIGTYPE_p_p_wchar_t.getCPtr(pOutWideChar), SWIGTYPE_p_size_t.getCPtr(pOutWideCharSize));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void FbxAnsiToWC(string pInANSI, SWIGTYPE_p_p_wchar_t pOutWideChar) {
    FbxWrapperNativePINVOKE.FbxAnsiToWC__SWIG_1(pInANSI, SWIGTYPE_p_p_wchar_t.getCPtr(pOutWideChar));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void FbxAnsiToUTF8(string pInANSI, string pOutUTF8, SWIGTYPE_p_size_t pOutUTF8Size) {
    FbxWrapperNativePINVOKE.FbxAnsiToUTF8__SWIG_0(pInANSI, pOutUTF8, SWIGTYPE_p_size_t.getCPtr(pOutUTF8Size));
  }

  public static void FbxAnsiToUTF8(string pInANSI, string pOutUTF8) {
    FbxWrapperNativePINVOKE.FbxAnsiToUTF8__SWIG_1(pInANSI, pOutUTF8);
  }

  public static void FbxUTF8ToAnsi(string pInUTF8, string pOutANSI, SWIGTYPE_p_size_t pOutANSISize) {
    FbxWrapperNativePINVOKE.FbxUTF8ToAnsi__SWIG_0(pInUTF8, pOutANSI, SWIGTYPE_p_size_t.getCPtr(pOutANSISize));
  }

  public static void FbxUTF8ToAnsi(string pInUTF8, string pOutANSI) {
    FbxWrapperNativePINVOKE.FbxUTF8ToAnsi__SWIG_1(pInUTF8, pOutANSI);
  }

  public static FbxString add(FbxString pString1, FbxString pString2) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_0(FbxString.getCPtr(pString1), FbxString.getCPtr(pString2)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(FbxString pString, char pChar) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_1(FbxString.getCPtr(pString), pChar), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(char pChar, FbxString pString) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_2(pChar, FbxString.getCPtr(pString)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(FbxString pString1, string pString2) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_3(FbxString.getCPtr(pString1), pString2), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(string pString1, FbxString pString2) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_4(pString1, FbxString.getCPtr(pString2)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(FbxString pString, int pValue) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_5(FbxString.getCPtr(pString), pValue), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(int pValue, FbxString pString) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_6(pValue, FbxString.getCPtr(pString)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(FbxString pString, float pValue) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_7(FbxString.getCPtr(pString), pValue), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(float pValue, FbxString pString) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_8(pValue, FbxString.getCPtr(pString)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString add(FbxString pString, double pValue) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.add__SWIG_9(FbxString.getCPtr(pString), pValue), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void FbxRemoveChar(FbxString pString, char pToRemove) {
    FbxWrapperNativePINVOKE.FbxRemoveChar(FbxString.getCPtr(pString), pToRemove);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static int FbxCompareStringListSort(SWIGTYPE_p_void E1, SWIGTYPE_p_void E2) {
    int ret = FbxWrapperNativePINVOKE.FbxCompareStringListSort(SWIGTYPE_p_void.getCPtr(E1), SWIGTYPE_p_void.getCPtr(E2));
    return ret;
  }

  public static int FbxCompareStringListFindEqual(SWIGTYPE_p_void E1, SWIGTYPE_p_void E2) {
    int ret = FbxWrapperNativePINVOKE.FbxCompareStringListFindEqual(SWIGTYPE_p_void.getCPtr(E1), SWIGTYPE_p_void.getCPtr(E2));
    return ret;
  }

  public static int FbxCompareCaseSensitiveStringList(SWIGTYPE_p_void E1, SWIGTYPE_p_void E2) {
    int ret = FbxWrapperNativePINVOKE.FbxCompareCaseSensitiveStringList(SWIGTYPE_p_void.getCPtr(E1), SWIGTYPE_p_void.getCPtr(E2));
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSeconds(SWIGTYPE_p_signed___int64 pTime) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSeconds(SWIGTYPE_p_signed___int64.getCPtr(pTime)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCMinutes(SWIGTYPE_p_signed___int64 pTime) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCMinutes(SWIGTYPE_p_signed___int64.getCPtr(pTime)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCHours(SWIGTYPE_p_signed___int64 pTime) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCHours(SWIGTYPE_p_signed___int64.getCPtr(pTime)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetRate(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, SWIGTYPE_p_signed___int64 pPeriod) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetRate(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), SWIGTYPE_p_signed___int64.getCPtr(pPeriod)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetRate(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_signed___int64 pPeriod) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetRate(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_signed___int64.getCPtr(pPeriod)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetNTSC(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetNTSC(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), pField), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetNTSC(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetNTSC(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_int.getCPtr(pField)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetMNTSCnd(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetMNTSCnd(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), pField), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetMNTSCnd(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetMNTSCnd(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_int.getCPtr(pField)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetMNTSC_2Xnd(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetMNTSC_2Xnd(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), pField), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetMNTSC_2Xnd(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetMNTSC_2Xnd(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_int.getCPtr(pField)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetMNTSC(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetMNTSC(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), pField), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetMNTSC(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetMNTSC(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_int.getCPtr(pField)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetPAL(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetPAL(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), pField), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetPAL(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetPAL(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_int.getCPtr(pField)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetFILM(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetFILM(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetFILM(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetFILM(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCSetFILMND(int pHour, int pMinute, int pSecond, SWIGTYPE_p_signed___int64 pFrame, int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCSetFILMND(pHour, pMinute, pSecond, SWIGTYPE_p_signed___int64.getCPtr(pFrame), pField), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxTCGetFILMND(SWIGTYPE_p_signed___int64 pTime, SWIGTYPE_p_int pHour, SWIGTYPE_p_int pMinute, SWIGTYPE_p_int pSecond, SWIGTYPE_p_int pFrame, SWIGTYPE_p_int pField) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxTCGetFILMND(SWIGTYPE_p_signed___int64.getCPtr(pTime), SWIGTYPE_p_int.getCPtr(pHour), SWIGTYPE_p_int.getCPtr(pMinute), SWIGTYPE_p_int.getCPtr(pSecond), SWIGTYPE_p_int.getCPtr(pFrame), SWIGTYPE_p_int.getCPtr(pField)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void FbxSleep(int pMilliseconds) {
    FbxWrapperNativePINVOKE.FbxSleep(pMilliseconds);
  }

  public static SWIGTYPE_p_signed___int64 FbxGetHighResCounter() {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxGetHighResCounter(), true);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxGetHighResFrequency() {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(FbxWrapperNativePINVOKE.FbxGetHighResFrequency(), true);
    return ret;
  }

  public static FbxTime.EMode FbxGetGlobalTimeMode() {
    FbxTime.EMode ret = (FbxTime.EMode)FbxWrapperNativePINVOKE.FbxGetGlobalTimeMode();
    return ret;
  }

  public static SWIGTYPE_p_FbxTimeModeObject FbxGetGlobalTimeModeObject() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGetGlobalTimeModeObject();
    SWIGTYPE_p_FbxTimeModeObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxTimeModeObject(cPtr, false);
    return ret;
  }

  public static FbxTime.EProtocol FbxGetGlobalTimeFormat() {
    FbxTime.EProtocol ret = (FbxTime.EProtocol)FbxWrapperNativePINVOKE.FbxGetGlobalTimeFormat();
    return ret;
  }

  public static void FbxSetGlobalTimeMode(FbxTime.EMode pTimeMode, double pFrameRate) {
    FbxWrapperNativePINVOKE.FbxSetGlobalTimeMode__SWIG_0((int)pTimeMode, pFrameRate);
  }

  public static void FbxSetGlobalTimeFormat(FbxTime.EProtocol pTimeFormat) {
    FbxWrapperNativePINVOKE.FbxSetGlobalTimeFormat((int)pTimeFormat);
  }

  public static FbxTime FbxTimeSeconds(double pTime) {
    FbxTime ret = new FbxTime(FbxWrapperNativePINVOKE.FbxTimeSeconds__SWIG_0(pTime), true);
    return ret;
  }

  public static FbxTime FbxTimeSeconds() {
    FbxTime ret = new FbxTime(FbxWrapperNativePINVOKE.FbxTimeSeconds__SWIG_1(), true);
    return ret;
  }

  public static void FbxGetCurrentLocalTime(FbxLocalTime pLocalTime) {
    FbxWrapperNativePINVOKE.FbxGetCurrentLocalTime(FbxLocalTime.getCPtr(pLocalTime));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void FbxSetGlobalTimeMode(FbxTime.EMode pTimeMode) {
    FbxWrapperNativePINVOKE.FbxSetGlobalTimeMode__SWIG_1((int)pTimeMode);
  }

  public static FbxTime.EOldMode FbxGetOldTimeModeCorrespondance(FbxTime.EMode pMode) {
    FbxTime.EOldMode ret = (FbxTime.EOldMode)FbxWrapperNativePINVOKE.FbxGetOldTimeModeCorrespondance((int)pMode);
    return ret;
  }

  public static FbxTime.EMode FbxGetTimeModeFromOldValue(FbxTime.EOldMode pOldMode) {
    FbxTime.EMode ret = (FbxTime.EMode)FbxWrapperNativePINVOKE.FbxGetTimeModeFromOldValue((int)pOldMode);
    return ret;
  }

  public static FbxTime.EMode FbxGetTimeModeFromFrameRate(string pFrameRate) {
    FbxTime.EMode ret = (FbxTime.EMode)FbxWrapperNativePINVOKE.FbxGetTimeModeFromFrameRate(pFrameRate);
    return ret;
  }

  public static void FbxGetControlStringList(string pControlString, FbxTime.EProtocol pTimeFormat) {
    FbxWrapperNativePINVOKE.FbxGetControlStringList(pControlString, (int)pTimeFormat);
  }

  public static string FbxGetGlobalFrameRateString(FbxTime.EMode pTimeMode) {
    string ret = FbxWrapperNativePINVOKE.FbxGetGlobalFrameRateString((int)pTimeMode);
    return ret;
  }

  public static string FbxGetGlobalTimeModeString(FbxTime.EMode pTimeMode) {
    string ret = FbxWrapperNativePINVOKE.FbxGetGlobalTimeModeString((int)pTimeMode);
    return ret;
  }

  public static double FbxGetFrameRate(FbxTime.EMode pTimeMode) {
    double ret = FbxWrapperNativePINVOKE.FbxGetFrameRate((int)pTimeMode);
    return ret;
  }

  public static string FbxGetTimeModeName(FbxTime.EMode pTimeMode) {
    string ret = FbxWrapperNativePINVOKE.FbxGetTimeModeName((int)pTimeMode);
    return ret;
  }

  public static int FbxGetFrameRateStringListIndex(FbxTime.EMode pTimeMode) {
    int ret = FbxWrapperNativePINVOKE.FbxGetFrameRateStringListIndex((int)pTimeMode);
    return ret;
  }

  public static bool FbxIsValidCustomFrameRate(double pFramerate) {
    bool ret = FbxWrapperNativePINVOKE.FbxIsValidCustomFrameRate(pFramerate);
    return ret;
  }

  public static bool FbxGetNearestCustomFrameRate(double pFramerate, SWIGTYPE_p_double pNearestRate) {
    bool ret = FbxWrapperNativePINVOKE.FbxGetNearestCustomFrameRate(pFramerate, SWIGTYPE_p_double.getCPtr(pNearestRate));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxString FbxGetEnv(string pEnvVar) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.FbxGetEnv(pEnvVar), true);
    return ret;
  }

  public static FbxString FbxGetApplicationDirectory() {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.FbxGetApplicationDirectory(), true);
    return ret;
  }

  public static FbxString FbxGetSystemTempPath() {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.FbxGetSystemTempPath(), true);
    return ret;
  }

  public static bool FbxSetSystemTempPath(string pPathUTF8) {
    bool ret = FbxWrapperNativePINVOKE.FbxSetSystemTempPath(pPathUTF8);
    return ret;
  }

  public static FbxString FbxGetCurrentWorkPath() {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.FbxGetCurrentWorkPath(), true);
    return ret;
  }

  public static void FbxSetCurrentWorkPath(string pPath_UTF8) {
    FbxWrapperNativePINVOKE.FbxSetCurrentWorkPath(pPath_UTF8);
  }

  public static int FbxFileVersionStrToInt(string pFileVersion) {
    int ret = FbxWrapperNativePINVOKE.FbxFileVersionStrToInt(pFileVersion);
    return ret;
  }

  public static uint FbxTypeSizeOf(EFbxType pType) {
    uint ret = FbxWrapperNativePINVOKE.FbxTypeSizeOf((int)pType);
    return ret;
  }

  public static uint FbxTypeComponentCount(EFbxType pType) {
    uint ret = FbxWrapperNativePINVOKE.FbxTypeComponentCount((int)pType);
    return ret;
  }

  public static EFbxType FbxTypeOf(sbyte arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_0(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(byte arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_1(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(short arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_2(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(ushort arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_3(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(uint arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_4(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(SWIGTYPE_p_signed___int64 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_5(SWIGTYPE_p_signed___int64.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(ulong arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_6(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxHalfFloat arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_7(FbxHalfFloat.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(bool arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_8(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(int arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_9(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(float arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_10(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(double arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_11(arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxDouble2 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_12(FbxDouble2.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxDouble3 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_13(FbxDouble3.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxDouble4 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_14(FbxDouble4.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxDouble4x4 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_15(FbxDouble4x4.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxVector2 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_16(FbxVector2.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxVector4 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_17(FbxVector4.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxQuaternion arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_18(FbxQuaternion.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxMatrix arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_19(FbxMatrix.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxAMatrix arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_20(FbxAMatrix.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxString arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_21(FbxString.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTime arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_22(FbxTime.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxObject arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_23(FbxObject.getCPtr(arg0));
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxBlob arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_24(FbxBlob.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxColor arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_25(FbxColor.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxDistance arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_26(FbxDistance.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxDateTime arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_27(FbxDateTime.getCPtr(arg0));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_double pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_0(SWIGTYPE_p_double.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_bool pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_1(SWIGTYPE_p_bool.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_int pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_2(SWIGTYPE_p_int.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_signed_char pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_3(SWIGTYPE_p_signed_char.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_unsigned_char pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_4(SWIGTYPE_p_unsigned_char.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_short pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_5(SWIGTYPE_p_short.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_unsigned_short pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_6(SWIGTYPE_p_unsigned_short.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_unsigned_int pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_7(SWIGTYPE_p_unsigned_int.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_signed___int64 pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_8(SWIGTYPE_p_signed___int64.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(SWIGTYPE_p_unsigned___int64 pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_9(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopyStr(FbxHalfFloat pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopyStr__SWIG_10(FbxHalfFloat.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_1(SWIGTYPE_p_signed_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_2(SWIGTYPE_p_unsigned_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_3(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_4(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_5(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_6(SWIGTYPE_p_signed___int64.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_7(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_8(FbxHalfFloat.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_9(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_10(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_11(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_12(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, FbxDouble2 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_13(FbxDouble2.getCPtr(pDst), FbxDouble2.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, FbxDouble3 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_14(FbxDouble3.getCPtr(pDst), FbxDouble3.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 pDst, FbxDouble4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_15(FbxDouble4.getCPtr(pDst), FbxDouble4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4x4 pDst, FbxDouble4x4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_16(FbxDouble4x4.getCPtr(pDst), FbxDouble4x4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_17(FbxString.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxTime pDst, FbxTime pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_18(FbxTime.getCPtr(pDst), FbxTime.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_p_FbxObject pDst, FbxObject pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_19(SWIGTYPE_p_p_FbxObject.getCPtr(pDst), FbxObject.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxBlob pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_20(FbxBlob.getCPtr(pDst), FbxBlob.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance pDst, FbxDistance pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_21(FbxDistance.getCPtr(pDst), FbxDistance.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime pDst, FbxDateTime pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_22(FbxDateTime.getCPtr(pDst), FbxDateTime.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_23(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_24(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_25(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_26(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_27(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_28(SWIGTYPE_p_bool.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_29(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_30(SWIGTYPE_p_bool.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_31(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_32(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_33(SWIGTYPE_p_bool.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_34(SWIGTYPE_p_bool.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_35(SWIGTYPE_p_bool.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_36(SWIGTYPE_p_bool.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_37(SWIGTYPE_p_bool.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_38(SWIGTYPE_p_bool.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_39(SWIGTYPE_p_bool.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_40(SWIGTYPE_p_bool.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_41(SWIGTYPE_p_bool.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_42(SWIGTYPE_p_bool.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_bool arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_43(SWIGTYPE_p_bool.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_44(SWIGTYPE_p_signed_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, short arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_45(SWIGTYPE_p_signed_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, ushort arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_46(SWIGTYPE_p_signed_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_47(SWIGTYPE_p_signed_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_48(SWIGTYPE_p_signed_char.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_49(SWIGTYPE_p_signed_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_50(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_51(SWIGTYPE_p_signed_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_52(SWIGTYPE_p_signed_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_53(SWIGTYPE_p_signed_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_54(SWIGTYPE_p_signed_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_55(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_56(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_57(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_58(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_59(SWIGTYPE_p_signed_char.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_60(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_61(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_62(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_63(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed_char arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_64(SWIGTYPE_p_signed_char.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_65(SWIGTYPE_p_unsigned_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, short arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_66(SWIGTYPE_p_unsigned_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, ushort arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_67(SWIGTYPE_p_unsigned_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_68(SWIGTYPE_p_unsigned_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_69(SWIGTYPE_p_unsigned_char.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_70(SWIGTYPE_p_unsigned_char.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_71(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_72(SWIGTYPE_p_unsigned_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_73(SWIGTYPE_p_unsigned_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_74(SWIGTYPE_p_unsigned_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_75(SWIGTYPE_p_unsigned_char.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_76(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_77(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_78(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_79(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_80(SWIGTYPE_p_unsigned_char.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_81(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_82(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_83(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_84(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_char arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_85(SWIGTYPE_p_unsigned_char.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_86(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_87(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, ushort arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_88(SWIGTYPE_p_short.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_89(SWIGTYPE_p_short.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_90(SWIGTYPE_p_short.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_91(SWIGTYPE_p_short.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_92(SWIGTYPE_p_short.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_93(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_94(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_95(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_96(SWIGTYPE_p_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_97(SWIGTYPE_p_short.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_98(SWIGTYPE_p_short.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_99(SWIGTYPE_p_short.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_100(SWIGTYPE_p_short.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_101(SWIGTYPE_p_short.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_102(SWIGTYPE_p_short.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_103(SWIGTYPE_p_short.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_104(SWIGTYPE_p_short.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_105(SWIGTYPE_p_short.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_short arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_106(SWIGTYPE_p_short.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_107(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_108(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_109(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_110(SWIGTYPE_p_unsigned_short.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_111(SWIGTYPE_p_unsigned_short.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_112(SWIGTYPE_p_unsigned_short.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_113(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_114(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_115(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_116(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_117(SWIGTYPE_p_unsigned_short.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_118(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_119(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_120(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_121(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_122(SWIGTYPE_p_unsigned_short.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_123(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_124(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_125(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_126(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_short arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_127(SWIGTYPE_p_unsigned_short.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_128(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_129(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_130(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_131(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_132(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_133(SWIGTYPE_p_int.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_134(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_135(SWIGTYPE_p_int.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_136(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_137(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_138(SWIGTYPE_p_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_139(SWIGTYPE_p_int.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_140(SWIGTYPE_p_int.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_141(SWIGTYPE_p_int.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_142(SWIGTYPE_p_int.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_143(SWIGTYPE_p_int.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_144(SWIGTYPE_p_int.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_145(SWIGTYPE_p_int.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_146(SWIGTYPE_p_int.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_147(SWIGTYPE_p_int.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_int arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_148(SWIGTYPE_p_int.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_149(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_150(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_151(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_152(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_153(SWIGTYPE_p_unsigned_int.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_154(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_155(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_156(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_157(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_158(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_159(SWIGTYPE_p_unsigned_int.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_160(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_161(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_162(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_163(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_164(SWIGTYPE_p_unsigned_int.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_165(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_166(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_167(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_168(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned_int arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_169(SWIGTYPE_p_unsigned_int.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_170(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_171(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_172(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_173(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_174(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_175(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_176(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_177(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_178(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_179(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_180(SWIGTYPE_p_signed___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_181(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_182(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_183(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_184(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_185(SWIGTYPE_p_signed___int64.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_186(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_187(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_188(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_189(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_signed___int64 arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_190(SWIGTYPE_p_signed___int64.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_191(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_192(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_193(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_194(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_195(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_196(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_197(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_198(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_199(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_200(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_201(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_202(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_203(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_204(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_205(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_206(SWIGTYPE_p_unsigned___int64.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_207(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_208(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_209(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_210(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_unsigned___int64 arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_211(SWIGTYPE_p_unsigned___int64.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_212(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_213(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_214(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_215(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_216(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_217(FbxHalfFloat.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_218(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_219(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_220(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_221(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_222(FbxHalfFloat.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_223(FbxHalfFloat.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_224(FbxHalfFloat.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_225(FbxHalfFloat.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_226(FbxHalfFloat.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxString arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_227(FbxHalfFloat.getCPtr(arg0), FbxString.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_228(FbxHalfFloat.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_229(FbxHalfFloat.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_230(FbxHalfFloat.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat pDst, FbxDistance pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_231(FbxHalfFloat.getCPtr(pDst), FbxDistance.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxHalfFloat arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_232(FbxHalfFloat.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_233(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_234(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_235(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_236(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_237(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_238(SWIGTYPE_p_float.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_239(SWIGTYPE_p_float.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_240(SWIGTYPE_p_float.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_241(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_242(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_243(SWIGTYPE_p_float.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_244(SWIGTYPE_p_float.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_245(SWIGTYPE_p_float.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_246(SWIGTYPE_p_float.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_247(SWIGTYPE_p_float.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxString arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_248(SWIGTYPE_p_float.getCPtr(arg0), FbxString.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_249(SWIGTYPE_p_float.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_250(SWIGTYPE_p_float.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_251(SWIGTYPE_p_float.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float pDst, FbxDistance pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_252(SWIGTYPE_p_float.getCPtr(pDst), FbxDistance.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_float arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_253(SWIGTYPE_p_float.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_254(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_255(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_256(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_257(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_258(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_259(SWIGTYPE_p_double.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_260(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_261(SWIGTYPE_p_double.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_262(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_263(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_264(SWIGTYPE_p_double.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxDouble2 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_265(SWIGTYPE_p_double.getCPtr(pDst), FbxDouble2.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxDouble3 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_266(SWIGTYPE_p_double.getCPtr(pDst), FbxDouble3.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxDouble4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_267(SWIGTYPE_p_double.getCPtr(pDst), FbxDouble4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxDouble4x4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_268(SWIGTYPE_p_double.getCPtr(pDst), FbxDouble4x4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_269(SWIGTYPE_p_double.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxTime pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_270(SWIGTYPE_p_double.getCPtr(pDst), FbxTime.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_double pDst, FbxDistance pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_271(SWIGTYPE_p_double.getCPtr(pDst), FbxDistance.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_272(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_273(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_274(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_275(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_276(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_277(FbxDouble2.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_278(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_279(FbxDouble2.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_280(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_281(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_282(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble2 pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_283(FbxDouble2.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_284(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_285(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_286(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_287(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_288(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_289(FbxDouble3.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_290(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_291(FbxDouble3.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_292(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_293(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_294(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_295(FbxDouble3.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_296(FbxDouble3.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 pDst, FbxDouble4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_297(FbxDouble3.getCPtr(pDst), FbxDouble4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_298(FbxDouble3.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxString arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_299(FbxDouble3.getCPtr(arg0), FbxString.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_300(FbxDouble3.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_301(FbxDouble3.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_302(FbxDouble3.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_303(FbxDouble3.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble3 arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_304(FbxDouble3.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, sbyte arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_305(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, byte arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_306(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, short arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_307(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, ushort arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_308(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_309(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_310(FbxDouble4.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_311(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_312(FbxDouble4.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, bool arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_313(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, int arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_314(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, float arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_315(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, double arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_316(FbxDouble4.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_317(FbxDouble4.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 pDst, FbxDouble3 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_318(FbxDouble4.getCPtr(pDst), FbxDouble3.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_319(FbxDouble4.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxString arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_320(FbxDouble4.getCPtr(arg0), FbxString.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_321(FbxDouble4.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_322(FbxDouble4.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_323(FbxDouble4.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_324(FbxDouble4.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDouble4 arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_325(FbxDouble4.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_326(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_327(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_328(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_329(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_330(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_331(FbxString.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_332(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_333(FbxString.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_334(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_335(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_336(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_337(FbxString.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxDouble2 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_338(FbxString.getCPtr(pDst), FbxDouble2.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxDouble3 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_339(FbxString.getCPtr(pDst), FbxDouble3.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxDouble4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_340(FbxString.getCPtr(pDst), FbxDouble4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxDouble4x4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_341(FbxString.getCPtr(pDst), FbxDouble4x4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxTime pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_342(FbxString.getCPtr(pDst), FbxTime.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_343(FbxString.getCPtr(pDst), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_344(FbxString.getCPtr(pDst), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxDistance pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_345(FbxString.getCPtr(pDst), FbxDistance.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxString pDst, FbxDateTime pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_346(FbxString.getCPtr(pDst), FbxDateTime.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, sbyte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_347(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, byte pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_348(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, short pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_349(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, ushort pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_350(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, uint pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_351(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, SWIGTYPE_p_signed___int64 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_352(FbxBlob.getCPtr(pDst), SWIGTYPE_p_signed___int64.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, ulong pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_353(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxHalfFloat pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_354(FbxBlob.getCPtr(pDst), FbxHalfFloat.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, bool pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_355(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, int pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_356(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, float pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_357(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, double pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_358(FbxBlob.getCPtr(pDst), pSrc);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxDouble2 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_359(FbxBlob.getCPtr(pDst), FbxDouble2.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxDouble3 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_360(FbxBlob.getCPtr(pDst), FbxDouble3.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxDouble4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_361(FbxBlob.getCPtr(pDst), FbxDouble4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxDouble4x4 pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_362(FbxBlob.getCPtr(pDst), FbxDouble4x4.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_363(FbxBlob.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob pDst, FbxTime pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_364(FbxBlob.getCPtr(pDst), FbxTime.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_365(FbxBlob.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_366(FbxBlob.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxBlob arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_367(FbxBlob.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, sbyte arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_368(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, byte arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_369(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, short arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_370(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, ushort arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_371(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_372(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_373(FbxDistance.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_374(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_375(FbxDistance.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, bool arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_376(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, int arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_377(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, float arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_378(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, double arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_379(FbxDistance.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_380(FbxDistance.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_381(FbxDistance.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_382(FbxDistance.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_383(FbxDistance.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxString arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_384(FbxDistance.getCPtr(arg0), FbxString.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_385(FbxDistance.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_386(FbxDistance.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_387(FbxDistance.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDistance arg0, FbxDateTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_388(FbxDistance.getCPtr(arg0), FbxDateTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, sbyte arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_389(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, byte arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_390(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, short arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_391(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, ushort arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_392(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, uint arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_393(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, SWIGTYPE_p_signed___int64 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_394(FbxDateTime.getCPtr(arg0), SWIGTYPE_p_signed___int64.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, ulong arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_395(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxHalfFloat arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_396(FbxDateTime.getCPtr(arg0), FbxHalfFloat.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, bool arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_397(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, int arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_398(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, float arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_399(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, double arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_400(FbxDateTime.getCPtr(arg0), arg1);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxDouble2 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_401(FbxDateTime.getCPtr(arg0), FbxDouble2.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxDouble3 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_402(FbxDateTime.getCPtr(arg0), FbxDouble3.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxDouble4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_403(FbxDateTime.getCPtr(arg0), FbxDouble4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxDouble4x4 arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_404(FbxDateTime.getCPtr(arg0), FbxDouble4x4.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime pDst, FbxString pSrc) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_405(FbxDateTime.getCPtr(pDst), FbxString.getCPtr(pSrc));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxTime arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_406(FbxDateTime.getCPtr(arg0), FbxTime.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxObject arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_407(FbxDateTime.getCPtr(arg0), FbxObject.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxBlob arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_408(FbxDateTime.getCPtr(arg0), FbxBlob.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(FbxDateTime arg0, FbxDistance arg1) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_409(FbxDateTime.getCPtr(arg0), FbxDistance.getCPtr(arg1));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxTypeCopy(SWIGTYPE_p_void pDst, EFbxType pDstType, SWIGTYPE_p_void pSrc, EFbxType pSrcType) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCopy__SWIG_412(SWIGTYPE_p_void.getCPtr(pDst), (int)pDstType, SWIGTYPE_p_void.getCPtr(pSrc), (int)pSrcType);
    return ret;
  }

  public static SWIGTYPE_p_void FbxTypeAllocate(EFbxType pType) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTypeAllocate((int)pType);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static bool FbxTypeDeallocate(EFbxType pType, SWIGTYPE_p_void pData) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeDeallocate((int)pType, SWIGTYPE_p_void.getCPtr(pData));
    return ret;
  }

  public static bool FbxTypeCompare(SWIGTYPE_p_void pA, SWIGTYPE_p_void pB, EFbxType pType) {
    bool ret = FbxWrapperNativePINVOKE.FbxTypeCompare(SWIGTYPE_p_void.getCPtr(pA), SWIGTYPE_p_void.getCPtr(pB), (int)pType);
    return ret;
  }

  public static SWIGTYPE_p_a_4__double FbxIdentityMatrix {
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxIdentityMatrix_get();
      SWIGTYPE_p_a_4__double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_a_4__double(cPtr, false);
      return ret;
    } 
  }

  public static FbxVector4 FbxZeroVector4 {
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxZeroVector4_get();
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public static float FbxFloor(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxFloor__SWIG_0(x);
    return ret;
  }

  public static double FbxFloor(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxFloor__SWIG_1(x);
    return ret;
  }

  public static float FbxCeil(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxCeil__SWIG_0(x);
    return ret;
  }

  public static double FbxCeil(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxCeil__SWIG_1(x);
    return ret;
  }

  public static byte FbxAbs(byte x) {
    byte ret = FbxWrapperNativePINVOKE.FbxAbs__SWIG_0(x);
    return ret;
  }

  public static ushort FbxAbs(ushort x) {
    ushort ret = FbxWrapperNativePINVOKE.FbxAbs__SWIG_1(x);
    return ret;
  }

  public static uint FbxAbs(uint x) {
    uint ret = FbxWrapperNativePINVOKE.FbxAbs__SWIG_2(x);
    return ret;
  }

  public static ulong FbxAbs(ulong x) {
    ulong ret = FbxWrapperNativePINVOKE.FbxAbs__SWIG_4(x);
    return ret;
  }

  public static float FbxAbs(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxAbs__SWIG_5(x);
    return ret;
  }

  public static double FbxAbs(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxAbs__SWIG_6(x);
    return ret;
  }

  public static bool FbxEqual(FbxDouble2 x, FbxDouble2 y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_2(FbxDouble2.getCPtr(x), FbxDouble2.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble2 x, FbxDouble2 y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_3(FbxDouble2.getCPtr(x), FbxDouble2.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble3 x, FbxDouble3 y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_4(FbxDouble3.getCPtr(x), FbxDouble3.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble3 x, FbxDouble3 y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_5(FbxDouble3.getCPtr(x), FbxDouble3.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble4 x, FbxDouble4 y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_6(FbxDouble4.getCPtr(x), FbxDouble4.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble4 x, FbxDouble4 y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_7(FbxDouble4.getCPtr(x), FbxDouble4.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble4x4 x, FbxDouble4x4 y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_8(FbxDouble4x4.getCPtr(x), FbxDouble4x4.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxDouble4x4 x, FbxDouble4x4 y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_9(FbxDouble4x4.getCPtr(x), FbxDouble4x4.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxVector2 x, FbxVector2 y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_10(FbxVector2.getCPtr(x), FbxVector2.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxVector2 x, FbxVector2 y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_11(FbxVector2.getCPtr(x), FbxVector2.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxVector4 x, FbxVector4 y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_12(FbxVector4.getCPtr(x), FbxVector4.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxVector4 x, FbxVector4 y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_13(FbxVector4.getCPtr(x), FbxVector4.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxMatrix x, FbxMatrix y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_14(FbxMatrix.getCPtr(x), FbxMatrix.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxMatrix x, FbxMatrix y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_15(FbxMatrix.getCPtr(x), FbxMatrix.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxAMatrix x, FbxAMatrix y, double e) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_16(FbxAMatrix.getCPtr(x), FbxAMatrix.getCPtr(y), e);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxEqual(FbxAMatrix x, FbxAMatrix y) {
    bool ret = FbxWrapperNativePINVOKE.FbxEqual__SWIG_17(FbxAMatrix.getCPtr(x), FbxAMatrix.getCPtr(y));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static double FbxMod(float x, SWIGTYPE_p_float i) {
    double ret = FbxWrapperNativePINVOKE.FbxMod__SWIG_0(x, SWIGTYPE_p_float.getCPtr(i));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static double FbxMod(double x, SWIGTYPE_p_double i) {
    double ret = FbxWrapperNativePINVOKE.FbxMod__SWIG_1(x, SWIGTYPE_p_double.getCPtr(i));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static double FbxMod(float x) {
    double ret = FbxWrapperNativePINVOKE.FbxMod__SWIG_2(x);
    return ret;
  }

  public static double FbxMod(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxMod__SWIG_3(x);
    return ret;
  }

  public static double FbxSqrt(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxSqrt__SWIG_0(x);
    return ret;
  }

  public static float FbxSqrt(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxSqrt__SWIG_1(x);
    return ret;
  }

  public static float FbxExp(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxExp__SWIG_0(x);
    return ret;
  }

  public static double FbxExp(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxExp__SWIG_1(x);
    return ret;
  }

  public static float FbxLog(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxLog__SWIG_0(x);
    return ret;
  }

  public static double FbxLog(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxLog__SWIG_1(x);
    return ret;
  }

  public static float FbxSin(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxSin__SWIG_0(x);
    return ret;
  }

  public static double FbxSin(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxSin__SWIG_1(x);
    return ret;
  }

  public static float FbxCos(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxCos__SWIG_0(x);
    return ret;
  }

  public static double FbxCos(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxCos__SWIG_1(x);
    return ret;
  }

  public static float FbxTan(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxTan__SWIG_0(x);
    return ret;
  }

  public static double FbxTan(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxTan__SWIG_1(x);
    return ret;
  }

  public static float FbxASin(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxASin__SWIG_0(x);
    return ret;
  }

  public static double FbxASin(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxASin__SWIG_1(x);
    return ret;
  }

  public static float FbxACos(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxACos__SWIG_0(x);
    return ret;
  }

  public static double FbxACos(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxACos__SWIG_1(x);
    return ret;
  }

  public static float FbxATan(float x) {
    float ret = FbxWrapperNativePINVOKE.FbxATan__SWIG_0(x);
    return ret;
  }

  public static double FbxATan(double x) {
    double ret = FbxWrapperNativePINVOKE.FbxATan__SWIG_1(x);
    return ret;
  }

  public static float FbxATan(float y, float x) {
    float ret = FbxWrapperNativePINVOKE.FbxATan__SWIG_2(y, x);
    return ret;
  }

  public static double FbxATan(double y, double x) {
    double ret = FbxWrapperNativePINVOKE.FbxATan__SWIG_3(y, x);
    return ret;
  }

  public static FbxVector4 FbxRejection(FbxVector4 a, FbxVector4 b) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxRejection(FbxVector4.getCPtr(a), FbxVector4.getCPtr(b)), true);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool FbxGetContinuousRotation(FbxVector4 pRes, FbxVector4 pRot, FbxVector4 pRef, SWIGTYPE_p_int pOrder) {
    bool ret = FbxWrapperNativePINVOKE.FbxGetContinuousRotation__SWIG_0(FbxVector4.getCPtr(pRes), FbxVector4.getCPtr(pRot), FbxVector4.getCPtr(pRef), SWIGTYPE_p_int.getCPtr(pOrder));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void FbxGetContinuousRotation(FbxVector4 pRes, FbxVector4 pRot, FbxVector4 pRef) {
    FbxWrapperNativePINVOKE.FbxGetContinuousRotation__SWIG_1(FbxVector4.getCPtr(pRes), FbxVector4.getCPtr(pRot), FbxVector4.getCPtr(pRef));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static FbxDataType FbxGetDataTypeFromEnum(EFbxType pType) {
    FbxDataType ret = new FbxDataType(FbxWrapperNativePINVOKE.FbxGetDataTypeFromEnum((int)pType), false);
    return ret;
  }

  public static string FbxGetDataTypeNameForIO(FbxDataType pDataType) {
    string ret = FbxWrapperNativePINVOKE.FbxGetDataTypeNameForIO(FbxDataType.getCPtr(pDataType));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxDataType FbxUndefinedDT {
    set {
      FbxWrapperNativePINVOKE.FbxUndefinedDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxUndefinedDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxBoolDT {
    set {
      FbxWrapperNativePINVOKE.FbxBoolDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxBoolDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxCharDT {
    set {
      FbxWrapperNativePINVOKE.FbxCharDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxCharDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxUCharDT {
    set {
      FbxWrapperNativePINVOKE.FbxUCharDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxUCharDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxShortDT {
    set {
      FbxWrapperNativePINVOKE.FbxShortDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShortDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxUShortDT {
    set {
      FbxWrapperNativePINVOKE.FbxUShortDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxUShortDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxIntDT {
    set {
      FbxWrapperNativePINVOKE.FbxIntDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxIntDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxUIntDT {
    set {
      FbxWrapperNativePINVOKE.FbxUIntDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxUIntDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLongLongDT {
    set {
      FbxWrapperNativePINVOKE.FbxLongLongDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLongLongDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxULongLongDT {
    set {
      FbxWrapperNativePINVOKE.FbxULongLongDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxULongLongDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxFloatDT {
    set {
      FbxWrapperNativePINVOKE.FbxFloatDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxFloatDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxHalfFloatDT {
    set {
      FbxWrapperNativePINVOKE.FbxHalfFloatDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxHalfFloatDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDoubleDT {
    set {
      FbxWrapperNativePINVOKE.FbxDoubleDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDoubleDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDouble2DT {
    set {
      FbxWrapperNativePINVOKE.FbxDouble2DT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDouble2DT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDouble3DT {
    set {
      FbxWrapperNativePINVOKE.FbxDouble3DT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDouble3DT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDouble4DT {
    set {
      FbxWrapperNativePINVOKE.FbxDouble4DT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDouble4DT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDouble4x4DT {
    set {
      FbxWrapperNativePINVOKE.FbxDouble4x4DT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDouble4x4DT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxEnumDT {
    set {
      FbxWrapperNativePINVOKE.FbxEnumDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxEnumDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxStringDT {
    set {
      FbxWrapperNativePINVOKE.FbxStringDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxStringDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTimeDT {
    set {
      FbxWrapperNativePINVOKE.FbxTimeDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTimeDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxReferenceDT {
    set {
      FbxWrapperNativePINVOKE.FbxReferenceDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxReferenceDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxBlobDT {
    set {
      FbxWrapperNativePINVOKE.FbxBlobDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxBlobDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDistanceDT {
    set {
      FbxWrapperNativePINVOKE.FbxDistanceDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDistanceDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxDateTimeDT {
    set {
      FbxWrapperNativePINVOKE.FbxDateTimeDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxDateTimeDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxColor3DT {
    set {
      FbxWrapperNativePINVOKE.FbxColor3DT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxColor3DT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxColor4DT {
    set {
      FbxWrapperNativePINVOKE.FbxColor4DT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxColor4DT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxCompoundDT {
    set {
      FbxWrapperNativePINVOKE.FbxCompoundDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxCompoundDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxReferenceObjectDT {
    set {
      FbxWrapperNativePINVOKE.FbxReferenceObjectDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxReferenceObjectDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxReferencePropertyDT {
    set {
      FbxWrapperNativePINVOKE.FbxReferencePropertyDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxReferencePropertyDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxVisibilityDT {
    set {
      FbxWrapperNativePINVOKE.FbxVisibilityDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxVisibilityDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxVisibilityInheritanceDT {
    set {
      FbxWrapperNativePINVOKE.FbxVisibilityInheritanceDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxVisibilityInheritanceDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxUrlDT {
    set {
      FbxWrapperNativePINVOKE.FbxUrlDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxUrlDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxXRefUrlDT {
    set {
      FbxWrapperNativePINVOKE.FbxXRefUrlDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxXRefUrlDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTranslationDT {
    set {
      FbxWrapperNativePINVOKE.FbxTranslationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTranslationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxRotationDT {
    set {
      FbxWrapperNativePINVOKE.FbxRotationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxRotationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxScalingDT {
    set {
      FbxWrapperNativePINVOKE.FbxScalingDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxScalingDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxQuaternionDT {
    set {
      FbxWrapperNativePINVOKE.FbxQuaternionDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxQuaternionDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLocalTranslationDT {
    set {
      FbxWrapperNativePINVOKE.FbxLocalTranslationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLocalTranslationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLocalRotationDT {
    set {
      FbxWrapperNativePINVOKE.FbxLocalRotationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLocalRotationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLocalScalingDT {
    set {
      FbxWrapperNativePINVOKE.FbxLocalScalingDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLocalScalingDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLocalQuaternionDT {
    set {
      FbxWrapperNativePINVOKE.FbxLocalQuaternionDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLocalQuaternionDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTransformMatrixDT {
    set {
      FbxWrapperNativePINVOKE.FbxTransformMatrixDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTransformMatrixDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTranslationMatrixDT {
    set {
      FbxWrapperNativePINVOKE.FbxTranslationMatrixDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTranslationMatrixDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxRotationMatrixDT {
    set {
      FbxWrapperNativePINVOKE.FbxRotationMatrixDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxRotationMatrixDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxScalingMatrixDT {
    set {
      FbxWrapperNativePINVOKE.FbxScalingMatrixDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxScalingMatrixDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialEmissiveDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialEmissiveDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialEmissiveDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialEmissiveFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialEmissiveFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialEmissiveFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialAmbientDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialAmbientDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialAmbientDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialAmbientFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialAmbientFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialAmbientFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialDiffuseDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialDiffuseDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialDiffuseDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialDiffuseFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialDiffuseFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialDiffuseFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialBumpDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialBumpDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialBumpDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialNormalMapDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialNormalMapDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialNormalMapDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialTransparentColorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialTransparentColorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialTransparentColorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialTransparencyFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialTransparencyFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialTransparencyFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialSpecularDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialSpecularDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialSpecularDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialSpecularFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialSpecularFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialSpecularFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialShininessDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialShininessDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialShininessDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialReflectionDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialReflectionDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialReflectionDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialReflectionFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialReflectionFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialReflectionFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialDisplacementDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialDisplacementDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialDisplacementDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialVectorDisplacementDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialVectorDisplacementDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialVectorDisplacementDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialCommonFactorDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialCommonFactorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialCommonFactorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxMaterialCommonTextureDT {
    set {
      FbxWrapperNativePINVOKE.FbxMaterialCommonTextureDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxMaterialCommonTextureDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementUndefinedDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementUndefinedDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementUndefinedDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementNormalDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementNormalDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementNormalDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementBinormalDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementBinormalDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementBinormalDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementTangentDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementTangentDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementTangentDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementMaterialDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementMaterialDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementMaterialDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementTextureDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementTextureDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementTextureDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementPolygonGroupDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementPolygonGroupDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementPolygonGroupDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementUVDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementUVDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementUVDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementVertexColorDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementVertexColorDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementVertexColorDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementSmoothingDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementSmoothingDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementSmoothingDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementCreaseDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementCreaseDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementCreaseDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementHoleDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementHoleDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementHoleDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementUserDataDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementUserDataDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementUserDataDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLayerElementVisibilityDT {
    set {
      FbxWrapperNativePINVOKE.FbxLayerElementVisibilityDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementVisibilityDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxAliasDT {
    set {
      FbxWrapperNativePINVOKE.FbxAliasDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxAliasDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxPresetsDT {
    set {
      FbxWrapperNativePINVOKE.FbxPresetsDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxPresetsDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxStatisticsDT {
    set {
      FbxWrapperNativePINVOKE.FbxStatisticsDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxStatisticsDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTextLineDT {
    set {
      FbxWrapperNativePINVOKE.FbxTextLineDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTextLineDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxUnitsDT {
    set {
      FbxWrapperNativePINVOKE.FbxUnitsDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxUnitsDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxWarningDT {
    set {
      FbxWrapperNativePINVOKE.FbxWarningDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxWarningDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxWebDT {
    set {
      FbxWrapperNativePINVOKE.FbxWebDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxWebDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxActionDT {
    set {
      FbxWrapperNativePINVOKE.FbxActionDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxActionDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxCameraIndexDT {
    set {
      FbxWrapperNativePINVOKE.FbxCameraIndexDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxCameraIndexDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxCharPtrDT {
    set {
      FbxWrapperNativePINVOKE.FbxCharPtrDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxCharPtrDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxConeAngleDT {
    set {
      FbxWrapperNativePINVOKE.FbxConeAngleDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxConeAngleDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxEventDT {
    set {
      FbxWrapperNativePINVOKE.FbxEventDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxEventDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxFieldOfViewDT {
    set {
      FbxWrapperNativePINVOKE.FbxFieldOfViewDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxFieldOfViewDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxFieldOfViewXDT {
    set {
      FbxWrapperNativePINVOKE.FbxFieldOfViewXDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxFieldOfViewXDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxFieldOfViewYDT {
    set {
      FbxWrapperNativePINVOKE.FbxFieldOfViewYDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxFieldOfViewYDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxFogDT {
    set {
      FbxWrapperNativePINVOKE.FbxFogDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxFogDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxHSBDT {
    set {
      FbxWrapperNativePINVOKE.FbxHSBDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxHSBDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxIKReachTranslationDT {
    set {
      FbxWrapperNativePINVOKE.FbxIKReachTranslationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxIKReachTranslationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxIKReachRotationDT {
    set {
      FbxWrapperNativePINVOKE.FbxIKReachRotationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxIKReachRotationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxIntensityDT {
    set {
      FbxWrapperNativePINVOKE.FbxIntensityDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxIntensityDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxLookAtDT {
    set {
      FbxWrapperNativePINVOKE.FbxLookAtDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLookAtDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxOcclusionDT {
    set {
      FbxWrapperNativePINVOKE.FbxOcclusionDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxOcclusionDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxOpticalCenterXDT {
    set {
      FbxWrapperNativePINVOKE.FbxOpticalCenterXDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxOpticalCenterXDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxOpticalCenterYDT {
    set {
      FbxWrapperNativePINVOKE.FbxOpticalCenterYDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxOpticalCenterYDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxOrientationDT {
    set {
      FbxWrapperNativePINVOKE.FbxOrientationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxOrientationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxRealDT {
    set {
      FbxWrapperNativePINVOKE.FbxRealDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxRealDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxRollDT {
    set {
      FbxWrapperNativePINVOKE.FbxRollDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxRollDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxScalingUVDT {
    set {
      FbxWrapperNativePINVOKE.FbxScalingUVDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxScalingUVDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxShapeDT {
    set {
      FbxWrapperNativePINVOKE.FbxShapeDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShapeDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxStringListDT {
    set {
      FbxWrapperNativePINVOKE.FbxStringListDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxStringListDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTextureRotationDT {
    set {
      FbxWrapperNativePINVOKE.FbxTextureRotationDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTextureRotationDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTimeCodeDT {
    set {
      FbxWrapperNativePINVOKE.FbxTimeCodeDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTimeCodeDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTimeWarpDT {
    set {
      FbxWrapperNativePINVOKE.FbxTimeWarpDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTimeWarpDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxTranslationUVDT {
    set {
      FbxWrapperNativePINVOKE.FbxTranslationUVDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxTranslationUVDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static FbxDataType FbxWeightDT {
    set {
      FbxWrapperNativePINVOKE.FbxWeightDT_set(FbxDataType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxWeightDT_get();
      FbxDataType ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDataType(cPtr, false);
      return ret;
    } 
  }

  public static void FbxMarkObject(FbxObject pObject, SWIGTYPE_p_FbxMapT_FbxObject_p_int_FbxLessCompareT_FbxObject_p_t_FbxBaseAllocator_t pObjectDstDisconnectCount, SWIGTYPE_p_FbxSetT_FbxObject_p_FbxLessCompareT_FbxObject_p_t_FbxBaseAllocator_t pObjectsToDeleted, SWIGTYPE_p_FbxArrayT_FbxObject_p_t pObjectToDeletedInSequence) {
    FbxWrapperNativePINVOKE.FbxMarkObject(FbxObject.getCPtr(pObject), SWIGTYPE_p_FbxMapT_FbxObject_p_int_FbxLessCompareT_FbxObject_p_t_FbxBaseAllocator_t.getCPtr(pObjectDstDisconnectCount), SWIGTYPE_p_FbxSetT_FbxObject_p_FbxLessCompareT_FbxObject_p_t_FbxBaseAllocator_t.getCPtr(pObjectsToDeleted), SWIGTYPE_p_FbxArrayT_FbxObject_p_t.getCPtr(pObjectToDeletedInSequence));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void FbxCleanUpConnectionsAtDestructionBoundary(FbxScene pObject, SWIGTYPE_p_FbxArrayT_FbxObject_p_t pObjectToDeletedInSequence) {
    FbxWrapperNativePINVOKE.FbxCleanUpConnectionsAtDestructionBoundary(FbxScene.getCPtr(pObject), SWIGTYPE_p_FbxArrayT_FbxObject_p_t.getCPtr(pObjectToDeletedInSequence));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static EFbxType FbxTypeOf(FbxTime.EMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_29((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxMediaClip.EAccessMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_30((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxVideo.EInterlaceMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_31((int)arg0);
    return ret;
  }

  public static void CollectAnimFromCurveNode(SWIGTYPE_p_p_void lSrc, SWIGTYPE_p_void fcn, uint nbCrvs, FbxAnimCurveNode cn, FbxMultiMap pNickToAnimCurveTimeWarpsSet, FbxMultiMap pNickToKFCurveNodeWarpSet) {
    FbxWrapperNativePINVOKE.CollectAnimFromCurveNode(SWIGTYPE_p_p_void.getCPtr(lSrc), SWIGTYPE_p_void.getCPtr(fcn), nbCrvs, FbxAnimCurveNode.getCPtr(cn), FbxMultiMap.getCPtr(pNickToAnimCurveTimeWarpsSet), FbxMultiMap.getCPtr(pNickToKFCurveNodeWarpSet));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void GetAllAnimCurves(FbxAnimStack pAnimStack, SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t pCurves) {
    FbxWrapperNativePINVOKE.GetAllAnimCurves__SWIG_0(FbxAnimStack.getCPtr(pAnimStack), SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t.getCPtr(pCurves));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static void GetAllAnimCurves(FbxObject pObj, FbxAnimStack pAnimStack, SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t pCurves) {
    FbxWrapperNativePINVOKE.GetAllAnimCurves__SWIG_1(FbxObject.getCPtr(pObj), FbxAnimStack.getCPtr(pAnimStack), SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t.getCPtr(pCurves));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static FbxString GetWeightPropertyName(FbxObject pObject) {
    FbxString ret = new FbxString(FbxWrapperNativePINVOKE.GetWeightPropertyName(FbxObject.getCPtr(pObject)), true);
    return ret;
  }

  public static void CreateWeightPropertyForSourceObject(FbxObject pConstraint, FbxObject pSourceObject, double pWeightValue) {
    FbxWrapperNativePINVOKE.CreateWeightPropertyForSourceObject(FbxObject.getCPtr(pConstraint), FbxObject.getCPtr(pSourceObject), pWeightValue);
  }

  public static EFbxType FbxTypeOf(FbxConstraintAim.EWorldUp arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_32((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxConstraintSingleChainIK.EPoleVectorMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_33((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxConstraintSingleChainIK.ESolverMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_34((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxConstraintSingleChainIK.EEvaluationMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_35((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCache.EFileFormat arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_36((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxEuler.EOrder arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_37((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTransform.EInheritType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_38((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(EFbxQuatInterpMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_39((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxNull.ELook arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_40((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxVertexCacheDeformer.ECacheChannelType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_41((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTexture.EUnifiedMappingType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_42((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTexture.ETextureUse6 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_43((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTexture.EWrapMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_44((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTexture.EBlendMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_45((int)arg0);
    return ret;
  }

  public static void ExportThread(SWIGTYPE_p_void arg0) {
    FbxWrapperNativePINVOKE.ExportThread(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static void ImportThread(SWIGTYPE_p_void arg0) {
    FbxWrapperNativePINVOKE.ImportThread(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EOffAutoUser arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_46((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EAutoUser arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_47((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EPostureMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_48((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EFloorPivot arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_49((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.ERollExtractionMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_50((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EHipsTranslationMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_51((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EFootContactType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_52((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EHandContactType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_53((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EFingerContactMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_54((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCharacter.EContactBehaviour arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_55((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxControlSet.EType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_56((int)arg0);
    return ret;
  }

  public static FbxCharacterPropertyInfo gHIK2FbxCharacterPropertyBridge {
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.gHIK2FbxCharacterPropertyBridge_get();
      FbxCharacterPropertyInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCharacterPropertyInfo(cPtr, false);
      return ret;
    } 
  }

  public static EFbxType FbxTypeOf(FbxCachedEffect.ECategory arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_57((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EAntialiasingMethod arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_58((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EApertureFormat arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_59((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EApertureMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_60((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EAspectRatioMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_61((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EFrontBackPlaneDisplayMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_62((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EFrontBackPlaneDistanceMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_63((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EPlateDrawingMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_64((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EFocusDistanceSource arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_65((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EFormat arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_66((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EGateFit arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_67((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EProjectionType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_68((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.ERenderOptionsUsageTime arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_69((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.ESafeAreaStyle arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_70((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.ESamplingType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_71((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCamera.EFilmRollOrder arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_72((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxCameraStereo.EStereoType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_73((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(SWIGTYPE_p_unsigned___int64 arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_74(SWIGTYPE_p_unsigned___int64.getCPtr(arg0));
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxLayerElementArray arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_75(FbxLayerElementArray.getCPtr(arg0));
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxSurfaceMaterial arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_76(FbxSurfaceMaterial.getCPtr(arg0));
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxTexture arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_77(FbxTexture.getCPtr(arg0));
    return ret;
  }

  public static int RemapIndexArrayTo(FbxLayerElement pLayerEl, FbxLayerElement.EMappingMode pNewMapping, FbxLayerElementArrayTemplateFbxInt pIndexArray) {
    int ret = FbxWrapperNativePINVOKE.RemapIndexArrayTo(FbxLayerElement.getCPtr(pLayerEl), (int)pNewMapping, FbxLayerElementArrayTemplateFbxInt.getCPtr(pIndexArray));
    return ret;
  }

  public static SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t new_FbxLayerElementArrayTemplateIntPtrFunc() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.new_FbxLayerElementArrayTemplateIntPtrFunc();
    SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t copy_FbxLayerElementArrayTemplateIntPtrFunc(FbxLayerElementArrayTemplateFbxInt value) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.copy_FbxLayerElementArrayTemplateIntPtrFunc(FbxLayerElementArrayTemplateFbxInt.getCPtr(value));
    SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t(cPtr, false);
    return ret;
  }

  public static void delete_FbxLayerElementArrayTemplateIntPtrFunc(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t obj) {
    FbxWrapperNativePINVOKE.delete_FbxLayerElementArrayTemplateIntPtrFunc(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(obj));
  }

  public static void FbxLayerElementArrayTemplateIntPtrFunc_assign(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t obj, FbxLayerElementArrayTemplateFbxInt value) {
    FbxWrapperNativePINVOKE.FbxLayerElementArrayTemplateIntPtrFunc_assign(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(obj), FbxLayerElementArrayTemplateFbxInt.getCPtr(value));
  }

  public static FbxLayerElementArrayTemplateFbxInt FbxLayerElementArrayTemplateIntPtrFunc_value(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t obj) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementArrayTemplateIntPtrFunc_value(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(obj));
    FbxLayerElementArrayTemplateFbxInt ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementArrayTemplateFbxInt(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t new_FbxLayerElementArrayTemplateIntPtrPtrFunc() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.new_FbxLayerElementArrayTemplateIntPtrPtrFunc();
    SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t copy_FbxLayerElementArrayTemplateIntPtrPtrFunc(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t value) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.copy_FbxLayerElementArrayTemplateIntPtrPtrFunc(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(value));
    SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t(cPtr, false);
    return ret;
  }

  public static void delete_FbxLayerElementArrayTemplateIntPtrPtrFunc(SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t obj) {
    FbxWrapperNativePINVOKE.delete_FbxLayerElementArrayTemplateIntPtrPtrFunc(SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(obj));
  }

  public static void FbxLayerElementArrayTemplateIntPtrPtrFunc_assign(SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t obj, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t value) {
    FbxWrapperNativePINVOKE.FbxLayerElementArrayTemplateIntPtrPtrFunc_assign(SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(obj), SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(value));
  }

  public static SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t FbxLayerElementArrayTemplateIntPtrPtrFunc_value(SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t obj) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxLayerElementArrayTemplateIntPtrPtrFunc_value(SWIGTYPE_p_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(obj));
    SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t(cPtr, false);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxLight.EType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_78((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxLight.EDecayType arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_79((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxLight.EAreaLightShape arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_80((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxLODGroup.EDisplayLevel arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_81((int)arg0);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxMarker.ELook arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_82((int)arg0);
    return ret;
  }

  public static FbxImplementation GetImplementation(FbxObject pObject, string pImplementationTarget) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.GetImplementation(FbxObject.getCPtr(pObject), pImplementationTarget);
    FbxImplementation ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxImplementation(cPtr, false);
    return ret;
  }

  public static EFbxType FbxTypeOf(FbxLayeredTexture.EBlendMode arg0) {
    EFbxType ret = (EFbxType)FbxWrapperNativePINVOKE.FbxTypeOf__SWIG_83((int)arg0);
    return ret;
  }

  public static readonly int _MSC_VER = FbxWrapperNativePINVOKE._MSC_VER_get();
  public static readonly int FBXSDK_ENV_WIN = FbxWrapperNativePINVOKE.FBXSDK_ENV_WIN_get();
  public static readonly int FBXSDK_ARCH_AMD64 = FbxWrapperNativePINVOKE.FBXSDK_ARCH_AMD64_get();
  public static readonly int FBXSDK_CPU_64 = FbxWrapperNativePINVOKE.FBXSDK_CPU_64_get();
  public static readonly int FBXSDK_COMPILER_MSC = FbxWrapperNativePINVOKE.FBXSDK_COMPILER_MSC_get();
  public static readonly int NULL = FbxWrapperNativePINVOKE.NULL_get();
  public static readonly int _MAX_PATH = FbxWrapperNativePINVOKE._MAX_PATH_get();
  public static readonly int FBXSDK_CHAR_MIN = FbxWrapperNativePINVOKE.FBXSDK_CHAR_MIN_get();
  public static readonly int FBXSDK_CHAR_MAX = FbxWrapperNativePINVOKE.FBXSDK_CHAR_MAX_get();
  public static readonly int FBXSDK_UCHAR_MIN = FbxWrapperNativePINVOKE.FBXSDK_UCHAR_MIN_get();
  public static readonly int FBXSDK_UCHAR_MAX = FbxWrapperNativePINVOKE.FBXSDK_UCHAR_MAX_get();
  public static readonly int FBXSDK_SHORT_MIN = FbxWrapperNativePINVOKE.FBXSDK_SHORT_MIN_get();
  public static readonly int FBXSDK_SHORT_MAX = FbxWrapperNativePINVOKE.FBXSDK_SHORT_MAX_get();
  public static readonly int FBXSDK_USHORT_MIN = FbxWrapperNativePINVOKE.FBXSDK_USHORT_MIN_get();
  public static readonly int FBXSDK_USHORT_MAX = FbxWrapperNativePINVOKE.FBXSDK_USHORT_MAX_get();
  public static readonly int FBXSDK_INT_MIN = FbxWrapperNativePINVOKE.FBXSDK_INT_MIN_get();
  public static readonly int FBXSDK_INT_MAX = FbxWrapperNativePINVOKE.FBXSDK_INT_MAX_get();
  public static readonly int FBXSDK_UINT_MIN = FbxWrapperNativePINVOKE.FBXSDK_UINT_MIN_get();
  public static readonly int FBXSDK_UINT_MAX = FbxWrapperNativePINVOKE.FBXSDK_UINT_MAX_get();
  public static readonly int FBXSDK_LONG_MIN = FbxWrapperNativePINVOKE.FBXSDK_LONG_MIN_get();
  public static readonly int FBXSDK_LONG_MAX = FbxWrapperNativePINVOKE.FBXSDK_LONG_MAX_get();
  public static readonly int FBXSDK_ULONG_MIN = FbxWrapperNativePINVOKE.FBXSDK_ULONG_MIN_get();
  public static readonly int FBXSDK_ULONG_MAX = FbxWrapperNativePINVOKE.FBXSDK_ULONG_MAX_get();
  public static readonly double FBXSDK_TOLERANCE = FbxWrapperNativePINVOKE.FBXSDK_TOLERANCE_get();
  public static readonly int FBXSDK_VERSION_MAJOR = FbxWrapperNativePINVOKE.FBXSDK_VERSION_MAJOR_get();
  public static readonly int FBXSDK_VERSION_MINOR = FbxWrapperNativePINVOKE.FBXSDK_VERSION_MINOR_get();
  public static readonly int FBXSDK_VERSION_POINT = FbxWrapperNativePINVOKE.FBXSDK_VERSION_POINT_get();
  public static readonly string FBXSDK_VERSION_NAME = FbxWrapperNativePINVOKE.FBXSDK_VERSION_NAME_get();
  public static readonly int FBXSDK_VERSION_REVISION = FbxWrapperNativePINVOKE.FBXSDK_VERSION_REVISION_get();
  public static readonly string FBXSDK_VERSION_STRING = FbxWrapperNativePINVOKE.FBXSDK_VERSION_STRING_get();
  public static readonly string FBXSDK_VERSION_STRING_FULL = FbxWrapperNativePINVOKE.FBXSDK_VERSION_STRING_FULL_get();
  public static readonly int FBXSDK_DEFINE_NAMESPACE = FbxWrapperNativePINVOKE.FBXSDK_DEFINE_NAMESPACE_get();
  public static readonly string COLLADA_VERSION_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_VERSION_PROPERTY_get();
  public static readonly string COLLADA_VERSION = FbxWrapperNativePINVOKE.COLLADA_VERSION_get();
  public static readonly string COLLADA_SCHEMA = FbxWrapperNativePINVOKE.COLLADA_SCHEMA_get();
  public static readonly string COLLADA_LIBRARY_ANIMATION_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_ANIMATION_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_ANIMATION_CLIP_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_ANIMATION_CLIP_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_CAMERA_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_CAMERA_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_CONTROLLER_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_CONTROLLER_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_EFFECT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_EFFECT_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_FFIELDS_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_FFIELDS_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_GEOMETRY_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_GEOMETRY_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_IMAGE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_IMAGE_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_LIGHT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_LIGHT_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_MATERIAL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_MATERIAL_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_NODE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_NODE_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_PMATERIAL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_PMATERIAL_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_PMODEL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_PMODEL_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_PSCENE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_PSCENE_ELEMENT_get();
  public static readonly string COLLADA_LIBRARY_VSCENE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_VSCENE_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_ANIMATION_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_ANIMATION_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_CAMERA_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_CAMERA_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_CONTROLLER_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_CONTROLLER_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_EFFECT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_EFFECT_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_GEOMETRY_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_GEOMETRY_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_LIGHT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_LIGHT_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_NODE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_NODE_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_VSCENE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_VSCENE_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_PSCENE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_PSCENE_ELEMENT_get();
  public static readonly string COLLADA_INSTANCE_MATERIAL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INSTANCE_MATERIAL_ELEMENT_get();
  public static readonly string COLLADA_ANIMCLIP_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_ANIMCLIP_ELEMENT_get();
  public static readonly string COLLADA_BINDMATERIAL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_BINDMATERIAL_ELEMENT_get();
  public static readonly string COLLADA_EFFECT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_EFFECT_ELEMENT_get();
  public static readonly string COLLADA_INITFROM_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_INITFROM_ELEMENT_get();
  public static readonly string COLLADA_SAMPLER_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_SAMPLER_ELEMENT_get();
  public static readonly string COLLADA_SKELETON_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_SKELETON_ELEMENT_get();
  public static readonly string COLLADA_TARGETS_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_TARGETS_ELEMENT_get();
  public static readonly string COLLADA_TECHNIQUE_COMMON_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_TECHNIQUE_COMMON_ELEMENT_get();
  public static readonly string COLLADA_VSCENE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_VSCENE_ELEMENT_get();
  public static readonly string COLLADA_WEIGHTS_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_WEIGHTS_ELEMENT_get();
  public static readonly string COLLADA_VERTEXCOUNT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_VERTEXCOUNT_ELEMENT_get();
  public static readonly string COLLADA_FX_PROFILE_COMMON_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FX_PROFILE_COMMON_ELEMENT_get();
  public static readonly string COLLADA_FX_PROFILE_CG_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FX_PROFILE_CG_ELEMENT_get();
  public static readonly string COLLADA_FX_PROFILE_HLSL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FX_PROFILE_HLSL_ELEMENT_get();
  public static readonly string COLLADA_FX_PROFILE_GLSL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FX_PROFILE_GLSL_ELEMENT_get();
  public static readonly string COLLADA_FX_PROFILE_GLES_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FX_PROFILE_GLES_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_FLOAT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_FLOAT_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_FLOAT4_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_FLOAT4_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_FLOAT4X4_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_FLOAT4X4_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_INCLUDE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_INCLUDE_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_SURFACE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_SURFACE_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_SAMPLER1D_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_SAMPLER1D_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_SAMPLER2D_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_SAMPLER2D_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_SAMPLER3D_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_SAMPLER3D_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_SAMPLERCUBE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_SAMPLERCUBE_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_NEWPARAM_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_NEWPARAM_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_SETPARAM_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_SETPARAM_ELEMENT_get();
  public static readonly string COLLADA_FXCMN_STRING_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXCMN_STRING_ELEMENT_get();
  public static readonly string COLLADA_TECHNIQUE_STANDARD_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TECHNIQUE_STANDARD_PARAMETER_get();
  public static readonly string COLLADA_FXSTD_CONSTANT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_CONSTANT_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_LAMBERT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_LAMBERT_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_PHONG_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_PHONG_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_BLINN_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_BLINN_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_COLOR_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_COLOR_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_FLOAT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_FLOAT_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_SAMPLER_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FXSTD_SAMPLER_ELEMENT_get();
  public static readonly string COLLADA_FXSTD_TEXTURE_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_FXSTD_TEXTURE_ATTRIBUTE_get();
  public static readonly string COLLADA_FXSTD_TEXTURESET_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_FXSTD_TEXTURESET_ATTRIBUTE_get();
  public static readonly string COLLADA_CONTROLLER_SKIN_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_CONTROLLER_SKIN_ELEMENT_get();
  public static readonly string COLLADA_CONTROLLER_MORPH_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_CONTROLLER_MORPH_ELEMENT_get();
  public static readonly string COLLADA_CAMERA_PERSP_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_CAMERA_PERSP_ELEMENT_get();
  public static readonly string COLLADA_CAMERA_ORTHO_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ORTHO_ELEMENT_get();
  public static readonly string COLLADA_ASPECT_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_ASPECT_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_XFOV_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_XFOV_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_YFOV_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_YFOV_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_ZNEAR_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_ZNEAR_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_ZFAR_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_ZFAR_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_XMAG_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_XMAG_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_YMAG_CAMERA_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_YMAG_CAMERA_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_VERTICAL_APERTURE_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_VERTICAL_APERTURE_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_HORIZONTAL_APERTURE_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_HORIZONTAL_APERTURE_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_LENS_SQUEEZE_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_LENS_SQUEEZE_PARAMETER_get();
  public static readonly string COLLADA_AMBIENT_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_AMBIENT_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_BUMP_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_BUMP_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_DIFFUSE_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_DIFFUSE_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_EMISSION_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_EMISSION_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_TRANSPARENCY_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TRANSPARENCY_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_TRANSPARENT_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TRANSPARENT_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_REFLECTIVE_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_REFLECTIVE_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_REFLECTIVITY_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_REFLECTIVITY_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_SHININESS_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_SHININESS_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_SPECULAR_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_SPECULAR_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_INDEXOFREFRACTION_MATERIAL_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_INDEXOFREFRACTION_MATERIAL_PARAMETER_get();
  public static readonly string COLLADA_OPAQUE_MODE_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_OPAQUE_MODE_ATTRIBUTE_get();
  public static readonly string COLLADA_OPAQUE_MODE_A_ONE = FbxWrapperNativePINVOKE.COLLADA_OPAQUE_MODE_A_ONE_get();
  public static readonly string COLLADA_OPAQUE_MODE_RGB_ONE = FbxWrapperNativePINVOKE.COLLADA_OPAQUE_MODE_RGB_ONE_get();
  public static readonly string COLLADA_OPAQUE_MODE_A_ZERO = FbxWrapperNativePINVOKE.COLLADA_OPAQUE_MODE_A_ZERO_get();
  public static readonly string COLLADA_OPAQUE_MODE_RGB_ZERO = FbxWrapperNativePINVOKE.COLLADA_OPAQUE_MODE_RGB_ZERO_get();
  public static readonly string COLLADA_LIGHT_AMBIENT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIGHT_AMBIENT_ELEMENT_get();
  public static readonly string COLLADA_LIGHT_POINT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIGHT_POINT_ELEMENT_get();
  public static readonly string COLLADA_LIGHT_DIRECTIONAL_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIGHT_DIRECTIONAL_ELEMENT_get();
  public static readonly string COLLADA_LIGHT_SPOT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_LIGHT_SPOT_ELEMENT_get();
  public static readonly string COLLADA_COLOR_LIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_COLOR_LIGHT_PARAMETER_get();
  public static readonly string COLLADA_CONST_ATTENUATION_LIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CONST_ATTENUATION_LIGHT_PARAMETER_get();
  public static readonly string COLLADA_LIN_ATTENUATION_LIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_LIN_ATTENUATION_LIGHT_PARAMETER_get();
  public static readonly string COLLADA_QUAD_ATTENUATION_LIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_QUAD_ATTENUATION_LIGHT_PARAMETER_get();
  public static readonly string COLLADA_FALLOFFEXPONENT_LIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_FALLOFFEXPONENT_LIGHT_PARAMETER_get();
  public static readonly string COLLADA_FALLOFFANGLE_LIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_FALLOFFANGLE_LIGHT_PARAMETER_get();
  public static readonly string COLLADA_BINDSHAPEMX_SKIN_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_BINDSHAPEMX_SKIN_PARAMETER_get();
  public static readonly string COLLADA_CONTRIBUTOR_ASSET_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_CONTRIBUTOR_ASSET_ELEMENT_get();
  public static readonly string COLLADA_AUTHOR_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_AUTHOR_ASSET_PARAMETER_get();
  public static readonly string COLLADA_AUTHORINGTOOL_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_AUTHORINGTOOL_ASSET_PARAMETER_get();
  public static readonly string COLLADA_CREATED_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CREATED_ASSET_PARAMETER_get();
  public static readonly string COLLADA_MODIFIED_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_MODIFIED_ASSET_PARAMETER_get();
  public static readonly string COLLADA_REVISION_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_REVISION_ASSET_PARAMETER_get();
  public static readonly string COLLADA_SOURCEDATA_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_SOURCEDATA_ASSET_PARAMETER_get();
  public static readonly string COLLADA_UNITS_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_UNITS_ASSET_PARAMETER_get();
  public static readonly string COLLADA_UPAXIS_ASSET_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_UPAXIS_ASSET_PARAMETER_get();
  public static readonly string COLLADA_SYMBOL_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_SYMBOL_PROPERTY_get();
  public static readonly string COLLADA_DOCUMENT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_DOCUMENT_STRUCTURE_get();
  public static readonly string COLLADA_ASSET_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ASSET_STRUCTURE_get();
  public static readonly string COLLADA_REVISION_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_REVISION_STRUCTURE_get();
  public static readonly string COLLADA_AUTHORING_TOOL_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_AUTHORING_TOOL_STRUCTURE_get();
  public static readonly string COLLADA_CREATED_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CREATED_STRUCTURE_get();
  public static readonly string COLLADA_MODIFIED_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MODIFIED_STRUCTURE_get();
  public static readonly string COLLADA_AUTHOR_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_AUTHOR_STRUCTURE_get();
  public static readonly string COLLADA_TITLE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TITLE_STRUCTURE_get();
  public static readonly string COLLADA_SUBJECT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SUBJECT_STRUCTURE_get();
  public static readonly string COLLADA_KEYWORDS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_KEYWORDS_STRUCTURE_get();
  public static readonly string COLLADA_COMMENTS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_COMMENTS_STRUCTURE_get();
  public static readonly string COLLADA_UNIT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_UNIT_STRUCTURE_get();
  public static readonly string COLLADA_SOURCE_DATA_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SOURCE_DATA_STRUCTURE_get();
  public static readonly string COLLADA_UP_AXIS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_UP_AXIS_STRUCTURE_get();
  public static readonly string COLLADA_LIBRARY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_LIBRARY_STRUCTURE_get();
  public static readonly string COLLADA_SCENE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SCENE_STRUCTURE_get();
  public static readonly string COLLADA_NODE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_NODE_STRUCTURE_get();
  public static readonly string COLLADA_MATRIX_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MATRIX_STRUCTURE_get();
  public static readonly string COLLADA_TRANSFORM_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRANSFORM_STRUCTURE_get();
  public static readonly string COLLADA_TRANSLATE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRANSLATE_STRUCTURE_get();
  public static readonly string COLLADA_TRANSLATION_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRANSLATION_STRUCTURE_get();
  public static readonly string COLLADA_TRANSLATE_ORIGIN = FbxWrapperNativePINVOKE.COLLADA_TRANSLATE_ORIGIN_get();
  public static readonly string COLLADA_TRANSLATE_LOCATION = FbxWrapperNativePINVOKE.COLLADA_TRANSLATE_LOCATION_get();
  public static readonly string COLLADA_ROTATE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ROTATE_STRUCTURE_get();
  public static readonly string COLLADA_SCALE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SCALE_STRUCTURE_get();
  public static readonly string COLLADA_SKEW_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SKEW_STRUCTURE_get();
  public static readonly string COLLADA_ROTATE_X = FbxWrapperNativePINVOKE.COLLADA_ROTATE_X_get();
  public static readonly string COLLADA_ROTATE_Y = FbxWrapperNativePINVOKE.COLLADA_ROTATE_Y_get();
  public static readonly string COLLADA_ROTATE_Z = FbxWrapperNativePINVOKE.COLLADA_ROTATE_Z_get();
  public static readonly string COLLADA_ROT_X = FbxWrapperNativePINVOKE.COLLADA_ROT_X_get();
  public static readonly string COLLADA_ROT_Y = FbxWrapperNativePINVOKE.COLLADA_ROT_Y_get();
  public static readonly string COLLADA_ROT_Z = FbxWrapperNativePINVOKE.COLLADA_ROT_Z_get();
  public static readonly string COLLADA_ROTATION_X = FbxWrapperNativePINVOKE.COLLADA_ROTATION_X_get();
  public static readonly string COLLADA_ROTATION_Y = FbxWrapperNativePINVOKE.COLLADA_ROTATION_Y_get();
  public static readonly string COLLADA_ROTATION_Z = FbxWrapperNativePINVOKE.COLLADA_ROTATION_Z_get();
  public static readonly string COLLADA_ROTATIONX = FbxWrapperNativePINVOKE.COLLADA_ROTATIONX_get();
  public static readonly string COLLADA_ROTATIONY = FbxWrapperNativePINVOKE.COLLADA_ROTATIONY_get();
  public static readonly string COLLADA_ROTATIONZ = FbxWrapperNativePINVOKE.COLLADA_ROTATIONZ_get();
  public static readonly string COLLADA_ROTATE_PIVOT = FbxWrapperNativePINVOKE.COLLADA_ROTATE_PIVOT_get();
  public static readonly string COLLADA_SCALE_PIVOT = FbxWrapperNativePINVOKE.COLLADA_SCALE_PIVOT_get();
  public static readonly string COLLADA_ROTATE_PIVOT_INVERSE = FbxWrapperNativePINVOKE.COLLADA_ROTATE_PIVOT_INVERSE_get();
  public static readonly string COLLADA_SCALE_PIVOT_INVERSE = FbxWrapperNativePINVOKE.COLLADA_SCALE_PIVOT_INVERSE_get();
  public static readonly string COLLADA_ROTATE_PIVOT_OFFSET = FbxWrapperNativePINVOKE.COLLADA_ROTATE_PIVOT_OFFSET_get();
  public static readonly string COLLADA_SCALE_PIVOT_OFFSET = FbxWrapperNativePINVOKE.COLLADA_SCALE_PIVOT_OFFSET_get();
  public static readonly string COLLADA_PRE_ROTATION_X = FbxWrapperNativePINVOKE.COLLADA_PRE_ROTATION_X_get();
  public static readonly string COLLADA_PRE_ROTATION_Y = FbxWrapperNativePINVOKE.COLLADA_PRE_ROTATION_Y_get();
  public static readonly string COLLADA_PRE_ROTATION_Z = FbxWrapperNativePINVOKE.COLLADA_PRE_ROTATION_Z_get();
  public static readonly string COLLADA_POST_ROTATION_X = FbxWrapperNativePINVOKE.COLLADA_POST_ROTATION_X_get();
  public static readonly string COLLADA_POST_ROTATION_Y = FbxWrapperNativePINVOKE.COLLADA_POST_ROTATION_Y_get();
  public static readonly string COLLADA_POST_ROTATION_Z = FbxWrapperNativePINVOKE.COLLADA_POST_ROTATION_Z_get();
  public static readonly string COLLADA_ROTATE_AXIS_X = FbxWrapperNativePINVOKE.COLLADA_ROTATE_AXIS_X_get();
  public static readonly string COLLADA_ROTATE_AXIS_Y = FbxWrapperNativePINVOKE.COLLADA_ROTATE_AXIS_Y_get();
  public static readonly string COLLADA_ROTATE_AXIS_Z = FbxWrapperNativePINVOKE.COLLADA_ROTATE_AXIS_Z_get();
  public static readonly string COLLADA_LOOKAT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_LOOKAT_STRUCTURE_get();
  public static readonly string COLLADA_PERSPECTIVE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_PERSPECTIVE_STRUCTURE_get();
  public static readonly string COLLADA_GEOMETRY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_GEOMETRY_STRUCTURE_get();
  public static readonly string COLLADA_MESH_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MESH_STRUCTURE_get();
  public static readonly string COLLADA_VERTICES_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_VERTICES_STRUCTURE_get();
  public static readonly string COLLADA_POLYGONS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_POLYGONS_STRUCTURE_get();
  public static readonly string COLLADA_POLYLIST_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_POLYLIST_STRUCTURE_get();
  public static readonly string COLLADA_TRIANGLES_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRIANGLES_STRUCTURE_get();
  public static readonly string COLLADA_P_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_P_STRUCTURE_get();
  public static readonly string COLLADA_ANIMATION_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ANIMATION_STRUCTURE_get();
  public static readonly string COLLADA_CONTROLLER_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CONTROLLER_STRUCTURE_get();
  public static readonly string COLLADA_SKIN_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SKIN_STRUCTURE_get();
  public static readonly string COLLADA_COMBINER_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_COMBINER_STRUCTURE_get();
  public static readonly string COLLADA_JOINTS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_JOINTS_STRUCTURE_get();
  public static readonly string COLLADA_VALUE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_VALUE_STRUCTURE_get();
  public static readonly string COLLADA_MATERIAL_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MATERIAL_STRUCTURE_get();
  public static readonly string COLLADA_SHADER_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SHADER_STRUCTURE_get();
  public static readonly string COLLADA_PASS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_PASS_STRUCTURE_get();
  public static readonly string COLLADA_PROGRAM_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_PROGRAM_STRUCTURE_get();
  public static readonly string COLLADA_TEXTURE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_STRUCTURE_get();
  public static readonly string COLLADA_IMAGE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_IMAGE_STRUCTURE_get();
  public static readonly string COLLADA_INPUT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_INPUT_STRUCTURE_get();
  public static readonly string COLLADA_TECHNIQUE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TECHNIQUE_STRUCTURE_get();
  public static readonly string COLLADA_SOURCE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SOURCE_STRUCTURE_get();
  public static readonly string COLLADA_ACCESSOR_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ACCESSOR_STRUCTURE_get();
  public static readonly string COLLADA_EXTRA_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_EXTRA_STRUCTURE_get();
  public static readonly string COLLADA_BOUNDINGBOX_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_BOUNDINGBOX_STRUCTURE_get();
  public static readonly string COLLADA_MIN_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MIN_STRUCTURE_get();
  public static readonly string COLLADA_MAX_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MAX_STRUCTURE_get();
  public static readonly string COLLADA_ARRAY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ARRAY_STRUCTURE_get();
  public static readonly string COLLADA_FLOAT_ARRAY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_FLOAT_ARRAY_STRUCTURE_get();
  public static readonly string COLLADA_INT_ARRAY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_INT_ARRAY_STRUCTURE_get();
  public static readonly string COLLADA_NAME_ARRAY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_NAME_ARRAY_STRUCTURE_get();
  public static readonly string COLLADA_IDREF_ARRAY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_IDREF_ARRAY_STRUCTURE_get();
  public static readonly string COLLADA_BOOL_ARRAY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_BOOL_ARRAY_STRUCTURE_get();
  public static readonly string COLLADA_SAMPLER_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SAMPLER_STRUCTURE_get();
  public static readonly string COLLADA_CHANNEL_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CHANNEL_STRUCTURE_get();
  public static readonly string COLLADA_CAMERA_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CAMERA_STRUCTURE_get();
  public static readonly string COLLADA_LIGHT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_LIGHT_STRUCTURE_get();
  public static readonly string COLLADA_OPTICS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_OPTICS_STRUCTURE_get();
  public static readonly string COLLADA_PARAMETER_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_PARAMETER_STRUCTURE_get();
  public static readonly string COLLADA_TYPE_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_TYPE_PROPERTY_get();
  public static readonly string COLLADA_ID_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_ID_PROPERTY_get();
  public static readonly string COLLADA_SUBID_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_SUBID_PROPERTY_get();
  public static readonly string COLLADA_NAME_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_NAME_PROPERTY_get();
  public static readonly string COLLADA_LAYER_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_LAYER_PROPERTY_get();
  public static readonly string COLLADA_COUNT_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_COUNT_PROPERTY_get();
  public static readonly string COLLADA_STRIDE_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_STRIDE_PROPERTY_get();
  public static readonly string COLLADA_URL_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_URL_PROPERTY_get();
  public static readonly string COLLADA_SEMANTIC_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_SEMANTIC_PROPERTY_get();
  public static readonly string COLLADA_SOURCE_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_SOURCE_PROPERTY_get();
  public static readonly string COLLADA_TARGET_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_TARGET_PROPERTY_get();
  public static readonly string COLLADA_PROFILE_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_PROFILE_PROPERTY_get();
  public static readonly string COLLADA_MATERIAL_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_MATERIAL_PROPERTY_get();
  public static readonly string COLLADA_METER_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_METER_PROPERTY_get();
  public static readonly string COLLADA_IDX_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_IDX_PROPERTY_get();
  public static readonly string COLLADA_SET_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_SET_PROPERTY_get();
  public static readonly string COLLADA_OFFSET_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_OFFSET_PROPERTY_get();
  public static readonly string COLLADA_FLOW_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_FLOW_PROPERTY_get();
  public static readonly string COLLADA_FORMAT_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_FORMAT_PROPERTY_get();
  public static readonly string COLLADA_HEIGHT_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_HEIGHT_PROPERTY_get();
  public static readonly string COLLADA_WIDTH_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_WIDTH_PROPERTY_get();
  public static readonly string COLLADA_DEPTH_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_DEPTH_PROPERTY_get();
  public static readonly string COLLADA_REF_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_REF_PROPERTY_get();
  public static readonly string COLLADA_GEOMETRY_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_GEOMETRY_LIBRARY_TYPE_get();
  public static readonly string COLLADA_CONTROLLER_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_CONTROLLER_LIBRARY_TYPE_get();
  public static readonly string COLLADA_ANIMATION_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_ANIMATION_LIBRARY_TYPE_get();
  public static readonly string COLLADA_MATERIAL_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_MATERIAL_LIBRARY_TYPE_get();
  public static readonly string COLLADA_TEXTURE_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_LIBRARY_TYPE_get();
  public static readonly string COLLADA_IMAGE_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_IMAGE_LIBRARY_TYPE_get();
  public static readonly string COLLADA_LIGHT_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_LIGHT_LIBRARY_TYPE_get();
  public static readonly string COLLADA_CAMERA_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_CAMERA_LIBRARY_TYPE_get();
  public static readonly string COLLADA_LAMBERT_SHADER_TYPE = FbxWrapperNativePINVOKE.COLLADA_LAMBERT_SHADER_TYPE_get();
  public static readonly string COLLADA_PHONG_SHADER_TYPE = FbxWrapperNativePINVOKE.COLLADA_PHONG_SHADER_TYPE_get();
  public static readonly string COLLADA_CONSTANT_SHADER_TYPE = FbxWrapperNativePINVOKE.COLLADA_CONSTANT_SHADER_TYPE_get();
  public static readonly string COLLADA_NAME_TYPE = FbxWrapperNativePINVOKE.COLLADA_NAME_TYPE_get();
  public static readonly string COLLADA_IDREF_TYPE = FbxWrapperNativePINVOKE.COLLADA_IDREF_TYPE_get();
  public static readonly string COLLADA_FLOAT_TYPE = FbxWrapperNativePINVOKE.COLLADA_FLOAT_TYPE_get();
  public static readonly string COLLADA_BOOL_TYPE = FbxWrapperNativePINVOKE.COLLADA_BOOL_TYPE_get();
  public static readonly string COLLADA_INT_TYPE = FbxWrapperNativePINVOKE.COLLADA_INT_TYPE_get();
  public static readonly string COLLADA_FLOAT3_TYPE = FbxWrapperNativePINVOKE.COLLADA_FLOAT3_TYPE_get();
  public static readonly string COLLADA_FLOAT4_TYPE = FbxWrapperNativePINVOKE.COLLADA_FLOAT4_TYPE_get();
  public static readonly string COLLADA_FUNCTION_TYPE = FbxWrapperNativePINVOKE.COLLADA_FUNCTION_TYPE_get();
  public static readonly string COLLADA_MATRIX_TYPE = FbxWrapperNativePINVOKE.COLLADA_MATRIX_TYPE_get();
  public static readonly string COLLADA_STRING_TYPE = FbxWrapperNativePINVOKE.COLLADA_STRING_TYPE_get();
  public static readonly string COLLADA_JOINT_NODE_TYPE = FbxWrapperNativePINVOKE.COLLADA_JOINT_NODE_TYPE_get();
  public static readonly string COLLADA_NODE_NODE_TYPE = FbxWrapperNativePINVOKE.COLLADA_NODE_NODE_TYPE_get();
  public static readonly string COLLADA_TEXTURE_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_SEMANTIC_get();
  public static readonly string COLLADA_IMAGE_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_IMAGE_SEMANTIC_get();
  public static readonly string COLLADA_INPUT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_INPUT_SEMANTIC_get();
  public static readonly string COLLADA_OUTPUT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_OUTPUT_SEMANTIC_get();
  public static readonly string COLLADA_IN_TANGENT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_IN_TANGENT_SEMANTIC_get();
  public static readonly string COLLADA_OUT_TANGENT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_OUT_TANGENT_SEMANTIC_get();
  public static readonly string COLLADA_INTERPOLATION_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_SEMANTIC_get();
  public static readonly string COLLADA_JOINT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_JOINT_SEMANTIC_get();
  public static readonly string COLLADA_BIND_POSITION_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_BIND_POSITION_SEMANTIC_get();
  public static readonly string COLLADA_BIND_NORMAL_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_BIND_NORMAL_SEMANTIC_get();
  public static readonly string COLLADA_JOINT_AND_WEIGHT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_JOINT_AND_WEIGHT_SEMANTIC_get();
  public static readonly string COLLADA_BIND_MATRIX_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_BIND_MATRIX_SEMANTIC_get();
  public static readonly string COLLADA_JOINT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_JOINT_PARAMETER_get();
  public static readonly string COLLADA_WEIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_WEIGHT_PARAMETER_get();
  public static readonly string COLLADA_MORPH_TARGET_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_MORPH_TARGET_SEMANTIC_get();
  public static readonly string COLLADA_MORPH_WEIGHT_SEMANTIC = FbxWrapperNativePINVOKE.COLLADA_MORPH_WEIGHT_SEMANTIC_get();
  public static readonly string COLLADA_GENERIC_TECHNIQUE = FbxWrapperNativePINVOKE.COLLADA_GENERIC_TECHNIQUE_get();
  public static readonly string COLLADA_TIME_TARGET = FbxWrapperNativePINVOKE.COLLADA_TIME_TARGET_get();
  public static readonly string COLLADA_VERTEX_INPUT = FbxWrapperNativePINVOKE.COLLADA_VERTEX_INPUT_get();
  public static readonly string COLLADA_POSITION_INPUT = FbxWrapperNativePINVOKE.COLLADA_POSITION_INPUT_get();
  public static readonly string COLLADA_NORMAL_INPUT = FbxWrapperNativePINVOKE.COLLADA_NORMAL_INPUT_get();
  public static readonly string COLLADA_COLOR_INPUT = FbxWrapperNativePINVOKE.COLLADA_COLOR_INPUT_get();
  public static readonly string COLLADA_MAPPING_INPUT = FbxWrapperNativePINVOKE.COLLADA_MAPPING_INPUT_get();
  public static readonly string COLLADA_TEXCOORD_INPUT = FbxWrapperNativePINVOKE.COLLADA_TEXCOORD_INPUT_get();
  public static readonly string COLLADA_TEXTANGENT_INPUT = FbxWrapperNativePINVOKE.COLLADA_TEXTANGENT_INPUT_get();
  public static readonly string COLLADA_TEXBINORMAL_INPUT = FbxWrapperNativePINVOKE.COLLADA_TEXBINORMAL_INPUT_get();
  public static readonly string COLLADA_LIGHT_INTENSITY_PARAMETER_14 = FbxWrapperNativePINVOKE.COLLADA_LIGHT_INTENSITY_PARAMETER_14_get();
  public static readonly string COLLADA_LIGHT_PENUMBRA_ANGLE_PARAMETER_14 = FbxWrapperNativePINVOKE.COLLADA_LIGHT_PENUMBRA_ANGLE_PARAMETER_14_get();
  public static readonly string COLLADA_LIGHT_DROPOFF_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_LIGHT_DROPOFF_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_YFOV_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_YFOV_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_ZNEAR_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ZNEAR_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_ZFAR_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ZFAR_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_ORTHO_BOTTOM_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ORTHO_BOTTOM_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_ORTHO_TOP_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ORTHO_TOP_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_ORTHO_LEFT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ORTHO_LEFT_PARAMETER_get();
  public static readonly string COLLADA_CAMERA_ORTHO_RIGHT_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_CAMERA_ORTHO_RIGHT_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_WRAPU_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_WRAPU_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_WRAPV_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_WRAPV_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_MIRRORU_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_MIRRORU_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_MIRRORV_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_MIRRORV_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_BLEND_MODE_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_BLEND_MODE_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_BLEND_MODE_PARAMETER_14 = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_BLEND_MODE_PARAMETER_14_get();
  public static readonly string COLLADA_TEXTURE_REPEATU_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_REPEATU_PARAMETER_get();
  public static readonly string COLLADA_TEXTURE_REPEATV_PARAMETER = FbxWrapperNativePINVOKE.COLLADA_TEXTURE_REPEATV_PARAMETER_get();
  public static readonly string COLLADA_CONSTANT_FUNCTION = FbxWrapperNativePINVOKE.COLLADA_CONSTANT_FUNCTION_get();
  public static readonly string COLLADA_LINEAR_FUNCTION = FbxWrapperNativePINVOKE.COLLADA_LINEAR_FUNCTION_get();
  public static readonly string COLLADA_QUADRATIC_FUNCTION = FbxWrapperNativePINVOKE.COLLADA_QUADRATIC_FUNCTION_get();
  public static readonly string COLLADA_INTERPOLATION_TYPE_LINEAR = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_TYPE_LINEAR_get();
  public static readonly string COLLADA_INTERPOLATION_TYPE_BEZIER = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_TYPE_BEZIER_get();
  public static readonly string COLLADA_INTERPOLATION_TYPE_CARDINAL = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_TYPE_CARDINAL_get();
  public static readonly string COLLADA_INTERPOLATION_TYPE_HERMITE = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_TYPE_HERMITE_get();
  public static readonly string COLLADA_INTERPOLATION_TYPE_BSPLINE = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_TYPE_BSPLINE_get();
  public static readonly string COLLADA_INTERPOLATION_TYPE_STEP = FbxWrapperNativePINVOKE.COLLADA_INTERPOLATION_TYPE_STEP_get();
  public static readonly string COLLADA_X_UP = FbxWrapperNativePINVOKE.COLLADA_X_UP_get();
  public static readonly string COLLADA_Y_UP = FbxWrapperNativePINVOKE.COLLADA_Y_UP_get();
  public static readonly string COLLADA_Z_UP = FbxWrapperNativePINVOKE.COLLADA_Z_UP_get();
  public static readonly string COLLADA_IN_FLOW = FbxWrapperNativePINVOKE.COLLADA_IN_FLOW_get();
  public static readonly string COLLADA_OUT_FLOW = FbxWrapperNativePINVOKE.COLLADA_OUT_FLOW_get();
  public static readonly string COLLADA_INOUT_FLOW = FbxWrapperNativePINVOKE.COLLADA_INOUT_FLOW_get();
  public static readonly string COLLADA_RGB_TYPE = FbxWrapperNativePINVOKE.COLLADA_RGB_TYPE_get();
  public static readonly string COLLADA_RGBA_TYPE = FbxWrapperNativePINVOKE.COLLADA_RGBA_TYPE_get();
  public static readonly string COLLADA_RGB_INPUT = FbxWrapperNativePINVOKE.COLLADA_RGB_INPUT_get();
  public static readonly string COLLADA_RGBA_INPUT = FbxWrapperNativePINVOKE.COLLADA_RGBA_INPUT_get();
  public static readonly string COLLADA_PHYSICS_LIBRARY_TYPE = FbxWrapperNativePINVOKE.COLLADA_PHYSICS_LIBRARY_TYPE_get();
  public static readonly string COLLADA_SHAPE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SHAPE_STRUCTURE_get();
  public static readonly string COLLADA_RIGID_BODY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_RIGID_BODY_STRUCTURE_get();
  public static readonly string COLLADA_DYNAMIC_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_DYNAMIC_STRUCTURE_get();
  public static readonly string COLLADA_MASS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_MASS_STRUCTURE_get();
  public static readonly string COLLADA_PHYSICS_MATERIAL_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_PHYSICS_MATERIAL_STRUCTURE_get();
  public static readonly string COLLADA_STATIC_FRICTION_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_STATIC_FRICTION_ATTRIBUTE_get();
  public static readonly string COLLADA_DYNAMIC_FRICTION_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_DYNAMIC_FRICTION_ATTRIBUTE_get();
  public static readonly string COLLADA_ELASTICITY_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_ELASTICITY_ATTRIBUTE_get();
  public static readonly string COLLADA_BOX_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_BOX_STRUCTURE_get();
  public static readonly string COLLADA_SPHERE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SPHERE_STRUCTURE_get();
  public static readonly string COLLADA_CAPSULE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CAPSULE_STRUCTURE_get();
  public static readonly string COLLADA_CYLINDER_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CYLINDER_STRUCTURE_get();
  public static readonly string COLLADA_ELLIPSOID_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ELLIPSOID_STRUCTURE_get();
  public static readonly string COLLADA_SIZE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SIZE_STRUCTURE_get();
  public static readonly string COLLADA_RADIUS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_RADIUS_STRUCTURE_get();
  public static readonly string COLLADA_PHYSICS_ENVIRONMENT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_PHYSICS_ENVIRONMENT_STRUCTURE_get();
  public static readonly string COLLADA_ENVIRONMENT_ID = FbxWrapperNativePINVOKE.COLLADA_ENVIRONMENT_ID_get();
  public static readonly string COLLADA_TIMESTEP_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_TIMESTEP_ATTRIBUTE_get();
  public static readonly string COLLADA_GRAVITY_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_GRAVITY_ATTRIBUTE_get();
  public static readonly string COLLADA_INITIAL_VELOCITY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_INITIAL_VELOCITY_STRUCTURE_get();
  public static readonly string COLLADA_INITIAL_ANGULAR_VELOCITY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_INITIAL_ANGULAR_VELOCITY_STRUCTURE_get();
  public static readonly string COLLADA_CONVEX_MESH_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CONVEX_MESH_STRUCTURE_get();
  public static readonly string COLLADA_INERTIA_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_INERTIA_STRUCTURE_get();
  public static readonly string COLLADA_DENSITY_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_DENSITY_STRUCTURE_get();
  public static readonly string COLLADA_CENTER_OF_MASS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_CENTER_OF_MASS_STRUCTURE_get();
  public static readonly string COLLADA_DYNAMICS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_DYNAMICS_STRUCTURE_get();
  public static readonly string COLLADA_RIGID_CONSTRAINT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_RIGID_CONSTRAINT_STRUCTURE_get();
  public static readonly string COLLADA_BODY_PROPERTY = FbxWrapperNativePINVOKE.COLLADA_BODY_PROPERTY_get();
  public static readonly string COLLADA_ATTACHMENT_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ATTACHMENT_STRUCTURE_get();
  public static readonly string COLLADA_ROT_LIMIT_MIN_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ROT_LIMIT_MIN_STRUCTURE_get();
  public static readonly string COLLADA_ROT_LIMIT_MAX_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ROT_LIMIT_MAX_STRUCTURE_get();
  public static readonly string COLLADA_TRANS_LIMIT_MIN_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRANS_LIMIT_MIN_STRUCTURE_get();
  public static readonly string COLLADA_TRANS_LIMIT_MAX_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRANS_LIMIT_MAX_STRUCTURE_get();
  public static readonly string COLLADA_ENABLED_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_ENABLED_STRUCTURE_get();
  public static readonly string COLLADA_INTERPENETRATE_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_INTERPENETRATE_STRUCTURE_get();
  public static readonly string COLLADA_SPRING_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_SPRING_STRUCTURE_get();
  public static readonly string COLLADA_STIFFNESS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_STIFFNESS_STRUCTURE_get();
  public static readonly string COLLADA_DAMPING_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_DAMPING_STRUCTURE_get();
  public static readonly string COLLADA_REST_LENGTH_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_REST_LENGTH_STRUCTURE_get();
  public static readonly string COLLADA_P0_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_P0_STRUCTURE_get();
  public static readonly string COLLADA_P1_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_P1_STRUCTURE_get();
  public static readonly string COLLADA_TRUE_KEYWORD = FbxWrapperNativePINVOKE.COLLADA_TRUE_KEYWORD_get();
  public static readonly string COLLADA_FALSE_KEYWORD = FbxWrapperNativePINVOKE.COLLADA_FALSE_KEYWORD_get();
  public static readonly string COLLADA_LINES_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_LINES_STRUCTURE_get();
  public static readonly string COLLADA_LINESTRIP_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_LINESTRIP_STRUCTURE_get();
  public static readonly string COLLADA_TRIFANS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRIFANS_STRUCTURE_get();
  public static readonly string COLLADA_TRISTRIPS_STRUCTURE = FbxWrapperNativePINVOKE.COLLADA_TRISTRIPS_STRUCTURE_get();
  public static readonly string COLLADA_MAYA_PROFILE = FbxWrapperNativePINVOKE.COLLADA_MAYA_PROFILE_get();
  public static readonly string COLLADA_MAYA_LAYER_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_MAYA_LAYER_ELEMENT_get();
  public static readonly string COLLADA_MAX3D_PROFILE = FbxWrapperNativePINVOKE.COLLADA_MAX3D_PROFILE_get();
  public static readonly string COLLADA_MAX3D_FRAMERATE_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_MAX3D_FRAMERATE_ELEMENT_get();
  public static readonly string COLLADA_FCOLLADA_PROFILE = FbxWrapperNativePINVOKE.COLLADA_FCOLLADA_PROFILE_get();
  public static readonly string COLLADA_FCOLLADA_STARTTIME_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FCOLLADA_STARTTIME_ELEMENT_get();
  public static readonly string COLLADA_FCOLLADA_ENDTIME_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FCOLLADA_ENDTIME_ELEMENT_get();
  public static readonly string COLLADA_FCOLLADA_VISIBILITY_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FCOLLADA_VISIBILITY_ELEMENT_get();
  public static readonly string COLLADA_XSI_PROFILE = FbxWrapperNativePINVOKE.COLLADA_XSI_PROFILE_get();
  public static readonly string COLLADA_XSI_VISIBILITY_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_XSI_VISIBILITY_ELEMENT_get();
  public static readonly string COLLADA_FBX_PROFILE = FbxWrapperNativePINVOKE.COLLADA_FBX_PROFILE_get();
  public static readonly string COLLADA_FBX_TARGET_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_FBX_TARGET_ELEMENT_get();
  public static readonly string COLLADA_NVIDIA_FXCOMPOSER_PROFILE = FbxWrapperNativePINVOKE.COLLADA_NVIDIA_FXCOMPOSER_PROFILE_get();
  public static readonly string COLLADA_NVIDIA_FXCOMPOSER_IMPORT_ELEMENT = FbxWrapperNativePINVOKE.COLLADA_NVIDIA_FXCOMPOSER_IMPORT_ELEMENT_get();
  public static readonly string COLLADA_NVIDIA_FXCOMPOSER_URL_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_NVIDIA_FXCOMPOSER_URL_ATTRIBUTE_get();
  public static readonly string COLLADA_NVIDIA_FXCOMPOSER_COMPILER_OPTIONS_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_NVIDIA_FXCOMPOSER_COMPILER_OPTIONS_ATTRIBUTE_get();
  public static readonly string COLLADA_NVIDIA_FXCOMPOSER_PROFILE_ATTRIBUTE = FbxWrapperNativePINVOKE.COLLADA_NVIDIA_FXCOMPOSER_PROFILE_ATTRIBUTE_get();
  public static readonly string FBXSDK_ASSERT_ENVSTR = FbxWrapperNativePINVOKE.FBXSDK_ASSERT_ENVSTR_get();
  public static readonly string FIELD_SUMMARY = FbxWrapperNativePINVOKE.FIELD_SUMMARY_get();
  public static readonly string FIELD_SUMMARY_VERSION = FbxWrapperNativePINVOKE.FIELD_SUMMARY_VERSION_get();
  public static readonly string FIELD_SUMMARY_TEMPLATE = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TEMPLATE_get();
  public static readonly string FIELD_SUMMARY_PASSWORD_PROTECTION = FbxWrapperNativePINVOKE.FIELD_SUMMARY_PASSWORD_PROTECTION_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_MODEL = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_MODEL_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_DEVICE = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_DEVICE_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_CHARACTER = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_CHARACTER_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_ACTOR = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_ACTOR_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_CONSTRAINT = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_CONSTRAINT_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_MEDIA = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_MEDIA_get();
  public static readonly string FIELD_SUMMARY_CONTENT_COUNT_COMPONENT = FbxWrapperNativePINVOKE.FIELD_SUMMARY_CONTENT_COUNT_COMPONENT_get();
  public static readonly string FIELD_SUMMARY_TAKES = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_get();
  public static readonly string FIELD_SUMMARY_TAKES_VERSION = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_VERSION_get();
  public static readonly string FIELD_SUMMARY_TAKES_CURRENT = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_CURRENT_get();
  public static readonly string FIELD_SUMMARY_TAKES_TAKE = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_TAKE_get();
  public static readonly string FIELD_SUMMARY_TAKES_TAKE_COMMENT = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_TAKE_COMMENT_get();
  public static readonly string FIELD_SUMMARY_TAKES_TAKE_LOCAL_TIME = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_TAKE_LOCAL_TIME_get();
  public static readonly string FIELD_SUMMARY_TAKES_TAKE_REFERENCE_TIME = FbxWrapperNativePINVOKE.FIELD_SUMMARY_TAKES_TAKE_REFERENCE_TIME_get();
  public static readonly string FIELD_KFBXOBJECT_REFERENCE_TO = FbxWrapperNativePINVOKE.FIELD_KFBXOBJECT_REFERENCE_TO_get();
  public static readonly string FIELD_KFBXOBJECT_DOCUMENT = FbxWrapperNativePINVOKE.FIELD_KFBXOBJECT_DOCUMENT_get();
  public static readonly string FIELD_KFBXOBECT_REFERENCE_TO = FbxWrapperNativePINVOKE.FIELD_KFBXOBECT_REFERENCE_TO_get();
  public static readonly string FIELD_KFBXCONTAINER_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXCONTAINER_VERSION_get();
  public static readonly string FIELD_KFBXCONTAINER_CONTAINER = FbxWrapperNativePINVOKE.FIELD_KFBXCONTAINER_CONTAINER_get();
  public static readonly string FIELD_THUMBNAIL = FbxWrapperNativePINVOKE.FIELD_THUMBNAIL_get();
  public static readonly string FIELD_THUMBNAIL_VERSION = FbxWrapperNativePINVOKE.FIELD_THUMBNAIL_VERSION_get();
  public static readonly string FIELD_THUMBNAIL_SIZE = FbxWrapperNativePINVOKE.FIELD_THUMBNAIL_SIZE_get();
  public static readonly string FIELD_THUMBNAIL_FORMAT = FbxWrapperNativePINVOKE.FIELD_THUMBNAIL_FORMAT_get();
  public static readonly string FIELD_THUMBNAIL_ENCODING = FbxWrapperNativePINVOKE.FIELD_THUMBNAIL_ENCODING_get();
  public static readonly string FIELD_THUMBNAIL_IMAGE = FbxWrapperNativePINVOKE.FIELD_THUMBNAIL_IMAGE_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_VERSION_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_SHADOWPLANES = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_SHADOWPLANES_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_COUNT_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_PLANE = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_PLANE_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_USESHADOW = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_USESHADOW_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_SHADOWINTENSITY = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_SHADOWINTENSITY_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_AMBIENTRENDER = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_AMBIENTRENDER_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_AMBIENTLIGHTCOLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_AMBIENTLIGHTCOLOR_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGOPTIONS = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGOPTIONS_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGENABLE = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGENABLE_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGMODE = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGMODE_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGDENSITY = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGDENSITY_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGSTART = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGSTART_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGEND = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGEND_get();
  public static readonly string FIELD_KFBXGLOBALLIGHTSETTINGS_FOGCOLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALLIGHTSETTINGS_FOGCOLOR_get();
  public static readonly string FIELD_KFBXGLOBALCAMERASETTINGS_RENDERER_SETTINGS = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALCAMERASETTINGS_RENDERER_SETTINGS_get();
  public static readonly string FIELD_KFBXGLOBALCAMERASETTINGS_DEFAULT_CAMERA = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALCAMERASETTINGS_DEFAULT_CAMERA_get();
  public static readonly string FIELD_KFBXGLOBALCAMERASETTINGS_DEFAULT_VIEWING_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALCAMERASETTINGS_DEFAULT_VIEWING_MODE_get();
  public static readonly string FIELD_KFBXGLOBALCAMERASETTINGS_SETTINGS = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALCAMERASETTINGS_SETTINGS_get();
  public static readonly string FIELD_KFBXGLOBALCAMERASETTINGS_CAMERA = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALCAMERASETTINGS_CAMERA_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_TIME_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_TIME_MODE_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_FRAMERATE = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_FRAMERATE_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_TIME_PROTOCOL = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_TIME_PROTOCOL_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_SNAP_ON_FRAMES = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_SNAP_ON_FRAMES_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_TIME_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_TIME_INDEX_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_TIME_MARKER = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_TIME_MARKER_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_TIME = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_TIME_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_LOOP = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_REFERENCE_LOOP_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_TIMELINE_START_TIME = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_TIMELINE_START_TIME_get();
  public static readonly string FIELD_KFBXGLOBALTIMESETTINGS_TIMELINE_STOP_TIME = FbxWrapperNativePINVOKE.FIELD_KFBXGLOBALTIMESETTINGS_TIMELINE_STOP_TIME_get();
  public static readonly string FIELD_MEDIA_MEDIA = FbxWrapperNativePINVOKE.FIELD_MEDIA_MEDIA_get();
  public static readonly string FIELD_MEDIA_AUDIO = FbxWrapperNativePINVOKE.FIELD_MEDIA_AUDIO_get();
  public static readonly string FIELD_MEDIA_VIDEO = FbxWrapperNativePINVOKE.FIELD_MEDIA_VIDEO_get();
  public static readonly string FIELD_MEDIA_TYPE = FbxWrapperNativePINVOKE.FIELD_MEDIA_TYPE_get();
  public static readonly string TOKEN_MEDIA_CLIP = FbxWrapperNativePINVOKE.TOKEN_MEDIA_CLIP_get();
  public static readonly string FIELD_MEDIA_VERSION = FbxWrapperNativePINVOKE.FIELD_MEDIA_VERSION_get();
  public static readonly string FIELD_MEDIA_ORIGINAL_FORMAT = FbxWrapperNativePINVOKE.FIELD_MEDIA_ORIGINAL_FORMAT_get();
  public static readonly string FIELD_MEDIA_ORIGINAL_FILENAME = FbxWrapperNativePINVOKE.FIELD_MEDIA_ORIGINAL_FILENAME_get();
  public static readonly string FIELD_MEDIA_FILENAME = FbxWrapperNativePINVOKE.FIELD_MEDIA_FILENAME_get();
  public static readonly string FIELD_MEDIA_RELATIVE_FILENAME = FbxWrapperNativePINVOKE.FIELD_MEDIA_RELATIVE_FILENAME_get();
  public static readonly string FIELD_MEDIA_CONTENT = FbxWrapperNativePINVOKE.FIELD_MEDIA_CONTENT_get();
  public static readonly string FIELD_PROPERTIES = FbxWrapperNativePINVOKE.FIELD_PROPERTIES_get();
  public static readonly string FIELD_PROPERTIES_VERSION = FbxWrapperNativePINVOKE.FIELD_PROPERTIES_VERSION_get();
  public static readonly string FIELD_USERPROPERTIES = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_get();
  public static readonly string FIELD_USERPROPERTIES_NAME = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_NAME_get();
  public static readonly string FIELD_USERPROPERTIES_TYPE = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_TYPE_get();
  public static readonly string FIELD_USERPROPERTIES_LABEL = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_LABEL_get();
  public static readonly string FIELD_USERPROPERTIES_MIN = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_MIN_get();
  public static readonly string FIELD_USERPROPERTIES_MAX = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_MAX_get();
  public static readonly string FIELD_USERPROPERTIES_VALUE = FbxWrapperNativePINVOKE.FIELD_USERPROPERTIES_VALUE_get();
  public static readonly string FIELD_KFBXNODE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_VERSION_get();
  public static readonly string FIELD_KFBXNODE_ANIMATION_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_ANIMATION_MODE_get();
  public static readonly string FIELD_KFBXNODE_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TYPE_get();
  public static readonly string FIELD_KFBXNODE_TYPE_FLAGS = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TYPE_FLAGS_get();
  public static readonly string FIELD_KFBXNODE_MODEL = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_MODEL_get();
  public static readonly string FIELD_KFBXNODE_HIDDEN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_HIDDEN_get();
  public static readonly string FIELD_KFBXNODE_SHADING = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_SHADING_get();
  public static readonly string FIELD_KFBXNODE_TRANSFORM = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TRANSFORM_get();
  public static readonly string FIELD_KFBXNODE_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_TRANSLATION = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TRANSLATION_get();
  public static readonly string FIELD_KFBXNODE_ROTATION = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_ROTATION_get();
  public static readonly string FIELD_KFBXNODE_SCALING = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_SCALING_get();
  public static readonly string FIELD_KFBXNODE_CHILDREN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_CHILDREN_get();
  public static readonly string FIELD_KFBXNODE_CULLING_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_CULLING_TYPE_get();
  public static readonly string TOKEN_KFBXNODE_CULLING_OFF = FbxWrapperNativePINVOKE.TOKEN_KFBXNODE_CULLING_OFF_get();
  public static readonly string TOKEN_KFBXNODE_CULLING_ON_CCW = FbxWrapperNativePINVOKE.TOKEN_KFBXNODE_CULLING_ON_CCW_get();
  public static readonly string TOKEN_KFBXNODE_CULLING_ON_CW = FbxWrapperNativePINVOKE.TOKEN_KFBXNODE_CULLING_ON_CW_get();
  public static readonly string FIELD_KFBXNODE_LIMITS = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_AUTO = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_AUTO_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_AUTO = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_AUTO_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_AUTO = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_AUTO_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_ENABLE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_ENABLE_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_ENABLE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_ENABLE_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_ENABLE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_ENABLE_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_X_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_X_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_Y_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_Y_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_Z_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_Z_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_X_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_X_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Y_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Y_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Z_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Z_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_X_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_X_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_Y_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_Y_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_Z_DEFAULT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_Z_DEFAULT_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_X_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_X_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_Y_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_Y_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_Z_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_Z_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_X_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_X_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Y_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Y_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Z_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Z_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_X_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_X_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_Y_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_Y_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_Z_MIN = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_Z_MIN_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_X_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_X_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_Y_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_Y_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_T_Z_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_T_Z_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_X_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_X_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Y_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Y_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Z_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Z_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_X_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_X_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_Y_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_Y_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_S_Z_MAX = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_S_Z_MAX_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_TYPE_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_CLAMP_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_CLAMP_TYPE_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_X_AXIS = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_X_AXIS_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Y_AXIS = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Y_AXIS_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_R_Z_AXIS = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_R_Z_AXIS_get();
  public static readonly string FIELD_KFBXNODE_LIMITS_AXIS_LENGTH = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_LIMITS_AXIS_LENGTH_get();
  public static readonly string FIELD_KFBXNODE_TARGET = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TARGET_get();
  public static readonly string FIELD_KFBXNODE_UP_VECTOR_MODEL = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_UP_VECTOR_MODEL_get();
  public static readonly string FIELD_KFBXNODE_POST_TARGET_ROTATION = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_POST_TARGET_ROTATION_get();
  public static readonly string FIELD_KFBXNODE_TARGET_UP_VECTOR = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TARGET_UP_VECTOR_get();
  public static readonly string FIELD_KFBXNODE_PIVOTS = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_PIVOTS_get();
  public static readonly string FIELD_KFBXNODE_PACKAGE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_PACKAGE_get();
  public static readonly string FIELD_KFBXNODE_FILE = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_FILE_get();
  public static readonly string FIELD_KFBXNODE_TRANSLATION_OFFSET = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_TRANSLATION_OFFSET_get();
  public static readonly string FIELD_KFBXNODE_ROTATION_PIVOT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_ROTATION_PIVOT_get();
  public static readonly string FIELD_KFBXNODE_PRE_ROTATION = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_PRE_ROTATION_get();
  public static readonly string FIELD_KFBXNODE_POST_ROTATION = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_POST_ROTATION_get();
  public static readonly string FIELD_KFBXNODE_SCALING_PIVOT = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_SCALING_PIVOT_get();
  public static readonly string FIELD_KFBXNODE_PIVOT_ENABLED = FbxWrapperNativePINVOKE.FIELD_KFBXNODE_PIVOT_ENABLED_get();
  public static readonly string FIELD_KFBXGENERICNODE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGENERICNODE_VERSION_get();
  public static readonly string FIELD_KFBXGENERICNODE_GENERICNODE = FbxWrapperNativePINVOKE.FIELD_KFBXGENERICNODE_GENERICNODE_get();
  public static readonly string FIELD_KFBXGEOMETRY_MATERIAL = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_MATERIAL_get();
  public static readonly string FIELD_KFBXGEOMETRY_TEXTURE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_TEXTURE_get();
  public static readonly string FIELD_KFBXGEOMETRY_LINK = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_LINK_get();
  public static readonly string FIELD_KFBXGEOMETRY_SHAPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_SHAPE_get();
  public static readonly string FIELD_KFBXMARKER_LOOK = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_LOOK_get();
  public static readonly string FIELD_KFBXMARKER_SIZE = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_SIZE_get();
  public static readonly string FIELD_KFBXMARKER_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_COLOR_get();
  public static readonly string FIELD_KFBXMARKER_SHOW_LABEL = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_SHOW_LABEL_get();
  public static readonly string FIELD_KFBXMARKER_IK_PIVOT = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_IK_PIVOT_get();
  public static readonly string FIELD_KFBXMARKER_IK_REACH_TRANSLATION = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_IK_REACH_TRANSLATION_get();
  public static readonly string FIELD_KFBXMARKER_IK_REACH_ROTATION = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_IK_REACH_ROTATION_get();
  public static readonly string FIELD_KFBXMARKER_IK_PULL = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_IK_PULL_get();
  public static readonly string FIELD_KFBXMARKER_IK_PULL_HIPS = FbxWrapperNativePINVOKE.FIELD_KFBXMARKER_IK_PULL_HIPS_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_GEOMETRY_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_GEOMETRY_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_POSITION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_POSITION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_UP_VECTOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_UP_VECTOR_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_DEFAULT_CAMERA_INTEREST_POSITION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_DEFAULT_CAMERA_INTEREST_POSITION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_ROLL = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_ROLL_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_TURNTABLE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_TURNTABLE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_PROJECTION_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_PROJECTION_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_FORMAT_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_FORMAT_NAME_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_NTSC = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_NTSC_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_D1_NTSC = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_D1_NTSC_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_PAL = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_PAL_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_D1_PAL = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_D1_PAL_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_HD = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_HD_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_640x480 = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_640x480_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_320x200 = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_320x200_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_320x240 = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_320x240_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_128x128 = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_128x128_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_FULL_SCREEN = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_FULL_SCREEN_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_CUSTOM_FORMAT = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_CUSTOM_FORMAT_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_ASPECT_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_ASPECT_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_ASPECT_WIDTH = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_ASPECT_WIDTH_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_ASPECT_HEIGHT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_ASPECT_HEIGHT_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_PIXEL_RATIO = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_PIXEL_RATIO_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_NEAR_PLANE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_NEAR_PLANE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_FAR_PLANE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_FAR_PLANE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_LOCK = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_LOCK_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_APERTURE_FORMAT_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_APERTURE_FORMAT_NAME_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_16MM_THEATRICAL = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_16MM_THEATRICAL_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_SUPER_16MM = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_SUPER_16MM_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_35MM_ACADEMY = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_35MM_ACADEMY_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_35MM_TV_PROJECTION = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_35MM_TV_PROJECTION_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_35MM_FULL_APERTURE = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_35MM_FULL_APERTURE_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_35MM_185_PROJECTION = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_35MM_185_PROJECTION_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_35MM_ANAMORPHIC = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_35MM_ANAMORPHIC_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_70MM_PROJECTION = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_70MM_PROJECTION_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_VISTA_VISION = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_VISTA_VISION_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_DYNAVISION = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_DYNAVISION_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_IMAX = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_IMAX_get();
  public static readonly string TOKEN_KFBXGEOMETRYCAMERA_CUSTOM_APERTURE_FORMAT = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYCAMERA_CUSTOM_APERTURE_FORMAT_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_APERTURE_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_APERTURE_MODE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_DIMENSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_DIMENSION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_SQUEEZERATIO = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_SQUEEZERATIO_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_FOCAL_LENGTH = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_FOCAL_LENGTH_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_X = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_X_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_Y = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_APERTURE_Y_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_OPTICAL_CENTER_X = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_OPTICAL_CENTER_X_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_OPTICAL_CENTER_Y = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_OPTICAL_CENTER_Y_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_MEDIA_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_MEDIA_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_TEXTURE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_TEXTURE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_VIDEO_CLIP_TEXTURE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_VIDEO_CLIP_TEXTURE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DISPLAY_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DISPLAY_MODE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DRAWING_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DRAWING_MODE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_FOREGROUND_MATTE_THRESHOLD_ENABLE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_FOREGROUND_MATTE_THRESHOLD_ENABLE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_FOREGROUND_MATTE_TRESHOLD = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_FOREGROUND_MATTE_TRESHOLD_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_PLACEMENT_OPTIONS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_PLACEMENT_OPTIONS_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DISTANCE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DISTANCE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DISTANCE_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_DISTANCE_MODE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_VIEW_CAMERA_INTEREST = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_VIEW_CAMERA_INTEREST_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_VIEW_NEAR_FAR_PLANES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_VIEW_NEAR_FAR_PLANES_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SHOW_GRID = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SHOW_GRID_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SHOW_AXIS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SHOW_AXIS_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SHOW_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SHOW_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SHOW_INFO_ON_MOVING = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SHOW_INFO_ON_MOVING_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SHOW_TIME_CODE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SHOW_TIME_CODE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_DISPLAY_SAFE_AREA = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_DISPLAY_SAFE_AREA_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SAFE_AREA_STYLE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SAFE_AREA_STYLE_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_DISPLAY_SAFE_AREA_ON_RENDER = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_DISPLAY_SAFE_AREA_ON_RENDER_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_SHOW_AUDIO = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_SHOW_AUDIO_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_BACKGROUND_COLOR_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_AUDIO_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_AUDIO_COLOR_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_USE_FRAME_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_USE_FRAME_COLOR_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_FRAME_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_FRAME_COLOR_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_ORTHO_ZOOM = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_ORTHO_ZOOM_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_DEPTH_OF_FIELD = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_DEPTH_OF_FIELD_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_ANTIALIASING = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_ANTIALIASING_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_OVERSAMPLING = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_CAMERA_LENS_OVERSAMPLING_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_RENDER_OPTIONS_USAGE_TIME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_RENDER_OPTIONS_USAGE_TIME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_GEOMETRY_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_GEOMETRY_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_STEREO = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_STEREO_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_INTERAXIAL_SEP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_INTERAXIAL_SEP_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_ZERO_PARALLAX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_ZERO_PARALLAX_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_TOE_IN_ADJUST = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_TOE_IN_ADJUST_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_FILM_OFFSET_RIGHT_CAM = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_FILM_OFFSET_RIGHT_CAM_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_FILM_OFFSET_LEFT_CAM = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_FILM_OFFSET_LEFT_CAM_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_PRECOMP_FILE_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_PRECOMP_FILE_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_RELATIVE_PRECOMP_FILE_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_RELATIVE_PRECOMP_FILE_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERA_STEREO_PRECOMP_FILE_CONTENT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERA_STEREO_PRECOMP_FILE_CONTENT_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERASWITCHER_SWITCHER = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERASWITCHER_SWITCHER_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERASWITCHER_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERASWITCHER_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERASWITCHER_CAMERA_ID = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERASWITCHER_CAMERA_ID_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERASWITCHER_CAMERA_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERASWITCHER_CAMERA_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYCAMERASWITCHER_CAMERA_INDEX_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYCAMERASWITCHER_CAMERA_INDEX_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYLIGHT_GEOMETRY_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLIGHT_GEOMETRY_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYLIGHT_LIGHT_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLIGHT_LIGHT_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYLIGHT_LIGHT_TYPE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLIGHT_LIGHT_TYPE_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYLIGHT_CAST_LIGHT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLIGHT_CAST_LIGHT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_UV_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_UV_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_GEOMETRY_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_GEOMETRY_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTICES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTICES_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_EDGES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_EDGES_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_INTERNAL_EDGES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_INTERNAL_EDGES_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_NORMALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_NORMALS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_NORMALS_WCOMPONENT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_NORMALS_WCOMPONENT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_BINORMALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_BINORMALS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_BINORMALS_WCOMPONENT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_BINORMALS_WCOMPONENT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TANGENTS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TANGENTS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TANGENTS_WCOMPONENT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TANGENTS_WCOMPONENT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_NORMALS_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_NORMALS_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_BINORMALS_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_BINORMALS_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TANGENTS_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TANGENTS_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_MATERIAL_ASSIGNATION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_MATERIAL_ASSIGNATION_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_ASSIGNATION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_ASSIGNATION_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_POLYGON_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_POLYGON_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_POLYGON_GROUP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_POLYGON_GROUP_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_MATERIALS_ID = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_MATERIALS_ID_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_ID = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_ID_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_UV_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_UV_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_MAPPING_INFO_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_MAPPING_INFO_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_UV = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_UV_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_POLYGON_UV = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_POLYGON_UV_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_GEOMETRY_UV_INFO = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_GEOMETRY_UV_INFO_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_VERTEX_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_VERTEX_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_TEXTURE_UV_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_TEXTURE_UV_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_INFO = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_INFO_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_ASSIGNATION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_ASSIGNATION_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_VALUES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_VALUES_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTEX_COLOR_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_SMOOTHING = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_SMOOTHING_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VERTEX_CREASE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VERTEX_CREASE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_EDGE_CREASE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_EDGE_CREASE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_HOLE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_HOLE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_DIRECT_INDICES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_DIRECT_INDICES_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_DIRECT_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_DIRECT_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_ID = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_ID_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_ARRAY = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_ARRAY_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_USER_DATA_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_USER_DATA_NAME_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_VISIBILITY = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_VISIBILITY_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_SMOOTHNESS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_SMOOTHNESS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_PREVIEW_DIVSION_LEVELS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_PREVIEW_DIVSION_LEVELS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_RENDER_DIVSION_LEVELS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_RENDER_DIVSION_LEVELS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_DISPLAY_SUBDIVISIONS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_DISPLAY_SUBDIVISIONS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_PRESERVE_BORDERS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_PRESERVE_BORDERS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_PRESERVE_HARD_EDGES = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_PRESERVE_HARD_EDGES_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_PROPAGATE_EDGE_HARDNESS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_PROPAGATE_EDGE_HARDNESS_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_BOUNDARY_RULE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_BOUNDARY_RULE_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_U_EXTENDED_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_U_EXTENDED_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_U_CLOSED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_U_CLOSED_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_U_TOPCAP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_U_TOPCAP_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_U_STEP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_U_STEP_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_U_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_U_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_V_EXTENDED_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_V_EXTENDED_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_V_CLOSED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_V_CLOSED_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_V_TOPCAP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_V_TOPCAP_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_V_STEP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_V_STEP_get();
  public static readonly string FIELD_KFBXGEOMETRYMESH_V_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYMESH_V_COUNT_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_NO_MAPPING_INFORMATION = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_NO_MAPPING_INFORMATION_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_BY_VERTICE = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_BY_VERTICE_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_BY_POLYGON = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_BY_POLYGON_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_BY_POLYGON_VERTEX = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_BY_POLYGON_VERTEX_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_BY_FACE = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_BY_FACE_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_BY_EDGE = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_BY_EDGE_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_ALL_SAME = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_ALL_SAME_get();
  public static readonly string TOKEN_KFBXGEOMETRYMESH_BY_MODEL = FbxWrapperNativePINVOKE.TOKEN_KFBXGEOMETRYMESH_BY_MODEL_get();
  public static readonly string FIELD_KFBXGEOMETRYSUBDIV_GEOMETRY = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSUBDIV_GEOMETRY_get();
  public static readonly string FIELD_KFBXGEOMETRYSUBDIV_GEOMETRY_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSUBDIV_GEOMETRY_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYSUBDIV_LEVEL_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSUBDIV_LEVEL_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRYSUBDIV_CURRENT_LEVEL = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSUBDIV_CURRENT_LEVEL_get();
  public static readonly string FIELD_KFBXGEOMETRYSUBDIV_DISPLAY_SMOOTHNESS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSUBDIV_DISPLAY_SMOOTHNESS_get();
  public static readonly string TOKEN_REFERENCE_DIRECT = FbxWrapperNativePINVOKE.TOKEN_REFERENCE_DIRECT_get();
  public static readonly string TOKEN_REFERENCE_INDEX = FbxWrapperNativePINVOKE.TOKEN_REFERENCE_INDEX_get();
  public static readonly string TOKEN_REFERENCE_INDEX_TO_DIRECT = FbxWrapperNativePINVOKE.TOKEN_REFERENCE_INDEX_TO_DIRECT_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_NURB_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_NURB_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_NURB_ORDER = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_NURB_ORDER_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_DIMENSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_DIMENSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_STEP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_STEP_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_FORM = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_FORM_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_UCAPPED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_UCAPPED_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_VCAPPED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_VCAPPED_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_POINTS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_POINTS_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_MULTIPLICITY_U = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_MULTIPLICITY_U_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_MULTIPLICITY_V = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_MULTIPLICITY_V_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_KNOTVECTOR_U = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_KNOTVECTOR_U_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_KNOTVECTOR_V = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_KNOTVECTOR_V_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_MATERIALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_MATERIALS_get();
  public static readonly string FIELD_KFBXGEOMETRYNURB_SURFACE_DISPLAY = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURB_SURFACE_DISPLAY_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_NURB_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_NURB_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_NURB_ORDER = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_NURB_ORDER_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_DIMENSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_DIMENSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_STEP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_STEP_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_FORM = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_FORM_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_UCAPPED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_UCAPPED_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_VCAPPED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_VCAPPED_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_POINTS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_POINTS_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_KNOTVECTOR_U = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_KNOTVECTOR_U_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_KNOTVECTOR_V = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_KNOTVECTOR_V_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_MATERIALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_MATERIALS_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_SURFACE_DISPLAY = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_SURFACE_DISPLAY_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_SURFACE_FLIP_NORMALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_SURFACE_FLIP_NORMALS_get();
  public static readonly string FIELD_KFBXGEOMETRYTRIM_NURBS_SURFACE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYTRIM_NURBS_SURFACE_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYTRIM_NURBS_SURFACE_FLIP_NORMALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYTRIM_NURBS_SURFACE_FLIP_NORMALS_get();
  public static readonly string FIELD_KFBXGEOMETRYBOUNDARY_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYBOUNDARY_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYLINE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLINE_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYLINE_POINTS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLINE_POINTS_get();
  public static readonly string FIELD_KFBXGEOMETRYLINE_POINTS_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYLINE_POINTS_INDEX_get();
  public static readonly string FIELD_KFBXGEOMETRYSUBDIVISION_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSUBDIVISION_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_ORDER = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_ORDER_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_DIMENSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_DIMENSION_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_KNOTVECTOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_KNOTVECTOR_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_FORM = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_FORM_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_POINTS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_POINTS_get();
  public static readonly string FIELD_KFBXGEOMETRYNURBS_CURVE_RATIONAL = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYNURBS_CURVE_RATIONAL_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_PATCH_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_PATCH_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_PATCH_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_PATCH_TYPE_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_DIMENSIONS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_DIMENSIONS_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_STEP = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_STEP_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_CLOSED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_CLOSED_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_UCAPPED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_UCAPPED_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_VCAPPED = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_VCAPPED_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_POINTS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_POINTS_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_SURFACE_DISPLAY = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_SURFACE_DISPLAY_get();
  public static readonly string FIELD_KFBXGEOMETRYPATCH_MATERIALS = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYPATCH_MATERIALS_get();
  public static readonly string FIELD_KFBXGEOMETRY_WEIGHTED_MAP_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_WEIGHTED_MAP_VERSION_get();
  public static readonly string FIELD_KFBXGEOMETRY_WEIGHTED_MAP_SRC_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_WEIGHTED_MAP_SRC_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRY_WEIGHTED_MAP_DST_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_WEIGHTED_MAP_DST_COUNT_get();
  public static readonly string FIELD_KFBXGEOMETRY_WEIGHTED_MAP_INDEX_MAPPING = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRY_WEIGHTED_MAP_INDEX_MAPPING_get();
  public static readonly string FIELD_KFBXGEOMETRYSKELETON_LIMB_LENGTH = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSKELETON_LIMB_LENGTH_get();
  public static readonly string FIELD_KFBXGEOMETRYSKELETON_LIMB_NODE_SIZE = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSKELETON_LIMB_NODE_SIZE_get();
  public static readonly string FIELD_KFBXGEOMETRYSKELETON_LIMB_NODE_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXGEOMETRYSKELETON_LIMB_NODE_COLOR_get();
  public static readonly string FIELD_KFBXVIDEO_USEMIPMAP = FbxWrapperNativePINVOKE.FIELD_KFBXVIDEO_USEMIPMAP_get();
  public static readonly string FIELD_KFBXTEXTURE_TEXTURE = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_TEXTURE_get();
  public static readonly string FIELD_KFBXTEXTURE_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_TYPE_get();
  public static readonly string FIELD_KFBXTEXTURE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_VERSION_get();
  public static readonly string FIELD_KFBXTEXTURE_TEXTURE_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_TEXTURE_NAME_get();
  public static readonly string FIELD_KFBXTEXTURE_MEDIA = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_MEDIA_get();
  public static readonly string FIELD_KFBXTEXTURE_FILENAME = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_FILENAME_get();
  public static readonly string FIELD_KFBXTEXTURE_RELATIVE_FILENAME = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_RELATIVE_FILENAME_get();
  public static readonly string FIELD_KFBXTEXTURE_TRANSLATION = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_TRANSLATION_get();
  public static readonly string FIELD_KFBXTEXTURE_SCALING = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_SCALING_get();
  public static readonly string FIELD_KFBXTEXTURE_UV_TRANSLATION = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_UV_TRANSLATION_get();
  public static readonly string FIELD_KFBXTEXTURE_UV_SCALING = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_UV_SCALING_get();
  public static readonly string FIELD_KFBXTEXTURE_ROTATION = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_ROTATION_get();
  public static readonly string FIELD_KFBXTEXTURE_TILING = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_TILING_get();
  public static readonly string FIELD_KFBXTEXTURE_ALPHA_SRC = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_ALPHA_SRC_get();
  public static readonly string FIELD_KFBXTEXTURE_CROPPING = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_CROPPING_get();
  public static readonly string FIELD_KFBXTEXTURE_MAPPING_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_MAPPING_TYPE_get();
  public static readonly string FIELD_KFBXTEXTURE_PLANAR_NORMAL = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_PLANAR_NORMAL_get();
  public static readonly string FIELD_KFBXTEXTURE_SWAPUV = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_SWAPUV_get();
  public static readonly string FIELD_KFBXTEXTURE_MATERIAL_USE = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_MATERIAL_USE_get();
  public static readonly string FIELD_KFBXTEXTURE_TEXTURE_USE = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_TEXTURE_USE_get();
  public static readonly string TOKEN_KFBXTEXTURE_TEXTURE_USE_STANDARD = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_TEXTURE_USE_STANDARD_get();
  public static readonly string TOKEN_KFBXTEXTURE_TEXTURE_USE_SHADOW_MAP = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_TEXTURE_USE_SHADOW_MAP_get();
  public static readonly string TOKEN_KFBXTEXTURE_TEXTURE_USE_LIGHT_MAP = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_TEXTURE_USE_LIGHT_MAP_get();
  public static readonly string TOKEN_KFBXTEXTURE_TEXTURE_USE_SPHERICAL_REFLEXION_MAP = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_TEXTURE_USE_SPHERICAL_REFLEXION_MAP_get();
  public static readonly string TOKEN_KFBXTEXTURE_TEXTURE_USE_SPHERE_REFLEXION_MAP = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_TEXTURE_USE_SPHERE_REFLEXION_MAP_get();
  public static readonly string TOKEN_KFBXTEXTURE_TEXTURE_USE_BUMP_NORMAL_MAP = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_TEXTURE_USE_BUMP_NORMAL_MAP_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_TRANSLUCENT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_TRANSLUCENT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_ADD = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_ADD_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_MODULATE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_MODULATE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_MODULATE2 = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_MODULATE2_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_OVER = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_OVER_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_NORMAL = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_NORMAL_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_DISSOLVE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_DISSOLVE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_DARKEN = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_DARKEN_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_COLORBURN = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_COLORBURN_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_LINEARBURN = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_LINEARBURN_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_DARKERCOLOR = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_DARKERCOLOR_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_LIGHTEN = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_LIGHTEN_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_SCREEN = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_SCREEN_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_COLORDODGE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_COLORDODGE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_LINEARDODGE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_LINEARDODGE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_LIGHTERCOLOR = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_LIGHTERCOLOR_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_SOFTLIGHT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_SOFTLIGHT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_HARDLIGHT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_HARDLIGHT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_VIVIDLIGHT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_VIVIDLIGHT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_LINEARLIGHT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_LINEARLIGHT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_PINLIGHT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_PINLIGHT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_HARDMIX = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_HARDMIX_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_DIFFERENCE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_DIFFERENCE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_EXCLUSION = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_EXCLUSION_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_SUBTRACT = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_SUBTRACT_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_DIVIDE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_DIVIDE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_HUE = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_HUE_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_SATURATION = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_SATURATION_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_COLOR = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_COLOR_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_LUMINOSITY = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_LUMINOSITY_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_OVERLAY = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_OVERLAY_get();
  public static readonly string TOKEN_KFBXTEXTURE_BLEND_MAXBLEND = FbxWrapperNativePINVOKE.TOKEN_KFBXTEXTURE_BLEND_MAXBLEND_get();
  public static readonly string FIELD_KFBXTEXTURE_WRAP_U = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_WRAP_U_get();
  public static readonly string FIELD_KFBXTEXTURE_WRAP_V = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_WRAP_V_get();
  public static readonly string FIELD_KFBXTEXTURE_BLEND_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_BLEND_MODE_get();
  public static readonly string FIELD_KFBXTEXTURE_ALPHA = FbxWrapperNativePINVOKE.FIELD_KFBXTEXTURE_ALPHA_get();
  public static readonly string FIELD_KFBXMATERIAL_MATERIAL = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_MATERIAL_get();
  public static readonly string FIELD_KFBXMATERIAL_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_VERSION_get();
  public static readonly string FIELD_KFBXMATERIAL_SHADING_MODEL = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_SHADING_MODEL_get();
  public static readonly string FIELD_KFBXMATERIAL_AMBIENT = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_AMBIENT_get();
  public static readonly string FIELD_KFBXMATERIAL_DIFFUSE = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_DIFFUSE_get();
  public static readonly string FIELD_KFBXMATERIAL_SPECULAR = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_SPECULAR_get();
  public static readonly string FIELD_KFBXMATERIAL_EMISSIVE = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_EMISSIVE_get();
  public static readonly string FIELD_KFBXMATERIAL_SHININESS = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_SHININESS_get();
  public static readonly string FIELD_KFBXMATERIAL_REFLECTIVITY = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_REFLECTIVITY_get();
  public static readonly string FIELD_KFBXMATERIAL_ALPHA = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_ALPHA_get();
  public static readonly string FIELD_KFBXMATERIAL_MULTI_LAYER = FbxWrapperNativePINVOKE.FIELD_KFBXMATERIAL_MULTI_LAYER_get();
  public static readonly string FIELD_KFBXLINK_LINK = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_LINK_get();
  public static readonly string FIELD_KFBXLINK_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_MODE_get();
  public static readonly string FIELD_KFBXLINK_USERDATA = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_USERDATA_get();
  public static readonly string FIELD_KFBXLINK_INDEXES = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_INDEXES_get();
  public static readonly string FIELD_KFBXLINK_WEIGHTS = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_WEIGHTS_get();
  public static readonly string FIELD_KFBXLINK_TRANSFORM = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_TRANSFORM_get();
  public static readonly string FIELD_KFBXLINK_TRANSFORM_LINK = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_TRANSFORM_LINK_get();
  public static readonly string FIELD_KFBXLINK_ASSOCIATE_MODEL = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_ASSOCIATE_MODEL_get();
  public static readonly string FIELD_KFBXLINK_TRANSFORM_PARENT = FbxWrapperNativePINVOKE.FIELD_KFBXLINK_TRANSFORM_PARENT_get();
  public static readonly string TOKEN_KFBXLINK_AVERAGE = FbxWrapperNativePINVOKE.TOKEN_KFBXLINK_AVERAGE_get();
  public static readonly string TOKEN_KFBXLINK_ADDITIVE = FbxWrapperNativePINVOKE.TOKEN_KFBXLINK_ADDITIVE_get();
  public static readonly string TOKEN_KFBXLINK_TOTAL1 = FbxWrapperNativePINVOKE.TOKEN_KFBXLINK_TOTAL1_get();
  public static readonly string FIELD_KFBXDEFORMER_DEFORMER = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_DEFORMER_get();
  public static readonly string FIELD_KFBXDEFORMER_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_VERSION_get();
  public static readonly string FIELD_KFBXDEFORMER_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_TYPE_get();
  public static readonly string FIELD_KFBXDEFORMER_MULTI_LAYER = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_MULTI_LAYER_get();
  public static readonly string FIELD_KFBXDEFORMER_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_MODE_get();
  public static readonly string FIELD_KFBXDEFORMER_USERDATA = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_USERDATA_get();
  public static readonly string FIELD_KFBXDEFORMER_INDEXES = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_INDEXES_get();
  public static readonly string FIELD_KFBXDEFORMER_WEIGHTS = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_WEIGHTS_get();
  public static readonly string FIELD_KFBXDEFORMER_TRANSFORM = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_TRANSFORM_get();
  public static readonly string FIELD_KFBXDEFORMER_TRANSFORM_LINK = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_TRANSFORM_LINK_get();
  public static readonly string FIELD_KFBXDEFORMER_ASSOCIATE_MODEL = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_ASSOCIATE_MODEL_get();
  public static readonly string FIELD_KFBXDEFORMER_TRANSFORM_PARENT = FbxWrapperNativePINVOKE.FIELD_KFBXDEFORMER_TRANSFORM_PARENT_get();
  public static readonly string TOKEN_KFBXDEFORMER_AVERAGE = FbxWrapperNativePINVOKE.TOKEN_KFBXDEFORMER_AVERAGE_get();
  public static readonly string TOKEN_KFBXDEFORMER_ADDITIVE = FbxWrapperNativePINVOKE.TOKEN_KFBXDEFORMER_ADDITIVE_get();
  public static readonly string TOKEN_KFBXDEFORMER_TOTAL1 = FbxWrapperNativePINVOKE.TOKEN_KFBXDEFORMER_TOTAL1_get();
  public static readonly string FIELD_KFBXSKIN_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXSKIN_VERSION_get();
  public static readonly string FIELD_KFBXSKIN_DEFORM_ACCURACY = FbxWrapperNativePINVOKE.FIELD_KFBXSKIN_DEFORM_ACCURACY_get();
  public static readonly string FIELD_KFBXSKIN_SKINNINGTYPE = FbxWrapperNativePINVOKE.FIELD_KFBXSKIN_SKINNINGTYPE_get();
  public static readonly string TOKEN_KFBXSKIN_LINEAR = FbxWrapperNativePINVOKE.TOKEN_KFBXSKIN_LINEAR_get();
  public static readonly string TOKEN_KFBXSKIN_DUALQUATERNION = FbxWrapperNativePINVOKE.TOKEN_KFBXSKIN_DUALQUATERNION_get();
  public static readonly string TOKEN_KFBXSKIN_BLEND = FbxWrapperNativePINVOKE.TOKEN_KFBXSKIN_BLEND_get();
  public static readonly string FIELD_KFBXSKIN_INDEXES = FbxWrapperNativePINVOKE.FIELD_KFBXSKIN_INDEXES_get();
  public static readonly string FIELD_KFBXSKIN_BLENDWEIGHTS = FbxWrapperNativePINVOKE.FIELD_KFBXSKIN_BLENDWEIGHTS_get();
  public static readonly string FIELD_KFBXCLUSTER_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_VERSION_get();
  public static readonly string FIELD_KFBXCLUSTER_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_MODE_get();
  public static readonly string FIELD_KFBXCLUSTER_USERDATA = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_USERDATA_get();
  public static readonly string FIELD_KFBXCLUSTER_INDEXES = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_INDEXES_get();
  public static readonly string FIELD_KFBXCLUSTER_WEIGHTS = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_WEIGHTS_get();
  public static readonly string FIELD_KFBXCLUSTER_TRANSFORM = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_TRANSFORM_get();
  public static readonly string FIELD_KFBXCLUSTER_TRANSFORM_LINK = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_TRANSFORM_LINK_get();
  public static readonly string FIELD_KFBXCLUSTER_ASSOCIATE_MODEL = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_ASSOCIATE_MODEL_get();
  public static readonly string FIELD_KFBXCLUSTER_TRANSFORM_PARENT = FbxWrapperNativePINVOKE.FIELD_KFBXCLUSTER_TRANSFORM_PARENT_get();
  public static readonly string TOKEN_KFBXCLUSTER_AVERAGE = FbxWrapperNativePINVOKE.TOKEN_KFBXCLUSTER_AVERAGE_get();
  public static readonly string TOKEN_KFBXCLUSTER_ADDITIVE = FbxWrapperNativePINVOKE.TOKEN_KFBXCLUSTER_ADDITIVE_get();
  public static readonly string TOKEN_KFBXCLUSTER_TOTAL1 = FbxWrapperNativePINVOKE.TOKEN_KFBXCLUSTER_TOTAL1_get();
  public static readonly string FIELD_KFBXBLENDSHAPE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXBLENDSHAPE_VERSION_get();
  public static readonly string FIELD_KFBXBLENDSHAPECHANNEL_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXBLENDSHAPECHANNEL_VERSION_get();
  public static readonly string FIELD_KFBXBLENDSHAPECHANNEL_DEFORMPERCENT = FbxWrapperNativePINVOKE.FIELD_KFBXBLENDSHAPECHANNEL_DEFORMPERCENT_get();
  public static readonly string FIELD_KFBXBLENDSHAPECHANNEL_FULLWEIGHTS = FbxWrapperNativePINVOKE.FIELD_KFBXBLENDSHAPECHANNEL_FULLWEIGHTS_get();
  public static readonly string FIELD_KFBXSHAPE_SHAPE = FbxWrapperNativePINVOKE.FIELD_KFBXSHAPE_SHAPE_get();
  public static readonly string FIELD_KFBXSHAPE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXSHAPE_VERSION_get();
  public static readonly string FIELD_KFBXSHAPE_INDEXES = FbxWrapperNativePINVOKE.FIELD_KFBXSHAPE_INDEXES_get();
  public static readonly string FIELD_KFBXSHAPE_VERTICES = FbxWrapperNativePINVOKE.FIELD_KFBXSHAPE_VERTICES_get();
  public static readonly string FIELD_KFBXSHAPE_NORMALS = FbxWrapperNativePINVOKE.FIELD_KFBXSHAPE_NORMALS_get();
  public static readonly string FILED_KFBXVERTEXCACHEDEFORMER_VERSION = FbxWrapperNativePINVOKE.FILED_KFBXVERTEXCACHEDEFORMER_VERSION_get();
  public static readonly string FILED_KFBXVERTEXCACHEDEFORMER_CACHE_CHANNEL = FbxWrapperNativePINVOKE.FILED_KFBXVERTEXCACHEDEFORMER_CACHE_CHANNEL_get();
  public static readonly string FIELD_KFBXCACHE_VERTEX_CACHE = FbxWrapperNativePINVOKE.FIELD_KFBXCACHE_VERTEX_CACHE_get();
  public static readonly string FIELD_KFBXCACHE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXCACHE_VERSION_get();
  public static readonly string FIELD_KFBXCACHE_CACHE_PATH = FbxWrapperNativePINVOKE.FIELD_KFBXCACHE_CACHE_PATH_get();
  public static readonly string FIELD_KFBXBINDINGTABLE_BINDING_TABLE = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGTABLE_BINDING_TABLE_get();
  public static readonly string FIELD_KFBXBINDINGTABLE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGTABLE_VERSION_get();
  public static readonly string FIELD_KFBXBINDINGTABLE_TARGET = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGTABLE_TARGET_get();
  public static readonly string FIELD_KFBXBINDINGTABLE_ENTRY = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGTABLE_ENTRY_get();
  public static readonly string FIELD_KFBXIMPLEMENTATION_IMPLEMENTATION = FbxWrapperNativePINVOKE.FIELD_KFBXIMPLEMENTATION_IMPLEMENTATION_get();
  public static readonly string FIELD_KFBXIMPLEMENTATION_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXIMPLEMENTATION_VERSION_get();
  public static readonly string FIELD_KFBXBINDINGOPERATOR_BINDING_OPERATOR = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGOPERATOR_BINDING_OPERATOR_get();
  public static readonly string FIELD_KFBXBINDINGOPERATOR_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGOPERATOR_VERSION_get();
  public static readonly string FIELD_KFBXBINDINGOPERATOR_ENTRY = FbxWrapperNativePINVOKE.FIELD_KFBXBINDINGOPERATOR_ENTRY_get();
  public static readonly string FIELD_KFBXCOLLECTION_COLLECTION = FbxWrapperNativePINVOKE.FIELD_KFBXCOLLECTION_COLLECTION_get();
  public static readonly string FIELD_KFBXCOLLECTION_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXCOLLECTION_VERSION_get();
  public static readonly string FIELD_KFBXCOLLECTIONEXCLUSIVE_COLLECTIONEXCLUSIVE = FbxWrapperNativePINVOKE.FIELD_KFBXCOLLECTIONEXCLUSIVE_COLLECTIONEXCLUSIVE_get();
  public static readonly string FIELD_KFBXCOLLECTIONEXCLUSIVE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXCOLLECTIONEXCLUSIVE_VERSION_get();
  public static readonly string FIELD_KFBXSELECTIONSET_VERTICE_INDEXARRAY = FbxWrapperNativePINVOKE.FIELD_KFBXSELECTIONSET_VERTICE_INDEXARRAY_get();
  public static readonly string FIELD_KFBXSELECTIONSET_EDGE_INDEXARRAY = FbxWrapperNativePINVOKE.FIELD_KFBXSELECTIONSET_EDGE_INDEXARRAY_get();
  public static readonly string FIELD_KFBXSELECTIONSET_POLYGONVERTICES_INDEXARRAY = FbxWrapperNativePINVOKE.FIELD_KFBXSELECTIONSET_POLYGONVERTICES_INDEXARRAY_get();
  public static readonly string FIELD_KFBXDISPLAYLAYER_DISPLAYLAYER = FbxWrapperNativePINVOKE.FIELD_KFBXDISPLAYLAYER_DISPLAYLAYER_get();
  public static readonly string FIELD_KFBXDISPLAYLAYER_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXDISPLAYLAYER_VERSION_get();
  public static readonly string FIELD_KFBXDOCUMENT_DOCUMENT = FbxWrapperNativePINVOKE.FIELD_KFBXDOCUMENT_DOCUMENT_get();
  public static readonly string FIELD_KFBXDOCUMENT_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXDOCUMENT_VERSION_get();
  public static readonly string FIELD_KFBXLAYEREDTEXTURE_LAYERED_TEXTURE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYEREDTEXTURE_LAYERED_TEXTURE_get();
  public static readonly string FIELD_KFBXLAYEREDTEXTURE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXLAYEREDTEXTURE_VERSION_get();
  public static readonly string FIELD_KFBXLAYEREDTEXTURE_BLENDMODES = FbxWrapperNativePINVOKE.FIELD_KFBXLAYEREDTEXTURE_BLENDMODES_get();
  public static readonly string FIELD_KFBXLAYEREDTEXTURE_ALPHAS = FbxWrapperNativePINVOKE.FIELD_KFBXLAYEREDTEXTURE_ALPHAS_get();
  public static readonly string FIELD_KFBXGOBO_GOBOMANAGER = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_GOBOMANAGER_get();
  public static readonly string FIELD_KFBXGOBO_GOBO = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_GOBO_get();
  public static readonly string FIELD_KFBXGOBO_LIGHTGOBO = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_LIGHTGOBO_get();
  public static readonly string FIELD_KFBXGOBO_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_VERSION_get();
  public static readonly string FIELD_KFBXGOBO_GOBONAME = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_GOBONAME_get();
  public static readonly string FIELD_KFBXGOBO_GOBOPATH = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_GOBOPATH_get();
  public static readonly string FIELD_KFBXGOBO_DRAWCOMPONENT = FbxWrapperNativePINVOKE.FIELD_KFBXGOBO_DRAWCOMPONENT_get();
  public static readonly string FIELD_PASSWORD = FbxWrapperNativePINVOKE.FIELD_PASSWORD_get();
  public static readonly string FIELD_OLD_PASSWORD = FbxWrapperNativePINVOKE.FIELD_OLD_PASSWORD_get();
  public static readonly string FIELD_XOR_STRING = FbxWrapperNativePINVOKE.FIELD_XOR_STRING_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_UV = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_UV_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_SMOOTHING = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_SMOOTHING_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_VERTEX_CREASE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_VERTEX_CREASE_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_EDGE_CREASE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_EDGE_CREASE_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_HOLE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_HOLE_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_USER_DATA = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_USER_DATA_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_VISIBILITY = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_VISIBILITY_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_NORMAL = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_NORMAL_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_BINORMAL = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_BINORMAL_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_TANGENT = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_TANGENT_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_MATERIAL = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_MATERIAL_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_TEXTURE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_TEXTURE_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_COLOR = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_COLOR_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_POLYGON_GROUP = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_POLYGON_GROUP_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_VERSION_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_NAME = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_NAME_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_TYPED_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_TYPED_INDEX_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_MAPPING_INFO_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_MAPPING_INFO_TYPE_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_REFERENCE_INFO_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_REFERENCE_INFO_TYPE_get();
  public static readonly string FIELD_KFBXLAYER = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_get();
  public static readonly string FIELD_KFBXLAYER_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_VERSION_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_get();
  public static readonly string FIELD_KFBXLAYER_ELEMENT_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_ELEMENT_TYPE_get();
  public static readonly string FIELD_KFBXLAYER_GEOMETRY_LAYER = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_GEOMETRY_LAYER_get();
  public static readonly string FIELD_KFBXLAYER_LAYER_TEXTURE_INFO = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_LAYER_TEXTURE_INFO_get();
  public static readonly string FIELD_KFBXLAYER_TEXTURE_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_TEXTURE_MODE_get();
  public static readonly string FIELD_KFBXLAYER_TEXTURE_BLEND_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_TEXTURE_BLEND_MODE_get();
  public static readonly string FIELD_KFBXLAYER_TEXTURE_ID_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_TEXTURE_ID_COUNT_get();
  public static readonly string FIELD_KFBXLAYER_TEXTURE_ID = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_TEXTURE_ID_get();
  public static readonly string FIELD_KFBXLAYER_UV_MODE = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_UV_MODE_get();
  public static readonly string FIELD_KFBXLAYER_UV_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_UV_COUNT_get();
  public static readonly string FIELD_KFBXLAYER_UV = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_UV_get();
  public static readonly string FIELD_KFBXLAYER_UV_INDEX = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_UV_INDEX_get();
  public static readonly string FIELD_KFBXLAYER_UV_ID_COUNT = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_UV_ID_COUNT_get();
  public static readonly string FIELD_KFBXLAYER_UV_ID = FbxWrapperNativePINVOKE.FIELD_KFBXLAYER_UV_ID_get();
  public static readonly string FIELD_KFBXPOSE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXPOSE_VERSION_get();
  public static readonly string FIELD_KFBXPOSE_TYPE = FbxWrapperNativePINVOKE.FIELD_KFBXPOSE_TYPE_get();
  public static readonly string FIELD_KFBXPOSE_POSE = FbxWrapperNativePINVOKE.FIELD_KFBXPOSE_POSE_get();
  public static readonly string FIELD_KFBXPOSE_BIND_POSE = FbxWrapperNativePINVOKE.FIELD_KFBXPOSE_BIND_POSE_get();
  public static readonly string FIELD_KFBXPOSE_REST_POSE = FbxWrapperNativePINVOKE.FIELD_KFBXPOSE_REST_POSE_get();
  public static readonly string FIELD_SCENEINFO = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_get();
  public static readonly string FIELD_SCENEINFO_TYPE = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_TYPE_get();
  public static readonly string FIELD_SCENEINFO_VERSION = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_VERSION_get();
  public static readonly string FIELD_SCENEINFO_METADATA = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_get();
  public static readonly string FIELD_SCENEINFO_METADATA_VERSION = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_VERSION_get();
  public static readonly string FIELD_SCENEINFO_METADATA_TITLE = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_TITLE_get();
  public static readonly string FIELD_SCENEINFO_METADATA_SUBJECT = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_SUBJECT_get();
  public static readonly string FIELD_SCENEINFO_METADATA_AUTHOR = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_AUTHOR_get();
  public static readonly string FIELD_SCENEINFO_METADATA_KEYWORDS = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_KEYWORDS_get();
  public static readonly string FIELD_SCENEINFO_METADATA_REVISION = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_REVISION_get();
  public static readonly string FIELD_SCENEINFO_METADATA_COMMENT = FbxWrapperNativePINVOKE.FIELD_SCENEINFO_METADATA_COMMENT_get();
  public static readonly string FIELD_GLOBAL_SETTINGS = FbxWrapperNativePINVOKE.FIELD_GLOBAL_SETTINGS_get();
  public static readonly string FIELD_GLOBAL_SETTINGS_VERSION = FbxWrapperNativePINVOKE.FIELD_GLOBAL_SETTINGS_VERSION_get();
  public static readonly string FIELD_KFBXREFERENCE_REFERENCE = FbxWrapperNativePINVOKE.FIELD_KFBXREFERENCE_REFERENCE_get();
  public static readonly string FIELD_KFBXREFERENCE_VERSION = FbxWrapperNativePINVOKE.FIELD_KFBXREFERENCE_VERSION_get();
  public static readonly string FIELD_CONSTRAINT = FbxWrapperNativePINVOKE.FIELD_CONSTRAINT_get();
  public static readonly string FIELD_CONSTRAINT_VERSION = FbxWrapperNativePINVOKE.FIELD_CONSTRAINT_VERSION_get();
  public static readonly string FIELD_CONSTRAINT_OFFSET = FbxWrapperNativePINVOKE.FIELD_CONSTRAINT_OFFSET_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_CONSTRAINT = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_CONSTRAINT_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_POSITION = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_POSITION_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_ROTATION = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_ROTATION_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_SCALE = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_SCALE_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_PARENT = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_PARENT_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_SINGLECHAINIK = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_SINGLECHAINIK_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_AIM = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_AIM_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_CHARACTER = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_CHARACTER_get();
  public static readonly string TOKEN_KFBXCONSTRAINT_CUSTOM = FbxWrapperNativePINVOKE.TOKEN_KFBXCONSTRAINT_CUSTOM_get();
  public static readonly string FIELD_OBJECT_DESCRIPTION = FbxWrapperNativePINVOKE.FIELD_OBJECT_DESCRIPTION_get();
  public static readonly string FIELD_OBJECT_DESCRIPTION_NAME = FbxWrapperNativePINVOKE.FIELD_OBJECT_DESCRIPTION_NAME_get();
  public static readonly string FIELD_OBJECT_REFERENCES = FbxWrapperNativePINVOKE.FIELD_OBJECT_REFERENCES_get();
  public static readonly string FIELD_OBJECT_REFERENCES_FILE_PATH_URL = FbxWrapperNativePINVOKE.FIELD_OBJECT_REFERENCES_FILE_PATH_URL_get();
  public static readonly string FIELD_OBJECT_REFERENCES_REFERENCE = FbxWrapperNativePINVOKE.FIELD_OBJECT_REFERENCES_REFERENCE_get();
  public static readonly string FIELD_OBJECT_DEFINITION = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_get();
  public static readonly string FIELD_OBJECT_PROPERTY_TEMPLATE = FbxWrapperNativePINVOKE.FIELD_OBJECT_PROPERTY_TEMPLATE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_VERSION = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_VERSION_get();
  public static readonly string FIELD_OBJECT_DEFINITION_COUNT = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_COUNT_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_AUDIO = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_AUDIO_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_AUDIO_LAYER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_AUDIO_LAYER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_REFERENCE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_REFERENCE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CONTAINER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CONTAINER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_MODEL = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_MODEL_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GEOMETRY = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GEOMETRY_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_NODE_ATTRIBUTE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_NODE_ATTRIBUTE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GEOMETRY_WEIGHTED_MAP = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GEOMETRY_WEIGHTED_MAP_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_MARKETSET = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_MARKETSET_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_MATERIAL = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_MATERIAL_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_COLLECTION = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_COLLECTION_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_COLLECTION_EXCLUSIVE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_COLLECTION_EXCLUSIVE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_DISPLAY_LAYER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_DISPLAY_LAYER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_TEXTURE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_TEXTURE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_THUMBNAIL = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_THUMBNAIL_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_VIDEO = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_VIDEO_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_DEFORMER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_DEFORMER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SUBDEFORMER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SUBDEFORMER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SHAPE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SHAPE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BLENDSHAPE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BLENDSHAPE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BLENDSHAPECHANNEL = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BLENDSHAPECHANNEL_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CONSTRAINT = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CONSTRAINT_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CONTROLSET_PLUG = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CONTROLSET_PLUG_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_POSE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_POSE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GENERIC_NODE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GENERIC_NODE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BOUNDARY = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BOUNDARY_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CACHE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CACHE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_IMPLEMENTATION = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_IMPLEMENTATION_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BINDINGTABLE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BINDINGTABLE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BINDINGOPERATOR = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_BINDINGOPERATOR_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_LAYERED_TEXTURE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_LAYERED_TEXTURE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_PROCEDURAL_TEXTURE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_PROCEDURAL_TEXTURE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SCENEINFO = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SCENEINFO_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SCENE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SCENE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_LIBRARY = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_LIBRARY_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_DOCUMENT = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_DOCUMENT_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_FOLDER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_FOLDER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CLIP = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_CLIP_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_TIMELINE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_TIMELINE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_TIMELINE_TRACK = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_TIMELINE_TRACK_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ENVIRONMENT = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ENVIRONMENT_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_OBJECTMETADATA = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_OBJECTMETADATA_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_PLUGIN_PARAMS = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_PLUGIN_PARAMS_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_STACK = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_STACK_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_LAYER = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_LAYER_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_CURVENODE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_CURVENODE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_CURVE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_CURVE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_EVALUATOR = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_ANIM_EVALUATOR_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SELECTIONNODE = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_SELECTIONNODE_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_MESH = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_MESH_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_SUBDIV = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_SUBDIV_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_PATCH = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_PATCH_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_NURB = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_NURB_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_NURBS_SURFACE = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_NURBS_SURFACE_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_NURBS_CURVE = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_NURBS_CURVE_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_TRIM_NURB_SURFACE = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_TRIM_NURB_SURFACE_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_BOUNDARY = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_BOUNDARY_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_LINE = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_LINE_get();
  public static readonly string FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_SHAPE = FbxWrapperNativePINVOKE.FIELD_OBJECT_TYPE_GEOMETRY_SUBTYPE_SHAPE_get();
  public static readonly string FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GLOBAL_SETTINGS = FbxWrapperNativePINVOKE.FIELD_OBJECT_DEFINITION_OBJECT_TYPE_GLOBAL_SETTINGS_get();
  public static readonly string FIELD_OBJECT_PROPERTIES = FbxWrapperNativePINVOKE.FIELD_OBJECT_PROPERTIES_get();
  public static readonly string FIELD_OBJECT_RELATIONS = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_MODEL = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_MODEL_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_MATERIAL = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_MATERIAL_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_TEXTURE = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_TEXTURE_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_AUDIO = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_AUDIO_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_VIDEO = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_VIDEO_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_CONSTRAINT = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_CONSTRAINT_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_DEFORMER = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_DEFORMER_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_POSE = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_POSE_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_SCENEINFO = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_SCENEINFO_get();
  public static readonly string FIELD_OBJECT_RELATIONS_TYPE_CACHE = FbxWrapperNativePINVOKE.FIELD_OBJECT_RELATIONS_TYPE_CACHE_get();
  public static readonly string FIELD_OBJECT_CONNECTIONS = FbxWrapperNativePINVOKE.FIELD_OBJECT_CONNECTIONS_get();
  public static readonly string FIELD_TAKES = FbxWrapperNativePINVOKE.FIELD_TAKES_get();
  public static readonly string FIELD_EMBEDDED_FILES = FbxWrapperNativePINVOKE.FIELD_EMBEDDED_FILES_get();
  public static readonly string FIELD_EMBEDDED_FILE = FbxWrapperNativePINVOKE.FIELD_EMBEDDED_FILE_get();
  public static readonly string FIELD_EMBEDDED_ORIGINAL_FILENAME = FbxWrapperNativePINVOKE.FIELD_EMBEDDED_ORIGINAL_FILENAME_get();
  public static readonly string FIELD_EMBEDDED_FILENAME = FbxWrapperNativePINVOKE.FIELD_EMBEDDED_FILENAME_get();
  public static readonly string FIELD_EMBEDDED_CONSUMERS = FbxWrapperNativePINVOKE.FIELD_EMBEDDED_CONSUMERS_get();
  public static readonly string FIELD_EMBEDDED_CONSUMER = FbxWrapperNativePINVOKE.FIELD_EMBEDDED_CONSUMER_get();
  public static readonly string FIELD_NODE_ATTRIBUTE_NAME = FbxWrapperNativePINVOKE.FIELD_NODE_ATTRIBUTE_NAME_get();
  public static readonly string FIELD_NODE_ATTRIBUTE_REFTO = FbxWrapperNativePINVOKE.FIELD_NODE_ATTRIBUTE_REFTO_get();
  public static readonly string FIELD_OLD_SECTION_VERSION5 = FbxWrapperNativePINVOKE.FIELD_OLD_SECTION_VERSION5_get();
  public static readonly string FIELD_OLD_SECTION_HIERARCHYVIEW = FbxWrapperNativePINVOKE.FIELD_OLD_SECTION_HIERARCHYVIEW_get();
  public static readonly string OBJECT_OLD_SECTION_VERSION5 = FbxWrapperNativePINVOKE.OBJECT_OLD_SECTION_VERSION5_get();
  public static readonly string OBJECT_OLD_SECTION_HIERARCHYVIEW = FbxWrapperNativePINVOKE.OBJECT_OLD_SECTION_HIERARCHYVIEW_get();
  public static readonly string FBXSDK_CAMERA_PERSPECTIVE = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_PERSPECTIVE_get();
  public static readonly string FBXSDK_CAMERA_TOP = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_TOP_get();
  public static readonly string FBXSDK_CAMERA_FRONT = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_FRONT_get();
  public static readonly string FBXSDK_CAMERA_BACK = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_BACK_get();
  public static readonly string FBXSDK_CAMERA_RIGHT = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_RIGHT_get();
  public static readonly string FBXSDK_CAMERA_LEFT = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_LEFT_get();
  public static readonly string FBXSDK_CAMERA_BOTTOM = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_BOTTOM_get();
  public static readonly string FBXSDK_CAMERA_SWITCHER = FbxWrapperNativePINVOKE.FBXSDK_CAMERA_SWITCHER_get();
  public static readonly string FBXSDK_PLUGINS_REGISTRY_PATH = FbxWrapperNativePINVOKE.FBXSDK_PLUGINS_REGISTRY_PATH_get();
  public static readonly string IMP_FBX_PRESET_EXT = FbxWrapperNativePINVOKE.IMP_FBX_PRESET_EXT_get();
  public static readonly string EXP_FBX_PRESET_EXT = FbxWrapperNativePINVOKE.EXP_FBX_PRESET_EXT_get();
  public static readonly string M_E_FILENAME = FbxWrapperNativePINVOKE.M_E_FILENAME_get();
  public static readonly string ARCH_FILENAME = FbxWrapperNativePINVOKE.ARCH_FILENAME_get();
  public static readonly string MOBU_FILENAME = FbxWrapperNativePINVOKE.MOBU_FILENAME_get();
  public static readonly string USERDEFINED_FILENAME = FbxWrapperNativePINVOKE.USERDEFINED_FILENAME_get();
  public static readonly string FN_LOCALIZATION_PREFIX = FbxWrapperNativePINVOKE.FN_LOCALIZATION_PREFIX_get();
  public static readonly string FN_LOCALIZATION_EXT = FbxWrapperNativePINVOKE.FN_LOCALIZATION_EXT_get();
  public static readonly string FN_LANGUAGE = FbxWrapperNativePINVOKE.FN_LANGUAGE_get();
  public static readonly string IOSROOT = FbxWrapperNativePINVOKE.IOSROOT_get();
  public static readonly string IOSN_EXPORT = FbxWrapperNativePINVOKE.IOSN_EXPORT_get();
  public static readonly string IOSN_IMPORT = FbxWrapperNativePINVOKE.IOSN_IMPORT_get();
  public static readonly string IOSN_PLUGIN_GRP = FbxWrapperNativePINVOKE.IOSN_PLUGIN_GRP_get();
  public static readonly string IOSN_PLUGIN_UI_WIDTH = FbxWrapperNativePINVOKE.IOSN_PLUGIN_UI_WIDTH_get();
  public static readonly string IOSN_PLUGIN_UI_HEIGHT = FbxWrapperNativePINVOKE.IOSN_PLUGIN_UI_HEIGHT_get();
  public static readonly string IOSN_PLUGIN_VERSIONS_URL = FbxWrapperNativePINVOKE.IOSN_PLUGIN_VERSIONS_URL_get();
  public static readonly string IOSN_PI_VERSION = FbxWrapperNativePINVOKE.IOSN_PI_VERSION_get();
  public static readonly string IOSN_PRESET_SELECTED = FbxWrapperNativePINVOKE.IOSN_PRESET_SELECTED_get();
  public static readonly string IOSN_PRESETS_GRP = FbxWrapperNativePINVOKE.IOSN_PRESETS_GRP_get();
  public static readonly string IOSN_STATISTICS_GRP = FbxWrapperNativePINVOKE.IOSN_STATISTICS_GRP_get();
  public static readonly string IOSN_UNITS_GRP = FbxWrapperNativePINVOKE.IOSN_UNITS_GRP_get();
  public static readonly string IOSN_INCLUDE_GRP = FbxWrapperNativePINVOKE.IOSN_INCLUDE_GRP_get();
  public static readonly string IOSN_ADV_OPT_GRP = FbxWrapperNativePINVOKE.IOSN_ADV_OPT_GRP_get();
  public static readonly string IOSN_AXISCONV_GRP = FbxWrapperNativePINVOKE.IOSN_AXISCONV_GRP_get();
  public static readonly string IOSN_CAMERA_GRP = FbxWrapperNativePINVOKE.IOSN_CAMERA_GRP_get();
  public static readonly string IOSN_LIGHT_GRP = FbxWrapperNativePINVOKE.IOSN_LIGHT_GRP_get();
  public static readonly string IOSN_EXTRA_GRP = FbxWrapperNativePINVOKE.IOSN_EXTRA_GRP_get();
  public static readonly string IOSN_CONSTRAINTS_GRP = FbxWrapperNativePINVOKE.IOSN_CONSTRAINTS_GRP_get();
  public static readonly string IOSN_INPUTCONNECTIONS_GRP = FbxWrapperNativePINVOKE.IOSN_INPUTCONNECTIONS_GRP_get();
  public static readonly string IOSN_INFORMATION_GRP = FbxWrapperNativePINVOKE.IOSN_INFORMATION_GRP_get();
  public static readonly string IOSN_UP_AXIS = FbxWrapperNativePINVOKE.IOSN_UP_AXIS_get();
  public static readonly string IOSN_UP_AXIS_MAX = FbxWrapperNativePINVOKE.IOSN_UP_AXIS_MAX_get();
  public static readonly string IOSN_ZUPROTATION_MAX = FbxWrapperNativePINVOKE.IOSN_ZUPROTATION_MAX_get();
  public static readonly string IOSN_AXISCONVERSION = FbxWrapperNativePINVOKE.IOSN_AXISCONVERSION_get();
  public static readonly string IOSN_AUTO_AXIS = FbxWrapperNativePINVOKE.IOSN_AUTO_AXIS_get();
  public static readonly string IOSN_FILE_UP_AXIS = FbxWrapperNativePINVOKE.IOSN_FILE_UP_AXIS_get();
  public static readonly string IOSN_PRESETS = FbxWrapperNativePINVOKE.IOSN_PRESETS_get();
  public static readonly string IOSN_STATISTICS = FbxWrapperNativePINVOKE.IOSN_STATISTICS_get();
  public static readonly string IOSN_UNITS_SCALE = FbxWrapperNativePINVOKE.IOSN_UNITS_SCALE_get();
  public static readonly string IOSN_TOTAL_UNITS_SCALE_TB = FbxWrapperNativePINVOKE.IOSN_TOTAL_UNITS_SCALE_TB_get();
  public static readonly string IOSN_SCALECONVERSION = FbxWrapperNativePINVOKE.IOSN_SCALECONVERSION_get();
  public static readonly string IOSN_MASTERSCALE = FbxWrapperNativePINVOKE.IOSN_MASTERSCALE_get();
  public static readonly string IOSN_DYN_SCALE_CONVERSION = FbxWrapperNativePINVOKE.IOSN_DYN_SCALE_CONVERSION_get();
  public static readonly string IOSN_UNITSELECTOR = FbxWrapperNativePINVOKE.IOSN_UNITSELECTOR_get();
  public static readonly string IOSN_AUDIO = FbxWrapperNativePINVOKE.IOSN_AUDIO_get();
  public static readonly string IOSN_ANIMATION = FbxWrapperNativePINVOKE.IOSN_ANIMATION_get();
  public static readonly string IOSN_GEOMETRY = FbxWrapperNativePINVOKE.IOSN_GEOMETRY_get();
  public static readonly string IOSN_DEFORMATION = FbxWrapperNativePINVOKE.IOSN_DEFORMATION_get();
  public static readonly string IOSN_MARKERS = FbxWrapperNativePINVOKE.IOSN_MARKERS_get();
  public static readonly string IOSN_CHARACTER = FbxWrapperNativePINVOKE.IOSN_CHARACTER_get();
  public static readonly string IOSN_CHARACTER_AS_MAYA_HIK = FbxWrapperNativePINVOKE.IOSN_CHARACTER_AS_MAYA_HIK_get();
  public static readonly string IOSN_CHARACTER_TYPE = FbxWrapperNativePINVOKE.IOSN_CHARACTER_TYPE_get();
  public static readonly string IOSN_CHARACTER_TYPE_DESC = FbxWrapperNativePINVOKE.IOSN_CHARACTER_TYPE_DESC_get();
  public static readonly string IOSN_SETLOCKEDATTRIB = FbxWrapperNativePINVOKE.IOSN_SETLOCKEDATTRIB_get();
  public static readonly string IOSN_TRIANGULATE = FbxWrapperNativePINVOKE.IOSN_TRIANGULATE_get();
  public static readonly string IOSN_MRCUSTOMATTRIBUTES = FbxWrapperNativePINVOKE.IOSN_MRCUSTOMATTRIBUTES_get();
  public static readonly string IOSN_MESHPRIMITIVE = FbxWrapperNativePINVOKE.IOSN_MESHPRIMITIVE_get();
  public static readonly string IOSN_MESHTRIANGLE = FbxWrapperNativePINVOKE.IOSN_MESHTRIANGLE_get();
  public static readonly string IOSN_MESHPOLY = FbxWrapperNativePINVOKE.IOSN_MESHPOLY_get();
  public static readonly string IOSN_NURB = FbxWrapperNativePINVOKE.IOSN_NURB_get();
  public static readonly string IOSN_PATCH = FbxWrapperNativePINVOKE.IOSN_PATCH_get();
  public static readonly string IOSN_BIP2FBX = FbxWrapperNativePINVOKE.IOSN_BIP2FBX_get();
  public static readonly string IOSN_ASCIIFBX = FbxWrapperNativePINVOKE.IOSN_ASCIIFBX_get();
  public static readonly string IOSN_TAKE = FbxWrapperNativePINVOKE.IOSN_TAKE_get();
  public static readonly string IOSN_GEOMETRYMESHPRIMITIVEAS = FbxWrapperNativePINVOKE.IOSN_GEOMETRYMESHPRIMITIVEAS_get();
  public static readonly string IOSN_GEOMETRYMESHTRIANGLEAS = FbxWrapperNativePINVOKE.IOSN_GEOMETRYMESHTRIANGLEAS_get();
  public static readonly string IOSN_GEOMETRYMESHPOLYAS = FbxWrapperNativePINVOKE.IOSN_GEOMETRYMESHPOLYAS_get();
  public static readonly string IOSN_GEOMETRYNURBSAS = FbxWrapperNativePINVOKE.IOSN_GEOMETRYNURBSAS_get();
  public static readonly string IOSN_GEOMETRYNURBSSURFACEAS = FbxWrapperNativePINVOKE.IOSN_GEOMETRYNURBSSURFACEAS_get();
  public static readonly string IOSN_GEOMETRYPATCHAS = FbxWrapperNativePINVOKE.IOSN_GEOMETRYPATCHAS_get();
  public static readonly string IOSN_TANGENTS_BINORMALS = FbxWrapperNativePINVOKE.IOSN_TANGENTS_BINORMALS_get();
  public static readonly string IOSN_SMOOTH_MESH = FbxWrapperNativePINVOKE.IOSN_SMOOTH_MESH_get();
  public static readonly string IOSN_SELECTION_SET = FbxWrapperNativePINVOKE.IOSN_SELECTION_SET_get();
  public static readonly string IOSN_ANIMATIONONLY = FbxWrapperNativePINVOKE.IOSN_ANIMATIONONLY_get();
  public static readonly string IOSN_SELECTIONONLY = FbxWrapperNativePINVOKE.IOSN_SELECTIONONLY_get();
  public static readonly string IOSN_BONE = FbxWrapperNativePINVOKE.IOSN_BONE_get();
  public static readonly string IOSN_BONEWIDTHHEIGHTLOCK = FbxWrapperNativePINVOKE.IOSN_BONEWIDTHHEIGHTLOCK_get();
  public static readonly string IOSN_BONEASDUMMY = FbxWrapperNativePINVOKE.IOSN_BONEASDUMMY_get();
  public static readonly string IOSN_BONEMAX4BONEWIDTH = FbxWrapperNativePINVOKE.IOSN_BONEMAX4BONEWIDTH_get();
  public static readonly string IOSN_BONEMAX4BONEHEIGHT = FbxWrapperNativePINVOKE.IOSN_BONEMAX4BONEHEIGHT_get();
  public static readonly string IOSN_BONEMAX4BONETAPER = FbxWrapperNativePINVOKE.IOSN_BONEMAX4BONETAPER_get();
  public static readonly string IOSN_REMOVE_SINGLE_KEY = FbxWrapperNativePINVOKE.IOSN_REMOVE_SINGLE_KEY_get();
  public static readonly string IOSN_CURVE_FILTER = FbxWrapperNativePINVOKE.IOSN_CURVE_FILTER_get();
  public static readonly string IOSN_CONSTRAINT = FbxWrapperNativePINVOKE.IOSN_CONSTRAINT_get();
  public static readonly string IOSN_UI = FbxWrapperNativePINVOKE.IOSN_UI_get();
  public static readonly string IOSN_SHOW_UI_MODE = FbxWrapperNativePINVOKE.IOSN_SHOW_UI_MODE_get();
  public static readonly string IOSN_SHOW_WARNINGS_MANAGER = FbxWrapperNativePINVOKE.IOSN_SHOW_WARNINGS_MANAGER_get();
  public static readonly string IOSN_GENERATE_LOG_DATA = FbxWrapperNativePINVOKE.IOSN_GENERATE_LOG_DATA_get();
  public static readonly string IOSN_PERF_GRP = FbxWrapperNativePINVOKE.IOSN_PERF_GRP_get();
  public static readonly string IOSN_REMOVEBADPOLYSFROMMESH = FbxWrapperNativePINVOKE.IOSN_REMOVEBADPOLYSFROMMESH_get();
  public static readonly string IOSN_META_DATA = FbxWrapperNativePINVOKE.IOSN_META_DATA_get();
  public static readonly string IOSN_CACHE_GRP = FbxWrapperNativePINVOKE.IOSN_CACHE_GRP_get();
  public static readonly string IOSN_CACHE_SIZE = FbxWrapperNativePINVOKE.IOSN_CACHE_SIZE_get();
  public static readonly string IOSN_MERGE_MODE = FbxWrapperNativePINVOKE.IOSN_MERGE_MODE_get();
  public static readonly string IOSN_MERGE_MODE_DESCRIPTION = FbxWrapperNativePINVOKE.IOSN_MERGE_MODE_DESCRIPTION_get();
  public static readonly string IOSN_ONE_CLICK_MERGE = FbxWrapperNativePINVOKE.IOSN_ONE_CLICK_MERGE_get();
  public static readonly string IOSN_ONE_CLICK_MERGE_TEXTURE = FbxWrapperNativePINVOKE.IOSN_ONE_CLICK_MERGE_TEXTURE_get();
  public static readonly string IOSN_SAMPLINGPANEL = FbxWrapperNativePINVOKE.IOSN_SAMPLINGPANEL_get();
  public static readonly string IOSN_FILE_FORMAT = FbxWrapperNativePINVOKE.IOSN_FILE_FORMAT_get();
  public static readonly string IOSN_FBX = FbxWrapperNativePINVOKE.IOSN_FBX_get();
  public static readonly string IOSN_DXF = FbxWrapperNativePINVOKE.IOSN_DXF_get();
  public static readonly string IOSN_OBJ = FbxWrapperNativePINVOKE.IOSN_OBJ_get();
  public static readonly string IOSN_3DS = FbxWrapperNativePINVOKE.IOSN_3DS_get();
  public static readonly string IOSN_COLLADA = FbxWrapperNativePINVOKE.IOSN_COLLADA_get();
  public static readonly string IOSN_MOTION_BASE = FbxWrapperNativePINVOKE.IOSN_MOTION_BASE_get();
  public static readonly string IOSN_BIOVISION_BVH = FbxWrapperNativePINVOKE.IOSN_BIOVISION_BVH_get();
  public static readonly string IOSN_MOTIONANALYSIS_HTR = FbxWrapperNativePINVOKE.IOSN_MOTIONANALYSIS_HTR_get();
  public static readonly string IOSN_MOTIONANALYSIS_TRC = FbxWrapperNativePINVOKE.IOSN_MOTIONANALYSIS_TRC_get();
  public static readonly string IOSN_ACCLAIM_ASF = FbxWrapperNativePINVOKE.IOSN_ACCLAIM_ASF_get();
  public static readonly string IOSN_ACCLAIM_AMC = FbxWrapperNativePINVOKE.IOSN_ACCLAIM_AMC_get();
  public static readonly string IOSN_VICON_C3D = FbxWrapperNativePINVOKE.IOSN_VICON_C3D_get();
  public static readonly string IOSN_SKINS = FbxWrapperNativePINVOKE.IOSN_SKINS_get();
  public static readonly string IOSN_POINTCACHE = FbxWrapperNativePINVOKE.IOSN_POINTCACHE_get();
  public static readonly string IOSN_QUATERNION = FbxWrapperNativePINVOKE.IOSN_QUATERNION_get();
  public static readonly string IOSN_NAMETAKE = FbxWrapperNativePINVOKE.IOSN_NAMETAKE_get();
  public static readonly string IOSN_SHAPE = FbxWrapperNativePINVOKE.IOSN_SHAPE_get();
  public static readonly string IOSN_LIGHT = FbxWrapperNativePINVOKE.IOSN_LIGHT_get();
  public static readonly string IOSN_LIGHTATTENUATION = FbxWrapperNativePINVOKE.IOSN_LIGHTATTENUATION_get();
  public static readonly string IOSN_CAMERA = FbxWrapperNativePINVOKE.IOSN_CAMERA_get();
  public static readonly string IOSN_VIEW_CUBE = FbxWrapperNativePINVOKE.IOSN_VIEW_CUBE_get();
  public static readonly string IOSN_BINDPOSE = FbxWrapperNativePINVOKE.IOSN_BINDPOSE_get();
  public static readonly string IOSN_EMBEDTEXTURE_GRP = FbxWrapperNativePINVOKE.IOSN_EMBEDTEXTURE_GRP_get();
  public static readonly string IOSN_EMBEDTEXTURE = FbxWrapperNativePINVOKE.IOSN_EMBEDTEXTURE_get();
  public static readonly string IOSN_EMBEDDED_FOLDER = FbxWrapperNativePINVOKE.IOSN_EMBEDDED_FOLDER_get();
  public static readonly string IOSN_CONVERTTOTIFF = FbxWrapperNativePINVOKE.IOSN_CONVERTTOTIFF_get();
  public static readonly string IOSN_UNLOCK_NORMALS = FbxWrapperNativePINVOKE.IOSN_UNLOCK_NORMALS_get();
  public static readonly string IOSN_CREASE = FbxWrapperNativePINVOKE.IOSN_CREASE_get();
  public static readonly string IOSN_FINESTSUBDIVLEVEL = FbxWrapperNativePINVOKE.IOSN_FINESTSUBDIVLEVEL_get();
  public static readonly string IOSN_BAKEANIMATIONLAYERS = FbxWrapperNativePINVOKE.IOSN_BAKEANIMATIONLAYERS_get();
  public static readonly string IOSN_BAKECOMPLEXANIMATION = FbxWrapperNativePINVOKE.IOSN_BAKECOMPLEXANIMATION_get();
  public static readonly string IOSN_BAKEFRAMESTART = FbxWrapperNativePINVOKE.IOSN_BAKEFRAMESTART_get();
  public static readonly string IOSN_BAKEFRAMEEND = FbxWrapperNativePINVOKE.IOSN_BAKEFRAMEEND_get();
  public static readonly string IOSN_BAKEFRAMESTEP = FbxWrapperNativePINVOKE.IOSN_BAKEFRAMESTEP_get();
  public static readonly string IOSN_BAKEFRAMESTARTNORESET = FbxWrapperNativePINVOKE.IOSN_BAKEFRAMESTARTNORESET_get();
  public static readonly string IOSN_BAKEFRAMEENDNORESET = FbxWrapperNativePINVOKE.IOSN_BAKEFRAMEENDNORESET_get();
  public static readonly string IOSN_BAKEFRAMESTEPNORESET = FbxWrapperNativePINVOKE.IOSN_BAKEFRAMESTEPNORESET_get();
  public static readonly string IOSN_USEMATRIXFROMPOSE = FbxWrapperNativePINVOKE.IOSN_USEMATRIXFROMPOSE_get();
  public static readonly string IOSN_NULLSTOPIVOT = FbxWrapperNativePINVOKE.IOSN_NULLSTOPIVOT_get();
  public static readonly string IOSN_PIVOTTONULLS = FbxWrapperNativePINVOKE.IOSN_PIVOTTONULLS_get();
  public static readonly string IOSN_GEOMNORMALPERPOLY = FbxWrapperNativePINVOKE.IOSN_GEOMNORMALPERPOLY_get();
  public static readonly string IOSN_MAXBONEASBONE = FbxWrapperNativePINVOKE.IOSN_MAXBONEASBONE_get();
  public static readonly string IOSN_MAXNURBSSTEP = FbxWrapperNativePINVOKE.IOSN_MAXNURBSSTEP_get();
  public static readonly string IOSN_PROTECTDRIVENKEYS = FbxWrapperNativePINVOKE.IOSN_PROTECTDRIVENKEYS_get();
  public static readonly string IOSN_DEFORMNULLSASJOINTS = FbxWrapperNativePINVOKE.IOSN_DEFORMNULLSASJOINTS_get();
  public static readonly string IOSN_ENVIRONMENT = FbxWrapperNativePINVOKE.IOSN_ENVIRONMENT_get();
  public static readonly string IOSN_SAMPLINGRATESELECTOR = FbxWrapperNativePINVOKE.IOSN_SAMPLINGRATESELECTOR_get();
  public static readonly string IOSN_SAMPLINGRATE = FbxWrapperNativePINVOKE.IOSN_SAMPLINGRATE_get();
  public static readonly string IOSN_APPLYCSTKEYRED = FbxWrapperNativePINVOKE.IOSN_APPLYCSTKEYRED_get();
  public static readonly string IOSN_CSTKEYREDTPREC = FbxWrapperNativePINVOKE.IOSN_CSTKEYREDTPREC_get();
  public static readonly string IOSN_CSTKEYREDRPREC = FbxWrapperNativePINVOKE.IOSN_CSTKEYREDRPREC_get();
  public static readonly string IOSN_CSTKEYREDSPREC = FbxWrapperNativePINVOKE.IOSN_CSTKEYREDSPREC_get();
  public static readonly string IOSN_CSTKEYREDOPREC = FbxWrapperNativePINVOKE.IOSN_CSTKEYREDOPREC_get();
  public static readonly string IOSN_APPLYKEYREDUCE = FbxWrapperNativePINVOKE.IOSN_APPLYKEYREDUCE_get();
  public static readonly string IOSN_KEYREDUCEPREC = FbxWrapperNativePINVOKE.IOSN_KEYREDUCEPREC_get();
  public static readonly string IOSN_APPLYKEYSONFRM = FbxWrapperNativePINVOKE.IOSN_APPLYKEYSONFRM_get();
  public static readonly string IOSN_APPLYKEYSYNC = FbxWrapperNativePINVOKE.IOSN_APPLYKEYSYNC_get();
  public static readonly string IOSN_APPLYUNROLL = FbxWrapperNativePINVOKE.IOSN_APPLYUNROLL_get();
  public static readonly string IOSN_UNROLLPREC = FbxWrapperNativePINVOKE.IOSN_UNROLLPREC_get();
  public static readonly string IOSN_UNROLLPATH = FbxWrapperNativePINVOKE.IOSN_UNROLLPATH_get();
  public static readonly string IOSN_UNROLLFORCEAUTO = FbxWrapperNativePINVOKE.IOSN_UNROLLFORCEAUTO_get();
  public static readonly string IOSN_AUTOTANGENTSONLY = FbxWrapperNativePINVOKE.IOSN_AUTOTANGENTSONLY_get();
  public static readonly string IOSN_SMOOTHING_GROUPS = FbxWrapperNativePINVOKE.IOSN_SMOOTHING_GROUPS_get();
  public static readonly string IOSN_HARDEDGES = FbxWrapperNativePINVOKE.IOSN_HARDEDGES_get();
  public static readonly string IOSN_EXP_HARDEDGES = FbxWrapperNativePINVOKE.IOSN_EXP_HARDEDGES_get();
  public static readonly string IOSN_BLINDDATA = FbxWrapperNativePINVOKE.IOSN_BLINDDATA_get();
  public static readonly string IOSN_INPUTCONNECTIONS = FbxWrapperNativePINVOKE.IOSN_INPUTCONNECTIONS_get();
  public static readonly string IOSN_INSTANCES = FbxWrapperNativePINVOKE.IOSN_INSTANCES_get();
  public static readonly string IOSN_REFERENCES = FbxWrapperNativePINVOKE.IOSN_REFERENCES_get();
  public static readonly string IOSN_CONTAINEROBJECTS = FbxWrapperNativePINVOKE.IOSN_CONTAINEROBJECTS_get();
  public static readonly string IOSN_BYPASSRRSINHERITANCE = FbxWrapperNativePINVOKE.IOSN_BYPASSRRSINHERITANCE_get();
  public static readonly string IOSN_FORCEWEIGHTNORMALIZE = FbxWrapperNativePINVOKE.IOSN_FORCEWEIGHTNORMALIZE_get();
  public static readonly string IOSN_SHAPEANIMATION = FbxWrapperNativePINVOKE.IOSN_SHAPEANIMATION_get();
  public static readonly string IOSN_SMOOTHKEYASUSER = FbxWrapperNativePINVOKE.IOSN_SMOOTHKEYASUSER_get();
  public static readonly string IOSN_SCALEFACTOR = FbxWrapperNativePINVOKE.IOSN_SCALEFACTOR_get();
  public static readonly string IOSN_AXISCONVERSIONMETHOD = FbxWrapperNativePINVOKE.IOSN_AXISCONVERSIONMETHOD_get();
  public static readonly string IOSN_UPAXIS = FbxWrapperNativePINVOKE.IOSN_UPAXIS_get();
  public static readonly string IOSN_SELECTIONSETNAMEASPOINTCACHE = FbxWrapperNativePINVOKE.IOSN_SELECTIONSETNAMEASPOINTCACHE_get();
  public static readonly string IOSN_KEEPFRAMERATE = FbxWrapperNativePINVOKE.IOSN_KEEPFRAMERATE_get();
  public static readonly string IOSN_ATTENUATIONASINTENSITYCURVE = FbxWrapperNativePINVOKE.IOSN_ATTENUATIONASINTENSITYCURVE_get();
  public static readonly string IOSN_RESAMPLE_ANIMATION_CURVES = FbxWrapperNativePINVOKE.IOSN_RESAMPLE_ANIMATION_CURVES_get();
  public static readonly string IOSN_TIMELINE = FbxWrapperNativePINVOKE.IOSN_TIMELINE_get();
  public static readonly string IOSN_TIMELINE_SPAN = FbxWrapperNativePINVOKE.IOSN_TIMELINE_SPAN_get();
  public static readonly string IOSN_BUTTON_WEB_UPDATE = FbxWrapperNativePINVOKE.IOSN_BUTTON_WEB_UPDATE_get();
  public static readonly string IOSN_BUTTON_EDIT = FbxWrapperNativePINVOKE.IOSN_BUTTON_EDIT_get();
  public static readonly string IOSN_BUTTON_OK = FbxWrapperNativePINVOKE.IOSN_BUTTON_OK_get();
  public static readonly string IOSN_BUTTON_CANCEL = FbxWrapperNativePINVOKE.IOSN_BUTTON_CANCEL_get();
  public static readonly string IOSN_MENU_EDIT_PRESET = FbxWrapperNativePINVOKE.IOSN_MENU_EDIT_PRESET_get();
  public static readonly string IOSN_MENU_SAVE_PRESET = FbxWrapperNativePINVOKE.IOSN_MENU_SAVE_PRESET_get();
  public static readonly string IOSN_UIL = FbxWrapperNativePINVOKE.IOSN_UIL_get();
  public static readonly string IOSN_PLUGIN_PRODUCT_FAMILY = FbxWrapperNativePINVOKE.IOSN_PLUGIN_PRODUCT_FAMILY_get();
  public static readonly string IOSN_PLUGIN_UI_XPOS = FbxWrapperNativePINVOKE.IOSN_PLUGIN_UI_XPOS_get();
  public static readonly string IOSN_PLUGIN_UI_YPOS = FbxWrapperNativePINVOKE.IOSN_PLUGIN_UI_YPOS_get();
  public static readonly string IOSN_FBX_EXTENTIONS_SDK = FbxWrapperNativePINVOKE.IOSN_FBX_EXTENTIONS_SDK_get();
  public static readonly string IOSN_FBX_EXTENTIONS_SDK_WARNING = FbxWrapperNativePINVOKE.IOSN_FBX_EXTENTIONS_SDK_WARNING_get();
  public static readonly string IOSN_COLLADA_FRAME_COUNT = FbxWrapperNativePINVOKE.IOSN_COLLADA_FRAME_COUNT_get();
  public static readonly string IOSN_COLLADA_START = FbxWrapperNativePINVOKE.IOSN_COLLADA_START_get();
  public static readonly string IOSN_COLLADA_TAKE_NAME = FbxWrapperNativePINVOKE.IOSN_COLLADA_TAKE_NAME_get();
  public static readonly string IOSN_COLLADA_TRIANGULATE = FbxWrapperNativePINVOKE.IOSN_COLLADA_TRIANGULATE_get();
  public static readonly string IOSN_COLLADA_SINGLEMATRIX = FbxWrapperNativePINVOKE.IOSN_COLLADA_SINGLEMATRIX_get();
  public static readonly string IOSN_COLLADA_FRAME_RATE = FbxWrapperNativePINVOKE.IOSN_COLLADA_FRAME_RATE_get();
  public static readonly string IOSN_DXF_TRIANGULATE = FbxWrapperNativePINVOKE.IOSN_DXF_TRIANGULATE_get();
  public static readonly string IOSN_DXF_DEFORMATION = FbxWrapperNativePINVOKE.IOSN_DXF_DEFORMATION_get();
  public static readonly string IOSN_DXF_WELD_VERTICES = FbxWrapperNativePINVOKE.IOSN_DXF_WELD_VERTICES_get();
  public static readonly string IOSN_DXF_OBJECT_DERIVATION = FbxWrapperNativePINVOKE.IOSN_DXF_OBJECT_DERIVATION_get();
  public static readonly string IOSN_DXF_REFERENCE_NODE = FbxWrapperNativePINVOKE.IOSN_DXF_REFERENCE_NODE_get();
  public static readonly string IOSN_OBJ_REFERENCE_NODE = FbxWrapperNativePINVOKE.IOSN_OBJ_REFERENCE_NODE_get();
  public static readonly string IOSN_OBJ_TRIANGULATE = FbxWrapperNativePINVOKE.IOSN_OBJ_TRIANGULATE_get();
  public static readonly string IOSN_OBJ_DEFORMATION = FbxWrapperNativePINVOKE.IOSN_OBJ_DEFORMATION_get();
  public static readonly string IOSN_3DS_REFERENCENODE = FbxWrapperNativePINVOKE.IOSN_3DS_REFERENCENODE_get();
  public static readonly string IOSN_3DS_TEXTURE = FbxWrapperNativePINVOKE.IOSN_3DS_TEXTURE_get();
  public static readonly string IOSN_3DS_MATERIAL = FbxWrapperNativePINVOKE.IOSN_3DS_MATERIAL_get();
  public static readonly string IOSN_3DS_ANIMATION = FbxWrapperNativePINVOKE.IOSN_3DS_ANIMATION_get();
  public static readonly string IOSN_3DS_MESH = FbxWrapperNativePINVOKE.IOSN_3DS_MESH_get();
  public static readonly string IOSN_3DS_LIGHT = FbxWrapperNativePINVOKE.IOSN_3DS_LIGHT_get();
  public static readonly string IOSN_3DS_CAMERA = FbxWrapperNativePINVOKE.IOSN_3DS_CAMERA_get();
  public static readonly string IOSN_3DS_AMBIENT_LIGHT = FbxWrapperNativePINVOKE.IOSN_3DS_AMBIENT_LIGHT_get();
  public static readonly string IOSN_3DS_RESCALING = FbxWrapperNativePINVOKE.IOSN_3DS_RESCALING_get();
  public static readonly string IOSN_3DS_FILTER = FbxWrapperNativePINVOKE.IOSN_3DS_FILTER_get();
  public static readonly string IOSN_3DS_SMOOTHGROUP = FbxWrapperNativePINVOKE.IOSN_3DS_SMOOTHGROUP_get();
  public static readonly string IOSN_3DS_TAKE_NAME = FbxWrapperNativePINVOKE.IOSN_3DS_TAKE_NAME_get();
  public static readonly string IOSN_3DS_TEXUVBYPOLY = FbxWrapperNativePINVOKE.IOSN_3DS_TEXUVBYPOLY_get();
  public static readonly string IOSN_ZOOMEXTENTS = FbxWrapperNativePINVOKE.IOSN_ZOOMEXTENTS_get();
  public static readonly string IOSN_GLOBAL_AMBIENT_COLOR = FbxWrapperNativePINVOKE.IOSN_GLOBAL_AMBIENT_COLOR_get();
  public static readonly string IOSN_EDGE_ORIENTATION = FbxWrapperNativePINVOKE.IOSN_EDGE_ORIENTATION_get();
  public static readonly string IOSN_VERSIONS_UI_ALIAS = FbxWrapperNativePINVOKE.IOSN_VERSIONS_UI_ALIAS_get();
  public static readonly string IOSN_VERSIONS_COMP_DESCRIPTIONS = FbxWrapperNativePINVOKE.IOSN_VERSIONS_COMP_DESCRIPTIONS_get();
  public static readonly string IOSN_MODEL_COUNT = FbxWrapperNativePINVOKE.IOSN_MODEL_COUNT_get();
  public static readonly string IOSN_DEVICE_COUNT = FbxWrapperNativePINVOKE.IOSN_DEVICE_COUNT_get();
  public static readonly string IOSN_CHARACTER_COUNT = FbxWrapperNativePINVOKE.IOSN_CHARACTER_COUNT_get();
  public static readonly string IOSN_ACTOR_COUNT = FbxWrapperNativePINVOKE.IOSN_ACTOR_COUNT_get();
  public static readonly string IOSN_CONSTRAINT_COUNT = FbxWrapperNativePINVOKE.IOSN_CONSTRAINT_COUNT_get();
  public static readonly string IOSN_MEDIA_COUNT = FbxWrapperNativePINVOKE.IOSN_MEDIA_COUNT_get();
  public static readonly string IOSN_TEMPLATE = FbxWrapperNativePINVOKE.IOSN_TEMPLATE_get();
  public static readonly string IOSN_PIVOT = FbxWrapperNativePINVOKE.IOSN_PIVOT_get();
  public static readonly string IOSN_GLOBAL_SETTINGS = FbxWrapperNativePINVOKE.IOSN_GLOBAL_SETTINGS_get();
  public static readonly string IOSN_MERGE_LAYER_AND_TIMEWARP = FbxWrapperNativePINVOKE.IOSN_MERGE_LAYER_AND_TIMEWARP_get();
  public static readonly string IOSN_GOBO = FbxWrapperNativePINVOKE.IOSN_GOBO_get();
  public static readonly string IOSN_LINK = FbxWrapperNativePINVOKE.IOSN_LINK_get();
  public static readonly string IOSN_MATERIAL = FbxWrapperNativePINVOKE.IOSN_MATERIAL_get();
  public static readonly string IOSN_TEXTURE = FbxWrapperNativePINVOKE.IOSN_TEXTURE_get();
  public static readonly string IOSN_MODEL = FbxWrapperNativePINVOKE.IOSN_MODEL_get();
  public static readonly string IOSN_EMBEDDED = FbxWrapperNativePINVOKE.IOSN_EMBEDDED_get();
  public static readonly string IOSN_PASSWORD = FbxWrapperNativePINVOKE.IOSN_PASSWORD_get();
  public static readonly string IOSN_PASSWORD_ENABLE = FbxWrapperNativePINVOKE.IOSN_PASSWORD_ENABLE_get();
  public static readonly string IOSN_CURRENT_TAKE_NAME = FbxWrapperNativePINVOKE.IOSN_CURRENT_TAKE_NAME_get();
  public static readonly string IOSN_COLLAPSE_EXTERNALS = FbxWrapperNativePINVOKE.IOSN_COLLAPSE_EXTERNALS_get();
  public static readonly string IOSN_COMPRESS_ARRAYS = FbxWrapperNativePINVOKE.IOSN_COMPRESS_ARRAYS_get();
  public static readonly string IOSN_COMPRESS_LEVEL = FbxWrapperNativePINVOKE.IOSN_COMPRESS_LEVEL_get();
  public static readonly string IOSN_COMPRESS_MINSIZE = FbxWrapperNativePINVOKE.IOSN_COMPRESS_MINSIZE_get();
  public static readonly string IOSN_EMBEDDED_PROPERTIES_SKIP = FbxWrapperNativePINVOKE.IOSN_EMBEDDED_PROPERTIES_SKIP_get();
  public static readonly string IOSN_EXPORT_FILE_VERSION = FbxWrapperNativePINVOKE.IOSN_EXPORT_FILE_VERSION_get();
  public static readonly string IOSN_SHOW_UI_WARNING = FbxWrapperNativePINVOKE.IOSN_SHOW_UI_WARNING_get();
  public static readonly string IOSN_ADD_MATERIAL_TO_EDIT = FbxWrapperNativePINVOKE.IOSN_ADD_MATERIAL_TO_EDIT_get();
  public static readonly string IOSN_ENABLE_TEX_DISPLAY = FbxWrapperNativePINVOKE.IOSN_ENABLE_TEX_DISPLAY_get();
  public static readonly string IOSN_PREFERED_ENVELOPPE_SYSTEM = FbxWrapperNativePINVOKE.IOSN_PREFERED_ENVELOPPE_SYSTEM_get();
  public static readonly string IOSN_FIRST_TIME_RUN_NOTICE = FbxWrapperNativePINVOKE.IOSN_FIRST_TIME_RUN_NOTICE_get();
  public static readonly string IOSN_EXTRACT_EMBEDDED_DATA = FbxWrapperNativePINVOKE.IOSN_EXTRACT_EMBEDDED_DATA_get();
  public static readonly string IOSN_USETMPFILEPERIPHERAL = FbxWrapperNativePINVOKE.IOSN_USETMPFILEPERIPHERAL_get();
  public static readonly string IOSN_CONSTRUCTIONHISTORY = FbxWrapperNativePINVOKE.IOSN_CONSTRUCTIONHISTORY_get();
  public static readonly string IOSN_RELAXED_FBX_CHECK = FbxWrapperNativePINVOKE.IOSN_RELAXED_FBX_CHECK_get();
  public static readonly string IMP_PRESETS = FbxWrapperNativePINVOKE.IMP_PRESETS_get();
  public static readonly string IMP_STATISTICS = FbxWrapperNativePINVOKE.IMP_STATISTICS_get();
  public static readonly string IMP_STATISTICS_GRP = FbxWrapperNativePINVOKE.IMP_STATISTICS_GRP_get();
  public static readonly string IMP_PRESETS_GRP = FbxWrapperNativePINVOKE.IMP_PRESETS_GRP_get();
  public static readonly string IMP_PLUGIN_GRP = FbxWrapperNativePINVOKE.IMP_PLUGIN_GRP_get();
  public static readonly string IMP_INCLUDE_GRP = FbxWrapperNativePINVOKE.IMP_INCLUDE_GRP_get();
  public static readonly string IMP_ADV_OPT_GRP = FbxWrapperNativePINVOKE.IMP_ADV_OPT_GRP_get();
  public static readonly string IMP_FBX_EXT_SDK_GRP = FbxWrapperNativePINVOKE.IMP_FBX_EXT_SDK_GRP_get();
  public static readonly string IMP_FIRST_TIME_RUN_NOTICE_GRP = FbxWrapperNativePINVOKE.IMP_FIRST_TIME_RUN_NOTICE_GRP_get();
  public static readonly string IMP_INFORMATION_GRP = FbxWrapperNativePINVOKE.IMP_INFORMATION_GRP_get();
  public static readonly string IMP_FIRST_TIME_RUN_NOTICE = FbxWrapperNativePINVOKE.IMP_FIRST_TIME_RUN_NOTICE_get();
  public static readonly string IMP_GEOMETRY = FbxWrapperNativePINVOKE.IMP_GEOMETRY_get();
  public static readonly string IMP_AUDIO = FbxWrapperNativePINVOKE.IMP_AUDIO_get();
  public static readonly string IMP_ANIMATION = FbxWrapperNativePINVOKE.IMP_ANIMATION_get();
  public static readonly string IMP_SETLOCKEDATTRIB = FbxWrapperNativePINVOKE.IMP_SETLOCKEDATTRIB_get();
  public static readonly string IMP_MERGE_MODE = FbxWrapperNativePINVOKE.IMP_MERGE_MODE_get();
  public static readonly string IMP_MERGE_MODE_DESCRIPTION = FbxWrapperNativePINVOKE.IMP_MERGE_MODE_DESCRIPTION_get();
  public static readonly string IMP_ONE_CLICK_MERGE = FbxWrapperNativePINVOKE.IMP_ONE_CLICK_MERGE_get();
  public static readonly string IMP_ONE_CLICK_MERGE_TEXTURE = FbxWrapperNativePINVOKE.IMP_ONE_CLICK_MERGE_TEXTURE_get();
  public static readonly string IMP_ADD_MATERIAL_TO_EDIT = FbxWrapperNativePINVOKE.IMP_ADD_MATERIAL_TO_EDIT_get();
  public static readonly string IMP_ENABLE_TEX_DISPLAY = FbxWrapperNativePINVOKE.IMP_ENABLE_TEX_DISPLAY_get();
  public static readonly string IMP_PREFERED_ENVELOPPE_SYSTEM = FbxWrapperNativePINVOKE.IMP_PREFERED_ENVELOPPE_SYSTEM_get();
  public static readonly string IMP_CAMERA_GRP = FbxWrapperNativePINVOKE.IMP_CAMERA_GRP_get();
  public static readonly string IMP_LIGHT_GRP = FbxWrapperNativePINVOKE.IMP_LIGHT_GRP_get();
  public static readonly string IMP_EMBEDDED_GRP = FbxWrapperNativePINVOKE.IMP_EMBEDDED_GRP_get();
  public static readonly string IMP_EXTRACT_FOLDER = FbxWrapperNativePINVOKE.IMP_EXTRACT_FOLDER_get();
  public static readonly string IMP_LIGHT = FbxWrapperNativePINVOKE.IMP_LIGHT_get();
  public static readonly string IMP_ENVIRONMENT = FbxWrapperNativePINVOKE.IMP_ENVIRONMENT_get();
  public static readonly string IMP_CAMERA = FbxWrapperNativePINVOKE.IMP_CAMERA_get();
  public static readonly string IMP_VIEW_CUBE = FbxWrapperNativePINVOKE.IMP_VIEW_CUBE_get();
  public static readonly string IMP_ZOOMEXTENTS = FbxWrapperNativePINVOKE.IMP_ZOOMEXTENTS_get();
  public static readonly string IMP_GLOBAL_AMBIENT_COLOR = FbxWrapperNativePINVOKE.IMP_GLOBAL_AMBIENT_COLOR_get();
  public static readonly string IMP_CURVEFILTERS = FbxWrapperNativePINVOKE.IMP_CURVEFILTERS_get();
  public static readonly string IMP_SAMPLINGPANEL = FbxWrapperNativePINVOKE.IMP_SAMPLINGPANEL_get();
  public static readonly string IMP_DEFORMATION = FbxWrapperNativePINVOKE.IMP_DEFORMATION_get();
  public static readonly string IMP_BONE = FbxWrapperNativePINVOKE.IMP_BONE_get();
  public static readonly string IMP_ATTENUATIONASINTENSITYCURVE = FbxWrapperNativePINVOKE.IMP_ATTENUATIONASINTENSITYCURVE_get();
  public static readonly string IMP_EXTRA_GRP = FbxWrapperNativePINVOKE.IMP_EXTRA_GRP_get();
  public static readonly string IMP_TAKE = FbxWrapperNativePINVOKE.IMP_TAKE_get();
  public static readonly string IMP_KEEPFRAMERATE = FbxWrapperNativePINVOKE.IMP_KEEPFRAMERATE_get();
  public static readonly string IMP_TIMELINE = FbxWrapperNativePINVOKE.IMP_TIMELINE_get();
  public static readonly string IMP_TIMELINE_SPAN = FbxWrapperNativePINVOKE.IMP_TIMELINE_SPAN_get();
  public static readonly string IMP_BAKEANIMATIONLAYERS = FbxWrapperNativePINVOKE.IMP_BAKEANIMATIONLAYERS_get();
  public static readonly string IMP_MARKERS = FbxWrapperNativePINVOKE.IMP_MARKERS_get();
  public static readonly string IMP_QUATERNION = FbxWrapperNativePINVOKE.IMP_QUATERNION_get();
  public static readonly string IMP_PROTECTDRIVENKEYS = FbxWrapperNativePINVOKE.IMP_PROTECTDRIVENKEYS_get();
  public static readonly string IMP_DEFORMNULLSASJOINTS = FbxWrapperNativePINVOKE.IMP_DEFORMNULLSASJOINTS_get();
  public static readonly string IMP_NULLSTOPIVOT = FbxWrapperNativePINVOKE.IMP_NULLSTOPIVOT_get();
  public static readonly string IMP_POINTCACHE = FbxWrapperNativePINVOKE.IMP_POINTCACHE_get();
  public static readonly string IMP_SHAPEANIMATION = FbxWrapperNativePINVOKE.IMP_SHAPEANIMATION_get();
  public static readonly string IMP_CONSTRAINTS_GRP = FbxWrapperNativePINVOKE.IMP_CONSTRAINTS_GRP_get();
  public static readonly string IMP_CONSTRAINT = FbxWrapperNativePINVOKE.IMP_CONSTRAINT_get();
  public static readonly string IMP_CHARACTER = FbxWrapperNativePINVOKE.IMP_CHARACTER_get();
  public static readonly string IMP_CHARACTER_AS_MAYA_HIK = FbxWrapperNativePINVOKE.IMP_CHARACTER_AS_MAYA_HIK_get();
  public static readonly string IMP_CHARACTER_TYPE = FbxWrapperNativePINVOKE.IMP_CHARACTER_TYPE_get();
  public static readonly string IMP_SAMPLINGRATESELECTOR = FbxWrapperNativePINVOKE.IMP_SAMPLINGRATESELECTOR_get();
  public static readonly string IMP_SAMPLINGRATE = FbxWrapperNativePINVOKE.IMP_SAMPLINGRATE_get();
  public static readonly string IMP_UNITS_GRP = FbxWrapperNativePINVOKE.IMP_UNITS_GRP_get();
  public static readonly string IMP_AXISCONV_GRP = FbxWrapperNativePINVOKE.IMP_AXISCONV_GRP_get();
  public static readonly string IMP_CACHE_GRP = FbxWrapperNativePINVOKE.IMP_CACHE_GRP_get();
  public static readonly string IMP_UI = FbxWrapperNativePINVOKE.IMP_UI_get();
  public static readonly string IMP_FILEFORMAT = FbxWrapperNativePINVOKE.IMP_FILEFORMAT_get();
  public static readonly string IMP_PERF_GRP = FbxWrapperNativePINVOKE.IMP_PERF_GRP_get();
  public static readonly string IMP_REMOVEBADPOLYSFROMMESH = FbxWrapperNativePINVOKE.IMP_REMOVEBADPOLYSFROMMESH_get();
  public static readonly string IMP_META_DATA = FbxWrapperNativePINVOKE.IMP_META_DATA_get();
  public static readonly string IMP_FBX_EXTENTIONS_SDK_WARNING = FbxWrapperNativePINVOKE.IMP_FBX_EXTENTIONS_SDK_WARNING_get();
  public static readonly string IMP_SCALECONVERSION = FbxWrapperNativePINVOKE.IMP_SCALECONVERSION_get();
  public static readonly string IMP_MASTERSCALE = FbxWrapperNativePINVOKE.IMP_MASTERSCALE_get();
  public static readonly string IMP_UNITS_SCALE = FbxWrapperNativePINVOKE.IMP_UNITS_SCALE_get();
  public static readonly string IMP_DYN_SCALE_CONVERSION = FbxWrapperNativePINVOKE.IMP_DYN_SCALE_CONVERSION_get();
  public static readonly string IMP_UNITSELECTOR = FbxWrapperNativePINVOKE.IMP_UNITSELECTOR_get();
  public static readonly string IMP_TOTAL_UNITS_SCALE_TB = FbxWrapperNativePINVOKE.IMP_TOTAL_UNITS_SCALE_TB_get();
  public static readonly string IMP_SHOW_UI_MODE = FbxWrapperNativePINVOKE.IMP_SHOW_UI_MODE_get();
  public static readonly string IMP_SHOW_UI_WARNING = FbxWrapperNativePINVOKE.IMP_SHOW_UI_WARNING_get();
  public static readonly string IMP_SHOW_WARNINGS_MANAGER = FbxWrapperNativePINVOKE.IMP_SHOW_WARNINGS_MANAGER_get();
  public static readonly string IMP_GENERATE_LOG_DATA = FbxWrapperNativePINVOKE.IMP_GENERATE_LOG_DATA_get();
  public static readonly string IMP_PLUGIN_VERSIONS_URL = FbxWrapperNativePINVOKE.IMP_PLUGIN_VERSIONS_URL_get();
  public static readonly string IMP_DXF = FbxWrapperNativePINVOKE.IMP_DXF_get();
  public static readonly string IMP_FBX = FbxWrapperNativePINVOKE.IMP_FBX_get();
  public static readonly string IMP_OBJ = FbxWrapperNativePINVOKE.IMP_OBJ_get();
  public static readonly string IMP_3DS = FbxWrapperNativePINVOKE.IMP_3DS_get();
  public static readonly string IMP_MOTION_BASE = FbxWrapperNativePINVOKE.IMP_MOTION_BASE_get();
  public static readonly string IMP_BIOVISION_BVH = FbxWrapperNativePINVOKE.IMP_BIOVISION_BVH_get();
  public static readonly string IMP_MOTIONANALYSIS_HTR = FbxWrapperNativePINVOKE.IMP_MOTIONANALYSIS_HTR_get();
  public static readonly string IMP_ACCLAIM_ASF = FbxWrapperNativePINVOKE.IMP_ACCLAIM_ASF_get();
  public static readonly string IMP_ACCLAIM_AMC = FbxWrapperNativePINVOKE.IMP_ACCLAIM_AMC_get();
  public static readonly string IMP_UNLOCK_NORMALS = FbxWrapperNativePINVOKE.IMP_UNLOCK_NORMALS_get();
  public static readonly string IMP_CREASE = FbxWrapperNativePINVOKE.IMP_CREASE_get();
  public static readonly string IMP_SMOOTHING_GROUPS = FbxWrapperNativePINVOKE.IMP_SMOOTHING_GROUPS_get();
  public static readonly string IMP_HARDEDGES = FbxWrapperNativePINVOKE.IMP_HARDEDGES_get();
  public static readonly string IMP_BLINDDATA = FbxWrapperNativePINVOKE.IMP_BLINDDATA_get();
  public static readonly string IMP_BONE_WIDTHHEIGHTLOCK = FbxWrapperNativePINVOKE.IMP_BONE_WIDTHHEIGHTLOCK_get();
  public static readonly string IMP_BONEASDUMMY = FbxWrapperNativePINVOKE.IMP_BONEASDUMMY_get();
  public static readonly string IMP_BONEMAX4BONEWIDTH = FbxWrapperNativePINVOKE.IMP_BONEMAX4BONEWIDTH_get();
  public static readonly string IMP_BONEMAX4BONEHEIGHT = FbxWrapperNativePINVOKE.IMP_BONEMAX4BONEHEIGHT_get();
  public static readonly string IMP_BONEMAX4BONETAPER = FbxWrapperNativePINVOKE.IMP_BONEMAX4BONETAPER_get();
  public static readonly string IMP_SHAPE = FbxWrapperNativePINVOKE.IMP_SHAPE_get();
  public static readonly string IMP_SKINS = FbxWrapperNativePINVOKE.IMP_SKINS_get();
  public static readonly string IMP_USEMATRIXFROMPOSE = FbxWrapperNativePINVOKE.IMP_USEMATRIXFROMPOSE_get();
  public static readonly string IMP_FORCEWEIGHTNORMALIZE = FbxWrapperNativePINVOKE.IMP_FORCEWEIGHTNORMALIZE_get();
  public static readonly string IMP_APPLYCSTKEYRED = FbxWrapperNativePINVOKE.IMP_APPLYCSTKEYRED_get();
  public static readonly string IMP_CSTKEYREDTPREC = FbxWrapperNativePINVOKE.IMP_CSTKEYREDTPREC_get();
  public static readonly string IMP_CSTKEYREDRPREC = FbxWrapperNativePINVOKE.IMP_CSTKEYREDRPREC_get();
  public static readonly string IMP_CSTKEYREDSPREC = FbxWrapperNativePINVOKE.IMP_CSTKEYREDSPREC_get();
  public static readonly string IMP_CSTKEYREDOPREC = FbxWrapperNativePINVOKE.IMP_CSTKEYREDOPREC_get();
  public static readonly string IMP_AUTOTANGENTSONLY = FbxWrapperNativePINVOKE.IMP_AUTOTANGENTSONLY_get();
  public static readonly string IMP_APPLYKEYREDUCE = FbxWrapperNativePINVOKE.IMP_APPLYKEYREDUCE_get();
  public static readonly string IMP_KEYREDUCEPREC = FbxWrapperNativePINVOKE.IMP_KEYREDUCEPREC_get();
  public static readonly string IMP_APPLYKEYSONFRM = FbxWrapperNativePINVOKE.IMP_APPLYKEYSONFRM_get();
  public static readonly string IMP_APPLYKEYSYNC = FbxWrapperNativePINVOKE.IMP_APPLYKEYSYNC_get();
  public static readonly string IMP_APPLYUNROLL = FbxWrapperNativePINVOKE.IMP_APPLYUNROLL_get();
  public static readonly string IMP_UNROLLPREC = FbxWrapperNativePINVOKE.IMP_UNROLLPREC_get();
  public static readonly string IMP_UNROLLPATH = FbxWrapperNativePINVOKE.IMP_UNROLLPATH_get();
  public static readonly string IMP_UNROLLFORCEAUTO = FbxWrapperNativePINVOKE.IMP_UNROLLFORCEAUTO_get();
  public static readonly string IMP_UP_AXIS = FbxWrapperNativePINVOKE.IMP_UP_AXIS_get();
  public static readonly string IMP_UP_AXIS_MAX = FbxWrapperNativePINVOKE.IMP_UP_AXIS_MAX_get();
  public static readonly string IMP_ZUPROTATION_MAX = FbxWrapperNativePINVOKE.IMP_ZUPROTATION_MAX_get();
  public static readonly string IMP_AXISCONVERSION = FbxWrapperNativePINVOKE.IMP_AXISCONVERSION_get();
  public static readonly string IMP_AUTO_AXIS = FbxWrapperNativePINVOKE.IMP_AUTO_AXIS_get();
  public static readonly string IMP_FILE_UP_AXIS = FbxWrapperNativePINVOKE.IMP_FILE_UP_AXIS_get();
  public static readonly string IMP_CACHE_SIZE = FbxWrapperNativePINVOKE.IMP_CACHE_SIZE_get();
  public static readonly string IMP_PLUGIN_UI_WIDTH = FbxWrapperNativePINVOKE.IMP_PLUGIN_UI_WIDTH_get();
  public static readonly string IMP_PLUGIN_UI_HEIGHT = FbxWrapperNativePINVOKE.IMP_PLUGIN_UI_HEIGHT_get();
  public static readonly string IMP_PRESET_SELECTED = FbxWrapperNativePINVOKE.IMP_PRESET_SELECTED_get();
  public static readonly string IMP_UIL = FbxWrapperNativePINVOKE.IMP_UIL_get();
  public static readonly string IMP_PLUGIN_PRODUCT_FAMILY = FbxWrapperNativePINVOKE.IMP_PLUGIN_PRODUCT_FAMILY_get();
  public static readonly string IMP_PLUGIN_UI_XPOS = FbxWrapperNativePINVOKE.IMP_PLUGIN_UI_XPOS_get();
  public static readonly string IMP_PLUGIN_UI_YPOS = FbxWrapperNativePINVOKE.IMP_PLUGIN_UI_YPOS_get();
  public static readonly string IMP_DXF_WELD_VERTICES = FbxWrapperNativePINVOKE.IMP_DXF_WELD_VERTICES_get();
  public static readonly string IMP_DXF_OBJECT_DERIVATION = FbxWrapperNativePINVOKE.IMP_DXF_OBJECT_DERIVATION_get();
  public static readonly string IMP_DXF_REFERENCE_NODE = FbxWrapperNativePINVOKE.IMP_DXF_REFERENCE_NODE_get();
  public static readonly string IMP_OBJ_REFERENCE_NODE = FbxWrapperNativePINVOKE.IMP_OBJ_REFERENCE_NODE_get();
  public static readonly string IMP_3DS_REFERENCENODE = FbxWrapperNativePINVOKE.IMP_3DS_REFERENCENODE_get();
  public static readonly string IMP_3DS_TEXTURE = FbxWrapperNativePINVOKE.IMP_3DS_TEXTURE_get();
  public static readonly string IMP_3DS_MATERIAL = FbxWrapperNativePINVOKE.IMP_3DS_MATERIAL_get();
  public static readonly string IMP_3DS_ANIMATION = FbxWrapperNativePINVOKE.IMP_3DS_ANIMATION_get();
  public static readonly string IMP_3DS_MESH = FbxWrapperNativePINVOKE.IMP_3DS_MESH_get();
  public static readonly string IMP_3DS_LIGHT = FbxWrapperNativePINVOKE.IMP_3DS_LIGHT_get();
  public static readonly string IMP_3DS_CAMERA = FbxWrapperNativePINVOKE.IMP_3DS_CAMERA_get();
  public static readonly string IMP_3DS_AMBIENT_LIGHT = FbxWrapperNativePINVOKE.IMP_3DS_AMBIENT_LIGHT_get();
  public static readonly string IMP_3DS_RESCALING = FbxWrapperNativePINVOKE.IMP_3DS_RESCALING_get();
  public static readonly string IMP_3DS_FILTER = FbxWrapperNativePINVOKE.IMP_3DS_FILTER_get();
  public static readonly string IMP_3DS_SMOOTHGROUP = FbxWrapperNativePINVOKE.IMP_3DS_SMOOTHGROUP_get();
  public static readonly string IMP_FBX_MODEL_COUNT = FbxWrapperNativePINVOKE.IMP_FBX_MODEL_COUNT_get();
  public static readonly string IMP_FBX_DEVICE_COUNT = FbxWrapperNativePINVOKE.IMP_FBX_DEVICE_COUNT_get();
  public static readonly string IMP_FBX_CHARACTER_COUNT = FbxWrapperNativePINVOKE.IMP_FBX_CHARACTER_COUNT_get();
  public static readonly string IMP_FBX_ACTOR_COUNT = FbxWrapperNativePINVOKE.IMP_FBX_ACTOR_COUNT_get();
  public static readonly string IMP_FBX_CONSTRAINT_COUNT = FbxWrapperNativePINVOKE.IMP_FBX_CONSTRAINT_COUNT_get();
  public static readonly string IMP_FBX_MEDIA_COUNT = FbxWrapperNativePINVOKE.IMP_FBX_MEDIA_COUNT_get();
  public static readonly string IMP_FBX_TEMPLATE = FbxWrapperNativePINVOKE.IMP_FBX_TEMPLATE_get();
  public static readonly string IMP_FBX_PIVOT = FbxWrapperNativePINVOKE.IMP_FBX_PIVOT_get();
  public static readonly string IMP_FBX_GLOBAL_SETTINGS = FbxWrapperNativePINVOKE.IMP_FBX_GLOBAL_SETTINGS_get();
  public static readonly string IMP_FBX_CHARACTER = FbxWrapperNativePINVOKE.IMP_FBX_CHARACTER_get();
  public static readonly string IMP_FBX_CONSTRAINT = FbxWrapperNativePINVOKE.IMP_FBX_CONSTRAINT_get();
  public static readonly string IMP_FBX_MERGE_LAYER_AND_TIMEWARP = FbxWrapperNativePINVOKE.IMP_FBX_MERGE_LAYER_AND_TIMEWARP_get();
  public static readonly string IMP_FBX_GOBO = FbxWrapperNativePINVOKE.IMP_FBX_GOBO_get();
  public static readonly string IMP_FBX_SHAPE = FbxWrapperNativePINVOKE.IMP_FBX_SHAPE_get();
  public static readonly string IMP_FBX_LINK = FbxWrapperNativePINVOKE.IMP_FBX_LINK_get();
  public static readonly string IMP_FBX_MATERIAL = FbxWrapperNativePINVOKE.IMP_FBX_MATERIAL_get();
  public static readonly string IMP_FBX_TEXTURE = FbxWrapperNativePINVOKE.IMP_FBX_TEXTURE_get();
  public static readonly string IMP_FBX_MODEL = FbxWrapperNativePINVOKE.IMP_FBX_MODEL_get();
  public static readonly string IMP_FBX_AUDIO = FbxWrapperNativePINVOKE.IMP_FBX_AUDIO_get();
  public static readonly string IMP_FBX_ANIMATION = FbxWrapperNativePINVOKE.IMP_FBX_ANIMATION_get();
  public static readonly string IMP_FBX_PASSWORD = FbxWrapperNativePINVOKE.IMP_FBX_PASSWORD_get();
  public static readonly string IMP_FBX_PASSWORD_ENABLE = FbxWrapperNativePINVOKE.IMP_FBX_PASSWORD_ENABLE_get();
  public static readonly string IMP_FBX_CURRENT_TAKE_NAME = FbxWrapperNativePINVOKE.IMP_FBX_CURRENT_TAKE_NAME_get();
  public static readonly string IMP_FBX_EXTRACT_EMBEDDED_DATA = FbxWrapperNativePINVOKE.IMP_FBX_EXTRACT_EMBEDDED_DATA_get();
  public static readonly string IMP_RELAXED_FBX_CHECK = FbxWrapperNativePINVOKE.IMP_RELAXED_FBX_CHECK_get();
  public static readonly string IMP_BUTTON_WEB_UPDATE = FbxWrapperNativePINVOKE.IMP_BUTTON_WEB_UPDATE_get();
  public static readonly string IMP_PI_VERSION = FbxWrapperNativePINVOKE.IMP_PI_VERSION_get();
  public static readonly string EXP_STATISTICS_GRP = FbxWrapperNativePINVOKE.EXP_STATISTICS_GRP_get();
  public static readonly string EXP_ADV_OPT_GRP = FbxWrapperNativePINVOKE.EXP_ADV_OPT_GRP_get();
  public static readonly string EXP_PRESETS_GRP = FbxWrapperNativePINVOKE.EXP_PRESETS_GRP_get();
  public static readonly string EXP_STATISTICS = FbxWrapperNativePINVOKE.EXP_STATISTICS_get();
  public static readonly string EXP_FIRST_TIME_RUN_NOTICE_GRP = FbxWrapperNativePINVOKE.EXP_FIRST_TIME_RUN_NOTICE_GRP_get();
  public static readonly string EXP_INFORMATION_GRP = FbxWrapperNativePINVOKE.EXP_INFORMATION_GRP_get();
  public static readonly string EXP_PLUGIN_GRP = FbxWrapperNativePINVOKE.EXP_PLUGIN_GRP_get();
  public static readonly string EXP_INCLUDE_GRP = FbxWrapperNativePINVOKE.EXP_INCLUDE_GRP_get();
  public static readonly string EXP_FBX_EXT_SDK_GRP = FbxWrapperNativePINVOKE.EXP_FBX_EXT_SDK_GRP_get();
  public static readonly string EXP_UNITS_GRP = FbxWrapperNativePINVOKE.EXP_UNITS_GRP_get();
  public static readonly string EXP_FILEFORMAT = FbxWrapperNativePINVOKE.EXP_FILEFORMAT_get();
  public static readonly string EXP_AXISCONV_GRP = FbxWrapperNativePINVOKE.EXP_AXISCONV_GRP_get();
  public static readonly string EXP_CACHE_GRP = FbxWrapperNativePINVOKE.EXP_CACHE_GRP_get();
  public static readonly string EXP_UI = FbxWrapperNativePINVOKE.EXP_UI_get();
  public static readonly string EXP_FBX_EXTENTIONS_SDK_WARNING = FbxWrapperNativePINVOKE.EXP_FBX_EXTENTIONS_SDK_WARNING_get();
  public static readonly string EXP_FIRST_TIME_RUN_NOTICE = FbxWrapperNativePINVOKE.EXP_FIRST_TIME_RUN_NOTICE_get();
  public static readonly string EXP_SCALEFACTOR = FbxWrapperNativePINVOKE.EXP_SCALEFACTOR_get();
  public static readonly string EXP_AXISCONVERSIONMETHOD = FbxWrapperNativePINVOKE.EXP_AXISCONVERSIONMETHOD_get();
  public static readonly string EXP_UPAXIS = FbxWrapperNativePINVOKE.EXP_UPAXIS_get();
  public static readonly string EXP_UNITS_SCALE = FbxWrapperNativePINVOKE.EXP_UNITS_SCALE_get();
  public static readonly string EXP_MASTERSCALE = FbxWrapperNativePINVOKE.EXP_MASTERSCALE_get();
  public static readonly string EXP_DYN_SCALE_CONVERSION = FbxWrapperNativePINVOKE.EXP_DYN_SCALE_CONVERSION_get();
  public static readonly string EXP_UNITSELECTOR = FbxWrapperNativePINVOKE.EXP_UNITSELECTOR_get();
  public static readonly string EXP_TOTAL_UNITS_SCALE_TB = FbxWrapperNativePINVOKE.EXP_TOTAL_UNITS_SCALE_TB_get();
  public static readonly string EXP_SHOW_UI_MODE = FbxWrapperNativePINVOKE.EXP_SHOW_UI_MODE_get();
  public static readonly string EXP_SHOW_UI_WARNING = FbxWrapperNativePINVOKE.EXP_SHOW_UI_WARNING_get();
  public static readonly string EXP_SHOW_WARNINGS_MANAGER = FbxWrapperNativePINVOKE.EXP_SHOW_WARNINGS_MANAGER_get();
  public static readonly string EXP_GENERATE_LOG_DATA = FbxWrapperNativePINVOKE.EXP_GENERATE_LOG_DATA_get();
  public static readonly string EXP_PLUGIN_VERSIONS_URL = FbxWrapperNativePINVOKE.EXP_PLUGIN_VERSIONS_URL_get();
  public static readonly string EXP_PRESETS = FbxWrapperNativePINVOKE.EXP_PRESETS_get();
  public static readonly string EXP_CAMERA_GRP = FbxWrapperNativePINVOKE.EXP_CAMERA_GRP_get();
  public static readonly string EXP_LIGHT_GRP = FbxWrapperNativePINVOKE.EXP_LIGHT_GRP_get();
  public static readonly string EXP_GEOMETRY = FbxWrapperNativePINVOKE.EXP_GEOMETRY_get();
  public static readonly string EXP_AUDIO = FbxWrapperNativePINVOKE.EXP_AUDIO_get();
  public static readonly string EXP_ANIMATION = FbxWrapperNativePINVOKE.EXP_ANIMATION_get();
  public static readonly string EXP_PIVOTTONULLS = FbxWrapperNativePINVOKE.EXP_PIVOTTONULLS_get();
  public static readonly string EXP_LIGHT = FbxWrapperNativePINVOKE.EXP_LIGHT_get();
  public static readonly string EXP_LIGHTATTENUATION = FbxWrapperNativePINVOKE.EXP_LIGHTATTENUATION_get();
  public static readonly string EXP_ENVIRONMENT = FbxWrapperNativePINVOKE.EXP_ENVIRONMENT_get();
  public static readonly string EXP_CAMERA = FbxWrapperNativePINVOKE.EXP_CAMERA_get();
  public static readonly string EXP_BINDPOSE = FbxWrapperNativePINVOKE.EXP_BINDPOSE_get();
  public static readonly string EXP_SELECTIONONLY = FbxWrapperNativePINVOKE.EXP_SELECTIONONLY_get();
  public static readonly string EXP_INPUTCONNECTIONS_GRP = FbxWrapperNativePINVOKE.EXP_INPUTCONNECTIONS_GRP_get();
  public static readonly string EXP_INPUTCONNECTIONS = FbxWrapperNativePINVOKE.EXP_INPUTCONNECTIONS_get();
  public static readonly string EXP_BYPASSRRSINHERITANCE = FbxWrapperNativePINVOKE.EXP_BYPASSRRSINHERITANCE_get();
  public static readonly string EXP_EMBEDTEXTURE_GRP = FbxWrapperNativePINVOKE.EXP_EMBEDTEXTURE_GRP_get();
  public static readonly string EXP_EMBEDTEXTURE = FbxWrapperNativePINVOKE.EXP_EMBEDTEXTURE_get();
  public static readonly string EXP_CONVERTTOTIFF = FbxWrapperNativePINVOKE.EXP_CONVERTTOTIFF_get();
  public static readonly string EXP_CURVEFILTERS = FbxWrapperNativePINVOKE.EXP_CURVEFILTERS_get();
  public static readonly string EXP_DEFORMATION = FbxWrapperNativePINVOKE.EXP_DEFORMATION_get();
  public static readonly string EXP_BAKECOMPLEXANIMATION = FbxWrapperNativePINVOKE.EXP_BAKECOMPLEXANIMATION_get();
  public static readonly string EXP_BONE = FbxWrapperNativePINVOKE.EXP_BONE_get();
  public static readonly string EXP_POINTCACHE = FbxWrapperNativePINVOKE.EXP_POINTCACHE_get();
  public static readonly string EXP_SMOOTHKEYASUSER = FbxWrapperNativePINVOKE.EXP_SMOOTHKEYASUSER_get();
  public static readonly string EXP_EXTRA_GRP = FbxWrapperNativePINVOKE.EXP_EXTRA_GRP_get();
  public static readonly string EXP_REMOVE_SINGLE_KEY = FbxWrapperNativePINVOKE.EXP_REMOVE_SINGLE_KEY_get();
  public static readonly string EXP_NAMETAKE = FbxWrapperNativePINVOKE.EXP_NAMETAKE_get();
  public static readonly string EXP_QUATERNION = FbxWrapperNativePINVOKE.EXP_QUATERNION_get();
  public static readonly string EXP_CONSTRAINTS_GRP = FbxWrapperNativePINVOKE.EXP_CONSTRAINTS_GRP_get();
  public static readonly string EXP_CONSTRAINT = FbxWrapperNativePINVOKE.EXP_CONSTRAINT_get();
  public static readonly string EXP_CHARACTER = FbxWrapperNativePINVOKE.EXP_CHARACTER_get();
  public static readonly string EXP_MRCUSTOMATTRIBUTES = FbxWrapperNativePINVOKE.EXP_MRCUSTOMATTRIBUTES_get();
  public static readonly string EXP_MESHPRIMITIVE = FbxWrapperNativePINVOKE.EXP_MESHPRIMITIVE_get();
  public static readonly string EXP_MESHTRIANGLE = FbxWrapperNativePINVOKE.EXP_MESHTRIANGLE_get();
  public static readonly string EXP_MESHPOLY = FbxWrapperNativePINVOKE.EXP_MESHPOLY_get();
  public static readonly string EXP_NURB = FbxWrapperNativePINVOKE.EXP_NURB_get();
  public static readonly string EXP_PATCH = FbxWrapperNativePINVOKE.EXP_PATCH_get();
  public static readonly string EXP_BIP2FBX = FbxWrapperNativePINVOKE.EXP_BIP2FBX_get();
  public static readonly string EXP_GEOMNORMALPERPOLY = FbxWrapperNativePINVOKE.EXP_GEOMNORMALPERPOLY_get();
  public static readonly string EXP_TANGENTSPACE = FbxWrapperNativePINVOKE.EXP_TANGENTSPACE_get();
  public static readonly string EXP_SMOOTHMESH = FbxWrapperNativePINVOKE.EXP_SMOOTHMESH_get();
  public static readonly string EXP_SELECTIONSET = FbxWrapperNativePINVOKE.EXP_SELECTIONSET_get();
  public static readonly string EXP_FINESTSUBDIVLEVEL = FbxWrapperNativePINVOKE.EXP_FINESTSUBDIVLEVEL_get();
  public static readonly string EXP_MAXBONEASBONE = FbxWrapperNativePINVOKE.EXP_MAXBONEASBONE_get();
  public static readonly string EXP_MAXNURBSSTEP = FbxWrapperNativePINVOKE.EXP_MAXNURBSSTEP_get();
  public static readonly string EXP_CREASE = FbxWrapperNativePINVOKE.EXP_CREASE_get();
  public static readonly string EXP_BLINDDATA = FbxWrapperNativePINVOKE.EXP_BLINDDATA_get();
  public static readonly string EXP_NURBSSURFACEAS = FbxWrapperNativePINVOKE.EXP_NURBSSURFACEAS_get();
  public static readonly string EXP_SMOOTHING_GROUPS = FbxWrapperNativePINVOKE.EXP_SMOOTHING_GROUPS_get();
  public static readonly string EXP_HARDEDGES = FbxWrapperNativePINVOKE.EXP_HARDEDGES_get();
  public static readonly string EXP_ANIMATIONONLY = FbxWrapperNativePINVOKE.EXP_ANIMATIONONLY_get();
  public static readonly string EXP_INSTANCES = FbxWrapperNativePINVOKE.EXP_INSTANCES_get();
  public static readonly string EXP_CONTAINEROBJECTS = FbxWrapperNativePINVOKE.EXP_CONTAINEROBJECTS_get();
  public static readonly string EXP_TRIANGULATE = FbxWrapperNativePINVOKE.EXP_TRIANGULATE_get();
  public static readonly string EXP_EDGE_ORIENTATION = FbxWrapperNativePINVOKE.EXP_EDGE_ORIENTATION_get();
  public static readonly string EXP_SELECTIONSETNAMEASPOINTCACHE = FbxWrapperNativePINVOKE.EXP_SELECTIONSETNAMEASPOINTCACHE_get();
  public static readonly string EXP_GEOMETRYMESHPRIMITIVEAS = FbxWrapperNativePINVOKE.EXP_GEOMETRYMESHPRIMITIVEAS_get();
  public static readonly string EXP_GEOMETRYMESHTRIANGLEAS = FbxWrapperNativePINVOKE.EXP_GEOMETRYMESHTRIANGLEAS_get();
  public static readonly string EXP_GEOMETRYMESHPOLYAS = FbxWrapperNativePINVOKE.EXP_GEOMETRYMESHPOLYAS_get();
  public static readonly string EXP_GEOMETRYNURBSAS = FbxWrapperNativePINVOKE.EXP_GEOMETRYNURBSAS_get();
  public static readonly string EXP_GEOMETRYPATCHAS = FbxWrapperNativePINVOKE.EXP_GEOMETRYPATCHAS_get();
  public static readonly string EXP_BAKEFRAMESTART = FbxWrapperNativePINVOKE.EXP_BAKEFRAMESTART_get();
  public static readonly string EXP_BAKEFRAMEEND = FbxWrapperNativePINVOKE.EXP_BAKEFRAMEEND_get();
  public static readonly string EXP_BAKEFRAMESTEP = FbxWrapperNativePINVOKE.EXP_BAKEFRAMESTEP_get();
  public static readonly string EXP_BAKE_RESAMPLE_ANIMATION_CURVES = FbxWrapperNativePINVOKE.EXP_BAKE_RESAMPLE_ANIMATION_CURVES_get();
  public static readonly string EXP_BAKEFRAMESTARTNORESET = FbxWrapperNativePINVOKE.EXP_BAKEFRAMESTARTNORESET_get();
  public static readonly string EXP_BAKEFRAMEENDNORESET = FbxWrapperNativePINVOKE.EXP_BAKEFRAMEENDNORESET_get();
  public static readonly string EXP_BAKEFRAMESTEPNORESET = FbxWrapperNativePINVOKE.EXP_BAKEFRAMESTEPNORESET_get();
  public static readonly string EXP_FBX = FbxWrapperNativePINVOKE.EXP_FBX_get();
  public static readonly string EXP_DXF = FbxWrapperNativePINVOKE.EXP_DXF_get();
  public static readonly string EXP_COLLADA = FbxWrapperNativePINVOKE.EXP_COLLADA_get();
  public static readonly string EXP_OBJ = FbxWrapperNativePINVOKE.EXP_OBJ_get();
  public static readonly string EXP_3DS = FbxWrapperNativePINVOKE.EXP_3DS_get();
  public static readonly string EXP_MOTION_BASE = FbxWrapperNativePINVOKE.EXP_MOTION_BASE_get();
  public static readonly string EXP_BIOVISION_BVH = FbxWrapperNativePINVOKE.EXP_BIOVISION_BVH_get();
  public static readonly string EXP_ACCLAIM_ASF = FbxWrapperNativePINVOKE.EXP_ACCLAIM_ASF_get();
  public static readonly string EXP_ACCLAIM_AMC = FbxWrapperNativePINVOKE.EXP_ACCLAIM_AMC_get();
  public static readonly string EXP_ASCIIFBX = FbxWrapperNativePINVOKE.EXP_ASCIIFBX_get();
  public static readonly string EXP_CACHE_SIZE = FbxWrapperNativePINVOKE.EXP_CACHE_SIZE_get();
  public static readonly string EXP_SHAPE = FbxWrapperNativePINVOKE.EXP_SHAPE_get();
  public static readonly string EXP_SKINS = FbxWrapperNativePINVOKE.EXP_SKINS_get();
  public static readonly string EXP_APPLYCSTKEYRED = FbxWrapperNativePINVOKE.EXP_APPLYCSTKEYRED_get();
  public static readonly string EXP_SAMPLINGRATE = FbxWrapperNativePINVOKE.EXP_SAMPLINGRATE_get();
  public static readonly string EXP_CSTKEYREDTPREC = FbxWrapperNativePINVOKE.EXP_CSTKEYREDTPREC_get();
  public static readonly string EXP_CSTKEYREDRPREC = FbxWrapperNativePINVOKE.EXP_CSTKEYREDRPREC_get();
  public static readonly string EXP_CSTKEYREDSPREC = FbxWrapperNativePINVOKE.EXP_CSTKEYREDSPREC_get();
  public static readonly string EXP_CSTKEYREDOPREC = FbxWrapperNativePINVOKE.EXP_CSTKEYREDOPREC_get();
  public static readonly string EXP_AUTOTANGENTSONLY = FbxWrapperNativePINVOKE.EXP_AUTOTANGENTSONLY_get();
  public static readonly string EXP_APPLYKEYREDUCE = FbxWrapperNativePINVOKE.EXP_APPLYKEYREDUCE_get();
  public static readonly string EXP_KEYREDUCEPREC = FbxWrapperNativePINVOKE.EXP_KEYREDUCEPREC_get();
  public static readonly string EXP_APPLYKEYSONFRM = FbxWrapperNativePINVOKE.EXP_APPLYKEYSONFRM_get();
  public static readonly string EXP_APPLYKEYSYNC = FbxWrapperNativePINVOKE.EXP_APPLYKEYSYNC_get();
  public static readonly string EXP_APPLYUNROLL = FbxWrapperNativePINVOKE.EXP_APPLYUNROLL_get();
  public static readonly string EXP_UNROLLPREC = FbxWrapperNativePINVOKE.EXP_UNROLLPREC_get();
  public static readonly string EXP_UNROLLPATH = FbxWrapperNativePINVOKE.EXP_UNROLLPATH_get();
  public static readonly string EXP_UNROLLFORCEAUTO = FbxWrapperNativePINVOKE.EXP_UNROLLFORCEAUTO_get();
  public static readonly string EXP_PLUGIN_UI_WIDTH = FbxWrapperNativePINVOKE.EXP_PLUGIN_UI_WIDTH_get();
  public static readonly string EXP_PLUGIN_UI_HEIGHT = FbxWrapperNativePINVOKE.EXP_PLUGIN_UI_HEIGHT_get();
  public static readonly string EXP_PRESET_SELECTED = FbxWrapperNativePINVOKE.EXP_PRESET_SELECTED_get();
  public static readonly string EXP_UIL = FbxWrapperNativePINVOKE.EXP_UIL_get();
  public static readonly string EXP_PLUGIN_PRODUCT_FAMILY = FbxWrapperNativePINVOKE.EXP_PLUGIN_PRODUCT_FAMILY_get();
  public static readonly string EXP_PLUGIN_UI_XPOS = FbxWrapperNativePINVOKE.EXP_PLUGIN_UI_XPOS_get();
  public static readonly string EXP_PLUGIN_UI_YPOS = FbxWrapperNativePINVOKE.EXP_PLUGIN_UI_YPOS_get();
  public static readonly string EXP_BUTTON_WEB_UPDATE = FbxWrapperNativePINVOKE.EXP_BUTTON_WEB_UPDATE_get();
  public static readonly string EXP_PI_VERSION = FbxWrapperNativePINVOKE.EXP_PI_VERSION_get();
  public static readonly string EXP_BUTTON_EDIT = FbxWrapperNativePINVOKE.EXP_BUTTON_EDIT_get();
  public static readonly string EXP_BUTTON_OK = FbxWrapperNativePINVOKE.EXP_BUTTON_OK_get();
  public static readonly string EXP_BUTTON_CANCEL = FbxWrapperNativePINVOKE.EXP_BUTTON_CANCEL_get();
  public static readonly string EXP_MENU_EDIT_PRESET = FbxWrapperNativePINVOKE.EXP_MENU_EDIT_PRESET_get();
  public static readonly string EXP_MENU_SAVE_PRESET = FbxWrapperNativePINVOKE.EXP_MENU_SAVE_PRESET_get();
  public static readonly string EXP_USETMPFILEPERIPHERAL = FbxWrapperNativePINVOKE.EXP_USETMPFILEPERIPHERAL_get();
  public static readonly string EXP_CONSTRUCTIONHISTORY = FbxWrapperNativePINVOKE.EXP_CONSTRUCTIONHISTORY_get();
  public static readonly string EXP_COLLADA_TRIANGULATE = FbxWrapperNativePINVOKE.EXP_COLLADA_TRIANGULATE_get();
  public static readonly string EXP_COLLADA_SINGLEMATRIX = FbxWrapperNativePINVOKE.EXP_COLLADA_SINGLEMATRIX_get();
  public static readonly string EXP_COLLADA_FRAME_RATE = FbxWrapperNativePINVOKE.EXP_COLLADA_FRAME_RATE_get();
  public static readonly string EXP_DXF_TRIANGULATE = FbxWrapperNativePINVOKE.EXP_DXF_TRIANGULATE_get();
  public static readonly string EXP_DXF_DEFORMATION = FbxWrapperNativePINVOKE.EXP_DXF_DEFORMATION_get();
  public static readonly string EXP_OBJ_TRIANGULATE = FbxWrapperNativePINVOKE.EXP_OBJ_TRIANGULATE_get();
  public static readonly string EXP_OBJ_DEFORMATION = FbxWrapperNativePINVOKE.EXP_OBJ_DEFORMATION_get();
  public static readonly string EXP_3DS_REFERENCENODE = FbxWrapperNativePINVOKE.EXP_3DS_REFERENCENODE_get();
  public static readonly string EXP_3DS_TEXTURE = FbxWrapperNativePINVOKE.EXP_3DS_TEXTURE_get();
  public static readonly string EXP_3DS_MATERIAL = FbxWrapperNativePINVOKE.EXP_3DS_MATERIAL_get();
  public static readonly string EXP_3DS_ANIMATION = FbxWrapperNativePINVOKE.EXP_3DS_ANIMATION_get();
  public static readonly string EXP_3DS_MESH = FbxWrapperNativePINVOKE.EXP_3DS_MESH_get();
  public static readonly string EXP_3DS_LIGHT = FbxWrapperNativePINVOKE.EXP_3DS_LIGHT_get();
  public static readonly string EXP_3DS_CAMERA = FbxWrapperNativePINVOKE.EXP_3DS_CAMERA_get();
  public static readonly string EXP_3DS_AMBIENT_LIGHT = FbxWrapperNativePINVOKE.EXP_3DS_AMBIENT_LIGHT_get();
  public static readonly string EXP_3DS_RESCALING = FbxWrapperNativePINVOKE.EXP_3DS_RESCALING_get();
  public static readonly string EXP_3DS_TEXUVBYPOLY = FbxWrapperNativePINVOKE.EXP_3DS_TEXUVBYPOLY_get();
  public static readonly string EXP_FBX_TEMPLATE = FbxWrapperNativePINVOKE.EXP_FBX_TEMPLATE_get();
  public static readonly string EXP_FBX_PIVOT = FbxWrapperNativePINVOKE.EXP_FBX_PIVOT_get();
  public static readonly string EXP_FBX_GLOBAL_SETTINGS = FbxWrapperNativePINVOKE.EXP_FBX_GLOBAL_SETTINGS_get();
  public static readonly string EXP_FBX_CHARACTER = FbxWrapperNativePINVOKE.EXP_FBX_CHARACTER_get();
  public static readonly string EXP_FBX_CONSTRAINT = FbxWrapperNativePINVOKE.EXP_FBX_CONSTRAINT_get();
  public static readonly string EXP_FBX_GOBO = FbxWrapperNativePINVOKE.EXP_FBX_GOBO_get();
  public static readonly string EXP_FBX_SHAPE = FbxWrapperNativePINVOKE.EXP_FBX_SHAPE_get();
  public static readonly string EXP_FBX_MATERIAL = FbxWrapperNativePINVOKE.EXP_FBX_MATERIAL_get();
  public static readonly string EXP_FBX_TEXTURE = FbxWrapperNativePINVOKE.EXP_FBX_TEXTURE_get();
  public static readonly string EXP_FBX_MODEL = FbxWrapperNativePINVOKE.EXP_FBX_MODEL_get();
  public static readonly string EXP_FBX_AUDIO = FbxWrapperNativePINVOKE.EXP_FBX_AUDIO_get();
  public static readonly string EXP_FBX_ANIMATION = FbxWrapperNativePINVOKE.EXP_FBX_ANIMATION_get();
  public static readonly string EXP_FBX_EMBEDDED = FbxWrapperNativePINVOKE.EXP_FBX_EMBEDDED_get();
  public static readonly string EXP_FBX_PASSWORD = FbxWrapperNativePINVOKE.EXP_FBX_PASSWORD_get();
  public static readonly string EXP_FBX_PASSWORD_ENABLE = FbxWrapperNativePINVOKE.EXP_FBX_PASSWORD_ENABLE_get();
  public static readonly string EXP_FBX_COLLAPSE_EXTERNALS = FbxWrapperNativePINVOKE.EXP_FBX_COLLAPSE_EXTERNALS_get();
  public static readonly string EXP_FBX_COMPRESS_ARRAYS = FbxWrapperNativePINVOKE.EXP_FBX_COMPRESS_ARRAYS_get();
  public static readonly string EXP_FBX_COMPRESS_LEVEL = FbxWrapperNativePINVOKE.EXP_FBX_COMPRESS_LEVEL_get();
  public static readonly string EXP_FBX_COMPRESS_MINSIZE = FbxWrapperNativePINVOKE.EXP_FBX_COMPRESS_MINSIZE_get();
  public static readonly string EXP_FBX_EMBEDDED_PROPERTIES_SKIP = FbxWrapperNativePINVOKE.EXP_FBX_EMBEDDED_PROPERTIES_SKIP_get();
  public static readonly string EXP_FBX_EXPORT_FILE_VERSION = FbxWrapperNativePINVOKE.EXP_FBX_EXPORT_FILE_VERSION_get();
  public static readonly string IOSN_MOTION_START = FbxWrapperNativePINVOKE.IOSN_MOTION_START_get();
  public static readonly string IOSN_MOTION_FRAME_COUNT = FbxWrapperNativePINVOKE.IOSN_MOTION_FRAME_COUNT_get();
  public static readonly string IOSN_MOTION_FRAME_RATE = FbxWrapperNativePINVOKE.IOSN_MOTION_FRAME_RATE_get();
  public static readonly string IOSN_MOTION_ACTOR_PREFIX = FbxWrapperNativePINVOKE.IOSN_MOTION_ACTOR_PREFIX_get();
  public static readonly string IOSN_MOTION_RENAME_DUPLICATE_NAMES = FbxWrapperNativePINVOKE.IOSN_MOTION_RENAME_DUPLICATE_NAMES_get();
  public static readonly string IOSN_MOTION_EXACT_ZERO_AS_OCCLUDED = FbxWrapperNativePINVOKE.IOSN_MOTION_EXACT_ZERO_AS_OCCLUDED_get();
  public static readonly string IOSN_MOTION_SET_OCCLUDED_TO_LAST_VALID_POSITION = FbxWrapperNativePINVOKE.IOSN_MOTION_SET_OCCLUDED_TO_LAST_VALID_POSITION_get();
  public static readonly string IOSN_MOTION_AS_OPTICAL_SEGMENTS = FbxWrapperNativePINVOKE.IOSN_MOTION_AS_OPTICAL_SEGMENTS_get();
  public static readonly string IOSN_MOTION_ASF_SCENE_OWNED = FbxWrapperNativePINVOKE.IOSN_MOTION_ASF_SCENE_OWNED_get();
  public static readonly string IOSN_MOTION_MOTION_FROM_GLOBAL_POSITION = FbxWrapperNativePINVOKE.IOSN_MOTION_MOTION_FROM_GLOBAL_POSITION_get();
  public static readonly string IOSN_MOTION_GAPS_AS_VALID_DATA = FbxWrapperNativePINVOKE.IOSN_MOTION_GAPS_AS_VALID_DATA_get();
  public static readonly string IOSN_MOTION_C3D_REAL_FORMAT = FbxWrapperNativePINVOKE.IOSN_MOTION_C3D_REAL_FORMAT_get();
  public static readonly string IOSN_MOTION_CREATE_REFERENCE_NODE = FbxWrapperNativePINVOKE.IOSN_MOTION_CREATE_REFERENCE_NODE_get();
  public static readonly string IOSN_MOTION_TRANSLATION = FbxWrapperNativePINVOKE.IOSN_MOTION_TRANSLATION_get();
  public static readonly string IOSN_MOTION_BASE_T_IN_OFFSET = FbxWrapperNativePINVOKE.IOSN_MOTION_BASE_T_IN_OFFSET_get();
  public static readonly string IOSN_MOTION_BASE_R_IN_PREROTATION = FbxWrapperNativePINVOKE.IOSN_MOTION_BASE_R_IN_PREROTATION_get();
  public static readonly string IOSN_MOTION_DUMMY_NODES = FbxWrapperNativePINVOKE.IOSN_MOTION_DUMMY_NODES_get();
  public static readonly string IOSN_MOTION_LIMITS = FbxWrapperNativePINVOKE.IOSN_MOTION_LIMITS_get();
  public static readonly string IOSN_MOTION_FRAME_RATE_USED = FbxWrapperNativePINVOKE.IOSN_MOTION_FRAME_RATE_USED_get();
  public static readonly string IOSN_MOTION_FRAME_RANGE = FbxWrapperNativePINVOKE.IOSN_MOTION_FRAME_RANGE_get();
  public static readonly string IOSN_MOTION_WRITE_DEFAULT_AS_BASE_TR = FbxWrapperNativePINVOKE.IOSN_MOTION_WRITE_DEFAULT_AS_BASE_TR_get();
  public static readonly string IMP_MOB_START = FbxWrapperNativePINVOKE.IMP_MOB_START_get();
  public static readonly string IMP_MOB_FRAME_COUNT = FbxWrapperNativePINVOKE.IMP_MOB_FRAME_COUNT_get();
  public static readonly string IMP_MOB_FRAME_RATE = FbxWrapperNativePINVOKE.IMP_MOB_FRAME_RATE_get();
  public static readonly string IMP_MOB_ACTOR_PREFIX = FbxWrapperNativePINVOKE.IMP_MOB_ACTOR_PREFIX_get();
  public static readonly string IMP_MOB_RENAME_DUPLICATE_NAMES = FbxWrapperNativePINVOKE.IMP_MOB_RENAME_DUPLICATE_NAMES_get();
  public static readonly string IMP_MOB_EXACT_ZERO_AS_OCCLUDED = FbxWrapperNativePINVOKE.IMP_MOB_EXACT_ZERO_AS_OCCLUDED_get();
  public static readonly string IMP_MOB_SET_OCCLUDED_TO_LAST_VALID_POSITION = FbxWrapperNativePINVOKE.IMP_MOB_SET_OCCLUDED_TO_LAST_VALID_POSITION_get();
  public static readonly string IMP_MOB_AS_OPTICAL_SEGMENTS = FbxWrapperNativePINVOKE.IMP_MOB_AS_OPTICAL_SEGMENTS_get();
  public static readonly string IMP_MOB_ASF_SCENE_OWNED = FbxWrapperNativePINVOKE.IMP_MOB_ASF_SCENE_OWNED_get();
  public static readonly string IMP_ACCLAIM_AMC_CREATE_REFERENCE_NODE = FbxWrapperNativePINVOKE.IMP_ACCLAIM_AMC_CREATE_REFERENCE_NODE_get();
  public static readonly string IMP_ACCLAIM_AMC_MOTION_BASE_T_IN_OFFSET = FbxWrapperNativePINVOKE.IMP_ACCLAIM_AMC_MOTION_BASE_T_IN_OFFSET_get();
  public static readonly string IMP_ACCLAIM_AMC_MOTION_BASE_R_IN_PREROTATION = FbxWrapperNativePINVOKE.IMP_ACCLAIM_AMC_MOTION_BASE_R_IN_PREROTATION_get();
  public static readonly string IMP_ACCLAIM_AMC_DUMMY_NODES = FbxWrapperNativePINVOKE.IMP_ACCLAIM_AMC_DUMMY_NODES_get();
  public static readonly string IMP_ACCLAIM_AMC_MOTION_LIMITS = FbxWrapperNativePINVOKE.IMP_ACCLAIM_AMC_MOTION_LIMITS_get();
  public static readonly string IMP_ACCLAIM_ASF_CREATE_REFERENCE_NODE = FbxWrapperNativePINVOKE.IMP_ACCLAIM_ASF_CREATE_REFERENCE_NODE_get();
  public static readonly string IMP_ACCLAIM_ASF_MOTION_BASE_T_IN_OFFSET = FbxWrapperNativePINVOKE.IMP_ACCLAIM_ASF_MOTION_BASE_T_IN_OFFSET_get();
  public static readonly string IMP_ACCLAIM_ASF_MOTION_BASE_R_IN_PREROTATION = FbxWrapperNativePINVOKE.IMP_ACCLAIM_ASF_MOTION_BASE_R_IN_PREROTATION_get();
  public static readonly string IMP_ACCLAIM_ASF_DUMMY_NODES = FbxWrapperNativePINVOKE.IMP_ACCLAIM_ASF_DUMMY_NODES_get();
  public static readonly string IMP_ACCLAIM_ASF_MOTION_LIMITS = FbxWrapperNativePINVOKE.IMP_ACCLAIM_ASF_MOTION_LIMITS_get();
  public static readonly string IMP_BIOVISION_BVH_CREATE_REFERENCE_NODE = FbxWrapperNativePINVOKE.IMP_BIOVISION_BVH_CREATE_REFERENCE_NODE_get();
  public static readonly string IMP_MOTIONANALYSIS_HTR_CREATE_REFERENCE_NODE = FbxWrapperNativePINVOKE.IMP_MOTIONANALYSIS_HTR_CREATE_REFERENCE_NODE_get();
  public static readonly string IMP_MOTIONANALYSIS_HTR_MOTION_BASE_T_IN_OFFSET = FbxWrapperNativePINVOKE.IMP_MOTIONANALYSIS_HTR_MOTION_BASE_T_IN_OFFSET_get();
  public static readonly string IMP_MOTIONANALYSIS_HTR_MOTION_BASE_R_IN_PREROTATION = FbxWrapperNativePINVOKE.IMP_MOTIONANALYSIS_HTR_MOTION_BASE_R_IN_PREROTATION_get();
  public static readonly string EXP_MOB_START = FbxWrapperNativePINVOKE.EXP_MOB_START_get();
  public static readonly string EXP_MOB_FRAME_COUNT = FbxWrapperNativePINVOKE.EXP_MOB_FRAME_COUNT_get();
  public static readonly string EXP_MOB_FROM_GLOBAL_POSITION = FbxWrapperNativePINVOKE.EXP_MOB_FROM_GLOBAL_POSITION_get();
  public static readonly string EXP_MOB_FRAME_RATE = FbxWrapperNativePINVOKE.EXP_MOB_FRAME_RATE_get();
  public static readonly string EXP_MOB_GAPS_AS_VALID_DATA = FbxWrapperNativePINVOKE.EXP_MOB_GAPS_AS_VALID_DATA_get();
  public static readonly string EXP_MOB_C3D_REAL_FORMAT = FbxWrapperNativePINVOKE.EXP_MOB_C3D_REAL_FORMAT_get();
  public static readonly string EXP_MOB_ASF_SCENE_OWNED = FbxWrapperNativePINVOKE.EXP_MOB_ASF_SCENE_OWNED_get();
  public static readonly string EXP_ACCLAIM_AMC_MOTION_TRANSLATION = FbxWrapperNativePINVOKE.EXP_ACCLAIM_AMC_MOTION_TRANSLATION_get();
  public static readonly string EXP_ACCLAIM_AMC_FRAME_RATE_USED = FbxWrapperNativePINVOKE.EXP_ACCLAIM_AMC_FRAME_RATE_USED_get();
  public static readonly string EXP_ACCLAIM_AMC_FRAME_RANGE = FbxWrapperNativePINVOKE.EXP_ACCLAIM_AMC_FRAME_RANGE_get();
  public static readonly string EXP_ACCLAIM_AMC_WRITE_DEFAULT_AS_BASE_TR = FbxWrapperNativePINVOKE.EXP_ACCLAIM_AMC_WRITE_DEFAULT_AS_BASE_TR_get();
  public static readonly string EXP_ACCLAIM_ASF_MOTION_TRANSLATION = FbxWrapperNativePINVOKE.EXP_ACCLAIM_ASF_MOTION_TRANSLATION_get();
  public static readonly string EXP_ACCLAIM_ASF_FRAME_RATE_USED = FbxWrapperNativePINVOKE.EXP_ACCLAIM_ASF_FRAME_RATE_USED_get();
  public static readonly string EXP_ACCLAIM_ASF_FRAME_RANGE = FbxWrapperNativePINVOKE.EXP_ACCLAIM_ASF_FRAME_RANGE_get();
  public static readonly string EXP_ACCLAIM_ASF_WRITE_DEFAULT_AS_BASE_TR = FbxWrapperNativePINVOKE.EXP_ACCLAIM_ASF_WRITE_DEFAULT_AS_BASE_TR_get();
  public static readonly string EXP_BIOVISION_BVH_MOTION_TRANSLATION = FbxWrapperNativePINVOKE.EXP_BIOVISION_BVH_MOTION_TRANSLATION_get();
  public static readonly string MODEL_PREFIX = FbxWrapperNativePINVOKE.MODEL_PREFIX_get();
  public static readonly string MATERIAL_PREFIX = FbxWrapperNativePINVOKE.MATERIAL_PREFIX_get();
  public static readonly string POSE_PREFIX = FbxWrapperNativePINVOKE.POSE_PREFIX_get();
  public static readonly string DEFORMER_PREFIX = FbxWrapperNativePINVOKE.DEFORMER_PREFIX_get();
  public static readonly string CONTAINER_PREFIX = FbxWrapperNativePINVOKE.CONTAINER_PREFIX_get();
  public static readonly string SUBDEFORMER_PREFIX = FbxWrapperNativePINVOKE.SUBDEFORMER_PREFIX_get();
  public static readonly string CONSTRAINT_PREFIX = FbxWrapperNativePINVOKE.CONSTRAINT_PREFIX_get();
  public static readonly string CONTROLSET_PLUG_PREFIX = FbxWrapperNativePINVOKE.CONTROLSET_PLUG_PREFIX_get();
  public static readonly string AUDIO_PREFIX = FbxWrapperNativePINVOKE.AUDIO_PREFIX_get();
  public static readonly string AUDIO_LAYER_PREFIX = FbxWrapperNativePINVOKE.AUDIO_LAYER_PREFIX_get();
  public static readonly string VIDEO_PREFIX = FbxWrapperNativePINVOKE.VIDEO_PREFIX_get();
  public static readonly string TEXTURE_PREFIX = FbxWrapperNativePINVOKE.TEXTURE_PREFIX_get();
  public static readonly string THUMBNAIL_PREFIX = FbxWrapperNativePINVOKE.THUMBNAIL_PREFIX_get();
  public static readonly string MARKER_SET_PREFIX = FbxWrapperNativePINVOKE.MARKER_SET_PREFIX_get();
  public static readonly string GEOMETRY_PREFIX = FbxWrapperNativePINVOKE.GEOMETRY_PREFIX_get();
  public static readonly string GEOMETRY_WEIGHTED_MAP_PREFIX = FbxWrapperNativePINVOKE.GEOMETRY_WEIGHTED_MAP_PREFIX_get();
  public static readonly string SCENE_PREFIX = FbxWrapperNativePINVOKE.SCENE_PREFIX_get();
  public static readonly string CACHE_PREFIX = FbxWrapperNativePINVOKE.CACHE_PREFIX_get();
  public static readonly string IMPLEMENTATION_PREFIX = FbxWrapperNativePINVOKE.IMPLEMENTATION_PREFIX_get();
  public static readonly string BINDINGTABLE_PREFIX = FbxWrapperNativePINVOKE.BINDINGTABLE_PREFIX_get();
  public static readonly string BINDINGOPERATOR_PREFIX = FbxWrapperNativePINVOKE.BINDINGOPERATOR_PREFIX_get();
  public static readonly string LAYERED_TEXTURE_PREFIX = FbxWrapperNativePINVOKE.LAYERED_TEXTURE_PREFIX_get();
  public static readonly string PROCEDURAL_TEXTURE_PREFIX = FbxWrapperNativePINVOKE.PROCEDURAL_TEXTURE_PREFIX_get();
  public static readonly string DOCUMENT_PREFIX = FbxWrapperNativePINVOKE.DOCUMENT_PREFIX_get();
  public static readonly string COLLECTION_PREFIX = FbxWrapperNativePINVOKE.COLLECTION_PREFIX_get();
  public static readonly string COLLECTION_EXCLUSIVE_PREFIX = FbxWrapperNativePINVOKE.COLLECTION_EXCLUSIVE_PREFIX_get();
  public static readonly string NODE_ATTRIBUTE_PREFIX = FbxWrapperNativePINVOKE.NODE_ATTRIBUTE_PREFIX_get();
  public static readonly string ENVIRONMENT_PREFIX = FbxWrapperNativePINVOKE.ENVIRONMENT_PREFIX_get();
  public static readonly string OBJECTMETADATA_PREFIX = FbxWrapperNativePINVOKE.OBJECTMETADATA_PREFIX_get();
  public static readonly string EXPOSURECONTROL_PREFIX = FbxWrapperNativePINVOKE.EXPOSURECONTROL_PREFIX_get();
  public static readonly string ANIM_STACK_PREFIX = FbxWrapperNativePINVOKE.ANIM_STACK_PREFIX_get();
  public static readonly string ANIM_LAYER_PREFIX = FbxWrapperNativePINVOKE.ANIM_LAYER_PREFIX_get();
  public static readonly string ANIM_CURVENODE_PREFIX = FbxWrapperNativePINVOKE.ANIM_CURVENODE_PREFIX_get();
  public static readonly string ANIM_CURVE_PREFIX = FbxWrapperNativePINVOKE.ANIM_CURVE_PREFIX_get();
  public static readonly string ANIM_EVAL_PREFIX = FbxWrapperNativePINVOKE.ANIM_EVAL_PREFIX_get();
  public static readonly string SELECTION_SET_PREFIX = FbxWrapperNativePINVOKE.SELECTION_SET_PREFIX_get();
  public static readonly string SELECTION_SET_NODE_PREFIX = FbxWrapperNativePINVOKE.SELECTION_SET_NODE_PREFIX_get();
  public static readonly string DISPLAY_LAYER_PREFIX = FbxWrapperNativePINVOKE.DISPLAY_LAYER_PREFIX_get();
  public static readonly string SCENEREFERENCE_PREFIX = FbxWrapperNativePINVOKE.SCENEREFERENCE_PREFIX_get();
  public static readonly string ADSK_ENVIRONMENT_PREFIX = FbxWrapperNativePINVOKE.ADSK_ENVIRONMENT_PREFIX_get();
  public static readonly string ADSK_LIGHT_PREFIX = FbxWrapperNativePINVOKE.ADSK_LIGHT_PREFIX_get();
  public static readonly string ADSK_PROCEDURALGEOMETRY_PREFIX = FbxWrapperNativePINVOKE.ADSK_PROCEDURALGEOMETRY_PREFIX_get();
  public static readonly string ADSK_SURFACEMATERIAL_PREFIX = FbxWrapperNativePINVOKE.ADSK_SURFACEMATERIAL_PREFIX_get();
  public static readonly string ADSK_TEXTURE_PREFIX = FbxWrapperNativePINVOKE.ADSK_TEXTURE_PREFIX_get();
  public static readonly string ADSK_SWATCHSCENE_PREFIX = FbxWrapperNativePINVOKE.ADSK_SWATCHSCENE_PREFIX_get();
  public static readonly string Character_Hips = FbxWrapperNativePINVOKE.Character_Hips_get();
  public static readonly string Character_LeftUpLeg = FbxWrapperNativePINVOKE.Character_LeftUpLeg_get();
  public static readonly string Character_LeftLeg = FbxWrapperNativePINVOKE.Character_LeftLeg_get();
  public static readonly string Character_LeftFoot = FbxWrapperNativePINVOKE.Character_LeftFoot_get();
  public static readonly string Character_RightUpLeg = FbxWrapperNativePINVOKE.Character_RightUpLeg_get();
  public static readonly string Character_RightLeg = FbxWrapperNativePINVOKE.Character_RightLeg_get();
  public static readonly string Character_RightFoot = FbxWrapperNativePINVOKE.Character_RightFoot_get();
  public static readonly string Character_Spine = FbxWrapperNativePINVOKE.Character_Spine_get();
  public static readonly string Character_LeftArm = FbxWrapperNativePINVOKE.Character_LeftArm_get();
  public static readonly string Character_LeftForeArm = FbxWrapperNativePINVOKE.Character_LeftForeArm_get();
  public static readonly string Character_LeftHand = FbxWrapperNativePINVOKE.Character_LeftHand_get();
  public static readonly string Character_RightArm = FbxWrapperNativePINVOKE.Character_RightArm_get();
  public static readonly string Character_RightForeArm = FbxWrapperNativePINVOKE.Character_RightForeArm_get();
  public static readonly string Character_RightHand = FbxWrapperNativePINVOKE.Character_RightHand_get();
  public static readonly string Character_Head = FbxWrapperNativePINVOKE.Character_Head_get();
  public static readonly string Character_LeftToeBase = FbxWrapperNativePINVOKE.Character_LeftToeBase_get();
  public static readonly string Character_RightToeBase = FbxWrapperNativePINVOKE.Character_RightToeBase_get();
  public static readonly string Character_LeftShoulder = FbxWrapperNativePINVOKE.Character_LeftShoulder_get();
  public static readonly string Character_RightShoulder = FbxWrapperNativePINVOKE.Character_RightShoulder_get();
  public static readonly string Character_LeftShoulderExtra = FbxWrapperNativePINVOKE.Character_LeftShoulderExtra_get();
  public static readonly string Character_RightShoulderExtra = FbxWrapperNativePINVOKE.Character_RightShoulderExtra_get();
  public static readonly string Character_Neck = FbxWrapperNativePINVOKE.Character_Neck_get();
  public static readonly string Character_LeftFingerBase = FbxWrapperNativePINVOKE.Character_LeftFingerBase_get();
  public static readonly string Character_RightFingerBase = FbxWrapperNativePINVOKE.Character_RightFingerBase_get();
  public static readonly string Character_Spine1 = FbxWrapperNativePINVOKE.Character_Spine1_get();
  public static readonly string Character_Spine2 = FbxWrapperNativePINVOKE.Character_Spine2_get();
  public static readonly string Character_Spine3 = FbxWrapperNativePINVOKE.Character_Spine3_get();
  public static readonly string Character_Spine4 = FbxWrapperNativePINVOKE.Character_Spine4_get();
  public static readonly string Character_Spine5 = FbxWrapperNativePINVOKE.Character_Spine5_get();
  public static readonly string Character_Spine6 = FbxWrapperNativePINVOKE.Character_Spine6_get();
  public static readonly string Character_Spine7 = FbxWrapperNativePINVOKE.Character_Spine7_get();
  public static readonly string Character_Spine8 = FbxWrapperNativePINVOKE.Character_Spine8_get();
  public static readonly string Character_Spine9 = FbxWrapperNativePINVOKE.Character_Spine9_get();
  public static readonly string Character_Neck1 = FbxWrapperNativePINVOKE.Character_Neck1_get();
  public static readonly string Character_Neck2 = FbxWrapperNativePINVOKE.Character_Neck2_get();
  public static readonly string Character_Neck3 = FbxWrapperNativePINVOKE.Character_Neck3_get();
  public static readonly string Character_Neck4 = FbxWrapperNativePINVOKE.Character_Neck4_get();
  public static readonly string Character_Neck5 = FbxWrapperNativePINVOKE.Character_Neck5_get();
  public static readonly string Character_Neck6 = FbxWrapperNativePINVOKE.Character_Neck6_get();
  public static readonly string Character_Neck7 = FbxWrapperNativePINVOKE.Character_Neck7_get();
  public static readonly string Character_Neck8 = FbxWrapperNativePINVOKE.Character_Neck8_get();
  public static readonly string Character_Neck9 = FbxWrapperNativePINVOKE.Character_Neck9_get();
  public static readonly string Character_LeftUpLegRoll = FbxWrapperNativePINVOKE.Character_LeftUpLegRoll_get();
  public static readonly string Character_LeftLegRoll = FbxWrapperNativePINVOKE.Character_LeftLegRoll_get();
  public static readonly string Character_RightUpLegRoll = FbxWrapperNativePINVOKE.Character_RightUpLegRoll_get();
  public static readonly string Character_RightLegRoll = FbxWrapperNativePINVOKE.Character_RightLegRoll_get();
  public static readonly string Character_LeftArmRoll = FbxWrapperNativePINVOKE.Character_LeftArmRoll_get();
  public static readonly string Character_LeftForeArmRoll = FbxWrapperNativePINVOKE.Character_LeftForeArmRoll_get();
  public static readonly string Character_RightArmRoll = FbxWrapperNativePINVOKE.Character_RightArmRoll_get();
  public static readonly string Character_RightForeArmRoll = FbxWrapperNativePINVOKE.Character_RightForeArmRoll_get();
  public static readonly string Character_LeftUpLegRollEx = FbxWrapperNativePINVOKE.Character_LeftUpLegRollEx_get();
  public static readonly string Character_LeftLegRollEx = FbxWrapperNativePINVOKE.Character_LeftLegRollEx_get();
  public static readonly string Character_RightUpLegRollEx = FbxWrapperNativePINVOKE.Character_RightUpLegRollEx_get();
  public static readonly string Character_RightLegRollEx = FbxWrapperNativePINVOKE.Character_RightLegRollEx_get();
  public static readonly string Character_LeftArmRollEx = FbxWrapperNativePINVOKE.Character_LeftArmRollEx_get();
  public static readonly string Character_LeftForearmRollEx = FbxWrapperNativePINVOKE.Character_LeftForearmRollEx_get();
  public static readonly string Character_RightArmRollEx = FbxWrapperNativePINVOKE.Character_RightArmRollEx_get();
  public static readonly string Character_RightForearmRollEx = FbxWrapperNativePINVOKE.Character_RightForearmRollEx_get();
  public static readonly string Character_LeafLeftUpLegRoll1 = FbxWrapperNativePINVOKE.Character_LeafLeftUpLegRoll1_get();
  public static readonly string Character_LeafLeftLegRoll1 = FbxWrapperNativePINVOKE.Character_LeafLeftLegRoll1_get();
  public static readonly string Character_LeafRightUpLegRoll1 = FbxWrapperNativePINVOKE.Character_LeafRightUpLegRoll1_get();
  public static readonly string Character_LeafRightLegRoll1 = FbxWrapperNativePINVOKE.Character_LeafRightLegRoll1_get();
  public static readonly string Character_LeafLeftArmRoll1 = FbxWrapperNativePINVOKE.Character_LeafLeftArmRoll1_get();
  public static readonly string Character_LeafLeftForeArmRoll1 = FbxWrapperNativePINVOKE.Character_LeafLeftForeArmRoll1_get();
  public static readonly string Character_LeafRightArmRoll1 = FbxWrapperNativePINVOKE.Character_LeafRightArmRoll1_get();
  public static readonly string Character_LeafRightForeArmRoll1 = FbxWrapperNativePINVOKE.Character_LeafRightForeArmRoll1_get();
  public static readonly string Character_LeafLeftUpLegRoll2 = FbxWrapperNativePINVOKE.Character_LeafLeftUpLegRoll2_get();
  public static readonly string Character_LeafLeftLegRoll2 = FbxWrapperNativePINVOKE.Character_LeafLeftLegRoll2_get();
  public static readonly string Character_LeafRightUpLegRoll2 = FbxWrapperNativePINVOKE.Character_LeafRightUpLegRoll2_get();
  public static readonly string Character_LeafRightLegRoll2 = FbxWrapperNativePINVOKE.Character_LeafRightLegRoll2_get();
  public static readonly string Character_LeafLeftArmRoll2 = FbxWrapperNativePINVOKE.Character_LeafLeftArmRoll2_get();
  public static readonly string Character_LeafLeftForeArmRoll2 = FbxWrapperNativePINVOKE.Character_LeafLeftForeArmRoll2_get();
  public static readonly string Character_LeafRightArmRoll2 = FbxWrapperNativePINVOKE.Character_LeafRightArmRoll2_get();
  public static readonly string Character_LeafRightForeArmRoll2 = FbxWrapperNativePINVOKE.Character_LeafRightForeArmRoll2_get();
  public static readonly string Character_LeafLeftUpLegRoll3 = FbxWrapperNativePINVOKE.Character_LeafLeftUpLegRoll3_get();
  public static readonly string Character_LeafLeftLegRoll3 = FbxWrapperNativePINVOKE.Character_LeafLeftLegRoll3_get();
  public static readonly string Character_LeafRightUpLegRoll3 = FbxWrapperNativePINVOKE.Character_LeafRightUpLegRoll3_get();
  public static readonly string Character_LeafRightLegRoll3 = FbxWrapperNativePINVOKE.Character_LeafRightLegRoll3_get();
  public static readonly string Character_LeafLeftArmRoll3 = FbxWrapperNativePINVOKE.Character_LeafLeftArmRoll3_get();
  public static readonly string Character_LeafLeftForeArmRoll3 = FbxWrapperNativePINVOKE.Character_LeafLeftForeArmRoll3_get();
  public static readonly string Character_LeafRightArmRoll3 = FbxWrapperNativePINVOKE.Character_LeafRightArmRoll3_get();
  public static readonly string Character_LeafRightForeArmRoll3 = FbxWrapperNativePINVOKE.Character_LeafRightForeArmRoll3_get();
  public static readonly string Character_LeafLeftUpLegRoll4 = FbxWrapperNativePINVOKE.Character_LeafLeftUpLegRoll4_get();
  public static readonly string Character_LeafLeftLegRoll4 = FbxWrapperNativePINVOKE.Character_LeafLeftLegRoll4_get();
  public static readonly string Character_LeafRightUpLegRoll4 = FbxWrapperNativePINVOKE.Character_LeafRightUpLegRoll4_get();
  public static readonly string Character_LeafRightLegRoll4 = FbxWrapperNativePINVOKE.Character_LeafRightLegRoll4_get();
  public static readonly string Character_LeafLeftArmRoll4 = FbxWrapperNativePINVOKE.Character_LeafLeftArmRoll4_get();
  public static readonly string Character_LeafLeftForeArmRoll4 = FbxWrapperNativePINVOKE.Character_LeafLeftForeArmRoll4_get();
  public static readonly string Character_LeafRightArmRoll4 = FbxWrapperNativePINVOKE.Character_LeafRightArmRoll4_get();
  public static readonly string Character_LeafRightForeArmRoll4 = FbxWrapperNativePINVOKE.Character_LeafRightForeArmRoll4_get();
  public static readonly string Character_LeafLeftUpLegRoll5 = FbxWrapperNativePINVOKE.Character_LeafLeftUpLegRoll5_get();
  public static readonly string Character_LeafLeftLegRoll5 = FbxWrapperNativePINVOKE.Character_LeafLeftLegRoll5_get();
  public static readonly string Character_LeafRightUpLegRoll5 = FbxWrapperNativePINVOKE.Character_LeafRightUpLegRoll5_get();
  public static readonly string Character_LeafRightLegRoll5 = FbxWrapperNativePINVOKE.Character_LeafRightLegRoll5_get();
  public static readonly string Character_LeafLeftArmRoll5 = FbxWrapperNativePINVOKE.Character_LeafLeftArmRoll5_get();
  public static readonly string Character_LeafLeftForeArmRoll5 = FbxWrapperNativePINVOKE.Character_LeafLeftForeArmRoll5_get();
  public static readonly string Character_LeafRightArmRoll5 = FbxWrapperNativePINVOKE.Character_LeafRightArmRoll5_get();
  public static readonly string Character_LeafRightForeArmRoll5 = FbxWrapperNativePINVOKE.Character_LeafRightForeArmRoll5_get();
  public static readonly string Character_Props0 = FbxWrapperNativePINVOKE.Character_Props0_get();
  public static readonly string Character_Props1 = FbxWrapperNativePINVOKE.Character_Props1_get();
  public static readonly string Character_Props2 = FbxWrapperNativePINVOKE.Character_Props2_get();
  public static readonly string Character_Props3 = FbxWrapperNativePINVOKE.Character_Props3_get();
  public static readonly string Character_Props4 = FbxWrapperNativePINVOKE.Character_Props4_get();
  public static readonly string Character_LeftHandThumb1 = FbxWrapperNativePINVOKE.Character_LeftHandThumb1_get();
  public static readonly string Character_LeftHandThumb2 = FbxWrapperNativePINVOKE.Character_LeftHandThumb2_get();
  public static readonly string Character_LeftHandThumb3 = FbxWrapperNativePINVOKE.Character_LeftHandThumb3_get();
  public static readonly string Character_LeftHandThumb4 = FbxWrapperNativePINVOKE.Character_LeftHandThumb4_get();
  public static readonly string Character_LeftHandIndex1 = FbxWrapperNativePINVOKE.Character_LeftHandIndex1_get();
  public static readonly string Character_LeftHandIndex2 = FbxWrapperNativePINVOKE.Character_LeftHandIndex2_get();
  public static readonly string Character_LeftHandIndex3 = FbxWrapperNativePINVOKE.Character_LeftHandIndex3_get();
  public static readonly string Character_LeftHandIndex4 = FbxWrapperNativePINVOKE.Character_LeftHandIndex4_get();
  public static readonly string Character_LeftHandMiddle1 = FbxWrapperNativePINVOKE.Character_LeftHandMiddle1_get();
  public static readonly string Character_LeftHandMiddle2 = FbxWrapperNativePINVOKE.Character_LeftHandMiddle2_get();
  public static readonly string Character_LeftHandMiddle3 = FbxWrapperNativePINVOKE.Character_LeftHandMiddle3_get();
  public static readonly string Character_LeftHandMiddle4 = FbxWrapperNativePINVOKE.Character_LeftHandMiddle4_get();
  public static readonly string Character_LeftHandRing1 = FbxWrapperNativePINVOKE.Character_LeftHandRing1_get();
  public static readonly string Character_LeftHandRing2 = FbxWrapperNativePINVOKE.Character_LeftHandRing2_get();
  public static readonly string Character_LeftHandRing3 = FbxWrapperNativePINVOKE.Character_LeftHandRing3_get();
  public static readonly string Character_LeftHandRing4 = FbxWrapperNativePINVOKE.Character_LeftHandRing4_get();
  public static readonly string Character_LeftHandPinky1 = FbxWrapperNativePINVOKE.Character_LeftHandPinky1_get();
  public static readonly string Character_LeftHandPinky2 = FbxWrapperNativePINVOKE.Character_LeftHandPinky2_get();
  public static readonly string Character_LeftHandPinky3 = FbxWrapperNativePINVOKE.Character_LeftHandPinky3_get();
  public static readonly string Character_LeftHandPinky4 = FbxWrapperNativePINVOKE.Character_LeftHandPinky4_get();
  public static readonly string Character_LeftHandExtraFinger1 = FbxWrapperNativePINVOKE.Character_LeftHandExtraFinger1_get();
  public static readonly string Character_LeftHandExtraFinger2 = FbxWrapperNativePINVOKE.Character_LeftHandExtraFinger2_get();
  public static readonly string Character_LeftHandExtraFinger3 = FbxWrapperNativePINVOKE.Character_LeftHandExtraFinger3_get();
  public static readonly string Character_LeftHandExtraFinger4 = FbxWrapperNativePINVOKE.Character_LeftHandExtraFinger4_get();
  public static readonly string Character_RightHandThumb1 = FbxWrapperNativePINVOKE.Character_RightHandThumb1_get();
  public static readonly string Character_RightHandThumb2 = FbxWrapperNativePINVOKE.Character_RightHandThumb2_get();
  public static readonly string Character_RightHandThumb3 = FbxWrapperNativePINVOKE.Character_RightHandThumb3_get();
  public static readonly string Character_RightHandThumb4 = FbxWrapperNativePINVOKE.Character_RightHandThumb4_get();
  public static readonly string Character_RightHandIndex1 = FbxWrapperNativePINVOKE.Character_RightHandIndex1_get();
  public static readonly string Character_RightHandIndex2 = FbxWrapperNativePINVOKE.Character_RightHandIndex2_get();
  public static readonly string Character_RightHandIndex3 = FbxWrapperNativePINVOKE.Character_RightHandIndex3_get();
  public static readonly string Character_RightHandIndex4 = FbxWrapperNativePINVOKE.Character_RightHandIndex4_get();
  public static readonly string Character_RightHandMiddle1 = FbxWrapperNativePINVOKE.Character_RightHandMiddle1_get();
  public static readonly string Character_RightHandMiddle2 = FbxWrapperNativePINVOKE.Character_RightHandMiddle2_get();
  public static readonly string Character_RightHandMiddle3 = FbxWrapperNativePINVOKE.Character_RightHandMiddle3_get();
  public static readonly string Character_RightHandMiddle4 = FbxWrapperNativePINVOKE.Character_RightHandMiddle4_get();
  public static readonly string Character_RightHandRing1 = FbxWrapperNativePINVOKE.Character_RightHandRing1_get();
  public static readonly string Character_RightHandRing2 = FbxWrapperNativePINVOKE.Character_RightHandRing2_get();
  public static readonly string Character_RightHandRing3 = FbxWrapperNativePINVOKE.Character_RightHandRing3_get();
  public static readonly string Character_RightHandRing4 = FbxWrapperNativePINVOKE.Character_RightHandRing4_get();
  public static readonly string Character_RightHandPinky1 = FbxWrapperNativePINVOKE.Character_RightHandPinky1_get();
  public static readonly string Character_RightHandPinky2 = FbxWrapperNativePINVOKE.Character_RightHandPinky2_get();
  public static readonly string Character_RightHandPinky3 = FbxWrapperNativePINVOKE.Character_RightHandPinky3_get();
  public static readonly string Character_RightHandPinky4 = FbxWrapperNativePINVOKE.Character_RightHandPinky4_get();
  public static readonly string Character_RightHandExtraFinger1 = FbxWrapperNativePINVOKE.Character_RightHandExtraFinger1_get();
  public static readonly string Character_RightHandExtraFinger2 = FbxWrapperNativePINVOKE.Character_RightHandExtraFinger2_get();
  public static readonly string Character_RightHandExtraFinger3 = FbxWrapperNativePINVOKE.Character_RightHandExtraFinger3_get();
  public static readonly string Character_RightHandExtraFinger4 = FbxWrapperNativePINVOKE.Character_RightHandExtraFinger4_get();
  public static readonly string Character_LeftFootThumb1 = FbxWrapperNativePINVOKE.Character_LeftFootThumb1_get();
  public static readonly string Character_LeftFootThumb2 = FbxWrapperNativePINVOKE.Character_LeftFootThumb2_get();
  public static readonly string Character_LeftFootThumb3 = FbxWrapperNativePINVOKE.Character_LeftFootThumb3_get();
  public static readonly string Character_LeftFootThumb4 = FbxWrapperNativePINVOKE.Character_LeftFootThumb4_get();
  public static readonly string Character_LeftFootIndex1 = FbxWrapperNativePINVOKE.Character_LeftFootIndex1_get();
  public static readonly string Character_LeftFootIndex2 = FbxWrapperNativePINVOKE.Character_LeftFootIndex2_get();
  public static readonly string Character_LeftFootIndex3 = FbxWrapperNativePINVOKE.Character_LeftFootIndex3_get();
  public static readonly string Character_LeftFootIndex4 = FbxWrapperNativePINVOKE.Character_LeftFootIndex4_get();
  public static readonly string Character_LeftFootMiddle1 = FbxWrapperNativePINVOKE.Character_LeftFootMiddle1_get();
  public static readonly string Character_LeftFootMiddle2 = FbxWrapperNativePINVOKE.Character_LeftFootMiddle2_get();
  public static readonly string Character_LeftFootMiddle3 = FbxWrapperNativePINVOKE.Character_LeftFootMiddle3_get();
  public static readonly string Character_LeftFootMiddle4 = FbxWrapperNativePINVOKE.Character_LeftFootMiddle4_get();
  public static readonly string Character_LeftFootRing1 = FbxWrapperNativePINVOKE.Character_LeftFootRing1_get();
  public static readonly string Character_LeftFootRing2 = FbxWrapperNativePINVOKE.Character_LeftFootRing2_get();
  public static readonly string Character_LeftFootRing3 = FbxWrapperNativePINVOKE.Character_LeftFootRing3_get();
  public static readonly string Character_LeftFootRing4 = FbxWrapperNativePINVOKE.Character_LeftFootRing4_get();
  public static readonly string Character_LeftFootPinky1 = FbxWrapperNativePINVOKE.Character_LeftFootPinky1_get();
  public static readonly string Character_LeftFootPinky2 = FbxWrapperNativePINVOKE.Character_LeftFootPinky2_get();
  public static readonly string Character_LeftFootPinky3 = FbxWrapperNativePINVOKE.Character_LeftFootPinky3_get();
  public static readonly string Character_LeftFootPinky4 = FbxWrapperNativePINVOKE.Character_LeftFootPinky4_get();
  public static readonly string Character_LeftFootExtraFinger1 = FbxWrapperNativePINVOKE.Character_LeftFootExtraFinger1_get();
  public static readonly string Character_LeftFootExtraFinger2 = FbxWrapperNativePINVOKE.Character_LeftFootExtraFinger2_get();
  public static readonly string Character_LeftFootExtraFinger3 = FbxWrapperNativePINVOKE.Character_LeftFootExtraFinger3_get();
  public static readonly string Character_LeftFootExtraFinger4 = FbxWrapperNativePINVOKE.Character_LeftFootExtraFinger4_get();
  public static readonly string Character_RightFootThumb1 = FbxWrapperNativePINVOKE.Character_RightFootThumb1_get();
  public static readonly string Character_RightFootThumb2 = FbxWrapperNativePINVOKE.Character_RightFootThumb2_get();
  public static readonly string Character_RightFootThumb3 = FbxWrapperNativePINVOKE.Character_RightFootThumb3_get();
  public static readonly string Character_RightFootThumb4 = FbxWrapperNativePINVOKE.Character_RightFootThumb4_get();
  public static readonly string Character_RightFootIndex1 = FbxWrapperNativePINVOKE.Character_RightFootIndex1_get();
  public static readonly string Character_RightFootIndex2 = FbxWrapperNativePINVOKE.Character_RightFootIndex2_get();
  public static readonly string Character_RightFootIndex3 = FbxWrapperNativePINVOKE.Character_RightFootIndex3_get();
  public static readonly string Character_RightFootIndex4 = FbxWrapperNativePINVOKE.Character_RightFootIndex4_get();
  public static readonly string Character_RightFootMiddle1 = FbxWrapperNativePINVOKE.Character_RightFootMiddle1_get();
  public static readonly string Character_RightFootMiddle2 = FbxWrapperNativePINVOKE.Character_RightFootMiddle2_get();
  public static readonly string Character_RightFootMiddle3 = FbxWrapperNativePINVOKE.Character_RightFootMiddle3_get();
  public static readonly string Character_RightFootMiddle4 = FbxWrapperNativePINVOKE.Character_RightFootMiddle4_get();
  public static readonly string Character_RightFootRing1 = FbxWrapperNativePINVOKE.Character_RightFootRing1_get();
  public static readonly string Character_RightFootRing2 = FbxWrapperNativePINVOKE.Character_RightFootRing2_get();
  public static readonly string Character_RightFootRing3 = FbxWrapperNativePINVOKE.Character_RightFootRing3_get();
  public static readonly string Character_RightFootRing4 = FbxWrapperNativePINVOKE.Character_RightFootRing4_get();
  public static readonly string Character_RightFootPinky1 = FbxWrapperNativePINVOKE.Character_RightFootPinky1_get();
  public static readonly string Character_RightFootPinky2 = FbxWrapperNativePINVOKE.Character_RightFootPinky2_get();
  public static readonly string Character_RightFootPinky3 = FbxWrapperNativePINVOKE.Character_RightFootPinky3_get();
  public static readonly string Character_RightFootPinky4 = FbxWrapperNativePINVOKE.Character_RightFootPinky4_get();
  public static readonly string Character_RightFootExtraFinger1 = FbxWrapperNativePINVOKE.Character_RightFootExtraFinger1_get();
  public static readonly string Character_RightFootExtraFinger2 = FbxWrapperNativePINVOKE.Character_RightFootExtraFinger2_get();
  public static readonly string Character_RightFootExtraFinger3 = FbxWrapperNativePINVOKE.Character_RightFootExtraFinger3_get();
  public static readonly string Character_RightFootExtraFinger4 = FbxWrapperNativePINVOKE.Character_RightFootExtraFinger4_get();
  public static readonly string Character_LeftInHandThumb = FbxWrapperNativePINVOKE.Character_LeftInHandThumb_get();
  public static readonly string Character_LeftInHandIndex = FbxWrapperNativePINVOKE.Character_LeftInHandIndex_get();
  public static readonly string Character_LeftInHandMiddle = FbxWrapperNativePINVOKE.Character_LeftInHandMiddle_get();
  public static readonly string Character_LeftInHandRing = FbxWrapperNativePINVOKE.Character_LeftInHandRing_get();
  public static readonly string Character_LeftInHandPinky = FbxWrapperNativePINVOKE.Character_LeftInHandPinky_get();
  public static readonly string Character_LeftInHandExtraFinger = FbxWrapperNativePINVOKE.Character_LeftInHandExtraFinger_get();
  public static readonly string Character_RightInHandThumb = FbxWrapperNativePINVOKE.Character_RightInHandThumb_get();
  public static readonly string Character_RightInHandIndex = FbxWrapperNativePINVOKE.Character_RightInHandIndex_get();
  public static readonly string Character_RightInHandMiddle = FbxWrapperNativePINVOKE.Character_RightInHandMiddle_get();
  public static readonly string Character_RightInHandRing = FbxWrapperNativePINVOKE.Character_RightInHandRing_get();
  public static readonly string Character_RightInHandPinky = FbxWrapperNativePINVOKE.Character_RightInHandPinky_get();
  public static readonly string Character_RightInHandExtraFinger = FbxWrapperNativePINVOKE.Character_RightInHandExtraFinger_get();
  public static readonly string Character_LeftInFootThumb = FbxWrapperNativePINVOKE.Character_LeftInFootThumb_get();
  public static readonly string Character_LeftInFootIndex = FbxWrapperNativePINVOKE.Character_LeftInFootIndex_get();
  public static readonly string Character_LeftInFootMiddle = FbxWrapperNativePINVOKE.Character_LeftInFootMiddle_get();
  public static readonly string Character_LeftInFootRing = FbxWrapperNativePINVOKE.Character_LeftInFootRing_get();
  public static readonly string Character_LeftInFootPinky = FbxWrapperNativePINVOKE.Character_LeftInFootPinky_get();
  public static readonly string Character_LeftInFootExtraFinger = FbxWrapperNativePINVOKE.Character_LeftInFootExtraFinger_get();
  public static readonly string Character_RightInFootThumb = FbxWrapperNativePINVOKE.Character_RightInFootThumb_get();
  public static readonly string Character_RightInFootIndex = FbxWrapperNativePINVOKE.Character_RightInFootIndex_get();
  public static readonly string Character_RightInFootMiddle = FbxWrapperNativePINVOKE.Character_RightInFootMiddle_get();
  public static readonly string Character_RightInFootRing = FbxWrapperNativePINVOKE.Character_RightInFootRing_get();
  public static readonly string Character_RightInFootPinky = FbxWrapperNativePINVOKE.Character_RightInFootPinky_get();
  public static readonly string Character_RightInFootExtraFinger = FbxWrapperNativePINVOKE.Character_RightInFootExtraFinger_get();
  public static readonly string Character_GameModeParentLeftHipRoll = FbxWrapperNativePINVOKE.Character_GameModeParentLeftHipRoll_get();
  public static readonly string Character_GameModeParentLeftKnee = FbxWrapperNativePINVOKE.Character_GameModeParentLeftKnee_get();
  public static readonly string Character_GameModeParentLeftKneeRoll = FbxWrapperNativePINVOKE.Character_GameModeParentLeftKneeRoll_get();
  public static readonly string Character_GameModeParentRightHipRoll = FbxWrapperNativePINVOKE.Character_GameModeParentRightHipRoll_get();
  public static readonly string Character_GameModeParentRightKnee = FbxWrapperNativePINVOKE.Character_GameModeParentRightKnee_get();
  public static readonly string Character_GameModeParentRightKneeRoll = FbxWrapperNativePINVOKE.Character_GameModeParentRightKneeRoll_get();
  public static readonly string Character_GameModeParentLeftShoulderRoll = FbxWrapperNativePINVOKE.Character_GameModeParentLeftShoulderRoll_get();
  public static readonly string Character_GameModeParentLeftElbow = FbxWrapperNativePINVOKE.Character_GameModeParentLeftElbow_get();
  public static readonly string Character_GameModeParentLeftElbowRoll = FbxWrapperNativePINVOKE.Character_GameModeParentLeftElbowRoll_get();
  public static readonly string Character_GameModeParentRightShoulderRoll = FbxWrapperNativePINVOKE.Character_GameModeParentRightShoulderRoll_get();
  public static readonly string Character_GameModeParentRightElbow = FbxWrapperNativePINVOKE.Character_GameModeParentRightElbow_get();
  public static readonly string Character_GameModeParentRightElbowRoll = FbxWrapperNativePINVOKE.Character_GameModeParentRightElbowRoll_get();
  public static readonly string Character_LeftFloorContact = FbxWrapperNativePINVOKE.Character_LeftFloorContact_get();
  public static readonly string Character_RightFloorContact = FbxWrapperNativePINVOKE.Character_RightFloorContact_get();
  public static readonly string Character_LeftHandFloorContact = FbxWrapperNativePINVOKE.Character_LeftHandFloorContact_get();
  public static readonly string Character_RightHandFloorContact = FbxWrapperNativePINVOKE.Character_RightHandFloorContact_get();
  public static readonly string FBXSDK_SHADING_LANGUAGE_HLSL = FbxWrapperNativePINVOKE.FBXSDK_SHADING_LANGUAGE_HLSL_get();
  public static readonly string FBXSDK_SHADING_LANGUAGE_GLSL = FbxWrapperNativePINVOKE.FBXSDK_SHADING_LANGUAGE_GLSL_get();
  public static readonly string FBXSDK_SHADING_LANGUAGE_CGFX = FbxWrapperNativePINVOKE.FBXSDK_SHADING_LANGUAGE_CGFX_get();
  public static readonly string FBXSDK_SHADING_LANGUAGE_SFX = FbxWrapperNativePINVOKE.FBXSDK_SHADING_LANGUAGE_SFX_get();
  public static readonly string FBXSDK_SHADING_LANGUAGE_MRSL = FbxWrapperNativePINVOKE.FBXSDK_SHADING_LANGUAGE_MRSL_get();
  public static readonly string FBXSDK_RENDERING_API_DIRECTX = FbxWrapperNativePINVOKE.FBXSDK_RENDERING_API_DIRECTX_get();
  public static readonly string FBXSDK_RENDERING_API_OPENGL = FbxWrapperNativePINVOKE.FBXSDK_RENDERING_API_OPENGL_get();
  public static readonly string FBXSDK_RENDERING_API_MENTALRAY = FbxWrapperNativePINVOKE.FBXSDK_RENDERING_API_MENTALRAY_get();
  public static readonly string FBXSDK_RENDERING_API_PREVIEW = FbxWrapperNativePINVOKE.FBXSDK_RENDERING_API_PREVIEW_get();
  public static readonly string FBXSDK_IMPLEMENTATION_PREVIEW = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_PREVIEW_get();
  public static readonly string FBXSDK_IMPLEMENTATION_MENTALRAY = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_MENTALRAY_get();
  public static readonly string FBXSDK_IMPLEMENTATION_CGFX = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_CGFX_get();
  public static readonly string FBXSDK_IMPLEMENTATION_HLSL = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_HLSL_get();
  public static readonly string FBXSDK_IMPLEMENTATION_SFX = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_SFX_get();
  public static readonly string FBXSDK_IMPLEMENTATION_OGS = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_OGS_get();
  public static readonly string FBXSDK_IMPLEMENTATION_NONE = FbxWrapperNativePINVOKE.FBXSDK_IMPLEMENTATION_NONE_get();
  public static readonly string FBXSDK_TYPE_ENVIRONMENT = FbxWrapperNativePINVOKE.FBXSDK_TYPE_ENVIRONMENT_get();
  public static readonly string FBXSDK_TYPE_LIGHT = FbxWrapperNativePINVOKE.FBXSDK_TYPE_LIGHT_get();
  public static readonly string FBXSDK_TYPE_PROCEDURALGEOMETRY = FbxWrapperNativePINVOKE.FBXSDK_TYPE_PROCEDURALGEOMETRY_get();
  public static readonly string FBXSDK_TYPE_SURFACEMATERIAL = FbxWrapperNativePINVOKE.FBXSDK_TYPE_SURFACEMATERIAL_get();
  public static readonly string FBXSDK_TYPE_TEXTURE = FbxWrapperNativePINVOKE.FBXSDK_TYPE_TEXTURE_get();
  public static readonly string FBXSDK_TYPE_SWATCHSCENE = FbxWrapperNativePINVOKE.FBXSDK_TYPE_SWATCHSCENE_get();
  public static readonly string ADSK_TYPE_ENVIRONMENT = FbxWrapperNativePINVOKE.ADSK_TYPE_ENVIRONMENT_get();
  public static readonly string ADSK_TYPE_LIGHT = FbxWrapperNativePINVOKE.ADSK_TYPE_LIGHT_get();
  public static readonly string ADSK_TYPE_PROCEDURALGEOMETRY = FbxWrapperNativePINVOKE.ADSK_TYPE_PROCEDURALGEOMETRY_get();
  public static readonly string ADSK_TYPE_SURFACEMATERIAL = FbxWrapperNativePINVOKE.ADSK_TYPE_SURFACEMATERIAL_get();
  public static readonly string ADSK_TYPE_TEXTURE = FbxWrapperNativePINVOKE.ADSK_TYPE_TEXTURE_get();
  public static readonly string ADSK_TYPE_SWATCHSCENE = FbxWrapperNativePINVOKE.ADSK_TYPE_SWATCHSCENE_get();
  public static readonly string ADSK_UI_DEFINITION_URL = FbxWrapperNativePINVOKE.ADSK_UI_DEFINITION_URL_get();
  public static readonly string NAMECLASH1_KEY = FbxWrapperNativePINVOKE.NAMECLASH1_KEY_get();
  public static readonly string NAMECLASH2_KEY = FbxWrapperNativePINVOKE.NAMECLASH2_KEY_get();
  public static readonly string UPPERTOLOWER_KEY = FbxWrapperNativePINVOKE.UPPERTOLOWER_KEY_get();
  public static readonly string LOWERTOUPPER_KEY = FbxWrapperNativePINVOKE.LOWERTOUPPER_KEY_get();
  public static readonly int FBXSDK_SYSTEM_UNIT_PREDEF_COUNT = FbxWrapperNativePINVOKE.FBXSDK_SYSTEM_UNIT_PREDEF_COUNT_get();
  public static readonly double FBXSDK_TIME_ASSERT_EPSILON = FbxWrapperNativePINVOKE.FBXSDK_TIME_ASSERT_EPSILON_get();
  public static readonly int FBXSDK_TIME_FORWARD = FbxWrapperNativePINVOKE.FBXSDK_TIME_FORWARD_get();
  public static readonly int FBXSDK_TIME_BACKWARD = FbxWrapperNativePINVOKE.FBXSDK_TIME_BACKWARD_get();
  public static readonly int FBX_FILE_VERSION_2000 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_2000_get();
  public static readonly int FBX_FILE_VERSION_2001 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_2001_get();
  public static readonly int FBX_FILE_VERSION_3000 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_3000_get();
  public static readonly int FBX_FILE_VERSION_3001 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_3001_get();
  public static readonly int FBX_FILE_VERSION_4000 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_4000_get();
  public static readonly int FBX_FILE_VERSION_4001 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_4001_get();
  public static readonly int FBX_FILE_VERSION_4050 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_4050_get();
  public static readonly int FBX_FILE_VERSION_5000 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_5000_get();
  public static readonly int FBX_FILE_VERSION_5800 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_5800_get();
  public static readonly int FBX_FILE_VERSION_6000 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_6000_get();
  public static readonly int FBX_FILE_VERSION_6100 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_6100_get();
  public static readonly int FBX_FILE_VERSION_7000 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7000_get();
  public static readonly int FBX_FILE_VERSION_7099 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7099_get();
  public static readonly int FBX_FILE_VERSION_7100 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7100_get();
  public static readonly int FBX_FILE_VERSION_7200 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7200_get();
  public static readonly int FBX_FILE_VERSION_7300 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7300_get();
  public static readonly int FBX_FILE_VERSION_7400 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7400_get();
  public static readonly int FBX_FILE_VERSION_7500 = FbxWrapperNativePINVOKE.FBX_FILE_VERSION_7500_get();
  public static readonly string FBX_53_MB55_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_53_MB55_COMPATIBLE_get();
  public static readonly string FBX_60_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_60_COMPATIBLE_get();
  public static readonly string FBX_2005_08_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2005_08_COMPATIBLE_get();
  public static readonly string FBX_2006_02_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2006_02_COMPATIBLE_get();
  public static readonly string FBX_2006_08_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2006_08_COMPATIBLE_get();
  public static readonly string FBX_2006_11_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2006_11_COMPATIBLE_get();
  public static readonly string FBX_2009_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2009_00_COMPATIBLE_get();
  public static readonly string FBX_2009_00_V7_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2009_00_V7_COMPATIBLE_get();
  public static readonly string FBX_2010_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2010_00_COMPATIBLE_get();
  public static readonly string FBX_2011_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2011_00_COMPATIBLE_get();
  public static readonly string FBX_2012_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2012_00_COMPATIBLE_get();
  public static readonly string FBX_2013_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2013_00_COMPATIBLE_get();
  public static readonly string FBX_2014_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2014_00_COMPATIBLE_get();
  public static readonly string FBX_2016_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2016_00_COMPATIBLE_get();
  public static readonly string FBX_2018_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2018_00_COMPATIBLE_get();
  public static readonly string FBX_2019_00_COMPATIBLE = FbxWrapperNativePINVOKE.FBX_2019_00_COMPATIBLE_get();
  public static readonly int FBX_DEFAULT_FILE_VERSION = FbxWrapperNativePINVOKE.FBX_DEFAULT_FILE_VERSION_get();
  public static readonly string FBX_DEFAULT_FILE_COMPATIBILITY = FbxWrapperNativePINVOKE.FBX_DEFAULT_FILE_COMPATIBILITY_get();
  public static readonly int FBX_NO_SECTION = FbxWrapperNativePINVOKE.FBX_NO_SECTION_get();
  public static readonly int FBX_MAIN_SECTION = FbxWrapperNativePINVOKE.FBX_MAIN_SECTION_get();
  public static readonly int FBX_EXTENSION_SECTION_0 = FbxWrapperNativePINVOKE.FBX_EXTENSION_SECTION_0_get();

  public static readonly int FBXSDK_QUERY_UNIQUE_ID = FbxWrapperNativePINVOKE.FBXSDK_QUERY_UNIQUE_ID_get();
  public static readonly double FBXSDK_PI = FbxWrapperNativePINVOKE.FBXSDK_PI_get();
  public static readonly double FBXSDK_PI_DIV_2 = FbxWrapperNativePINVOKE.FBXSDK_PI_DIV_2_get();
  public static readonly double FBXSDK_PI_DIV_180 = FbxWrapperNativePINVOKE.FBXSDK_PI_DIV_180_get();
  public static readonly double FBXSDK_180_DIV_PI = FbxWrapperNativePINVOKE.FBXSDK_180_DIV_PI_get();
  public static readonly double FBXSDK_1_DIV_LN2 = FbxWrapperNativePINVOKE.FBXSDK_1_DIV_LN2_get();
  public static readonly double FBXSDK_DEG_TO_RAD = FbxWrapperNativePINVOKE.FBXSDK_DEG_TO_RAD_get();
  public static readonly double FBXSDK_RAD_TO_DEG = FbxWrapperNativePINVOKE.FBXSDK_RAD_TO_DEG_get();
  public static readonly double FBXSDK_IN_TO_CM = FbxWrapperNativePINVOKE.FBXSDK_IN_TO_CM_get();
  public static readonly double FBXSDK_MM_TO_CM = FbxWrapperNativePINVOKE.FBXSDK_MM_TO_CM_get();
  public static readonly double FBXSDK_CM_TO_IN = FbxWrapperNativePINVOKE.FBXSDK_CM_TO_IN_get();
  public static readonly double FBXSDK_IN_TO_MM = FbxWrapperNativePINVOKE.FBXSDK_IN_TO_MM_get();
  public static readonly double FBXSDK_MM_TO_IN = FbxWrapperNativePINVOKE.FBXSDK_MM_TO_IN_get();
  public static readonly double FBXSDK_FT_TO_M = FbxWrapperNativePINVOKE.FBXSDK_FT_TO_M_get();
  public static readonly double FBXSDK_M_TO_FT = FbxWrapperNativePINVOKE.FBXSDK_M_TO_FT_get();
  public static readonly int FBXSDK_YD_TO_FT = FbxWrapperNativePINVOKE.FBXSDK_YD_TO_FT_get();
  public static readonly double FBXSDK_FT_TO_YD = FbxWrapperNativePINVOKE.FBXSDK_FT_TO_YD_get();
  public static readonly double FBXSDK_KM_TO_MILE = FbxWrapperNativePINVOKE.FBXSDK_KM_TO_MILE_get();
  public static readonly double FBXSDK_MILE_TO_KM = FbxWrapperNativePINVOKE.FBXSDK_MILE_TO_KM_get();
  public static readonly double FBXSDK_YD_TO_M = FbxWrapperNativePINVOKE.FBXSDK_YD_TO_M_get();
  public static readonly double FBXSDK_M_TO_YD = FbxWrapperNativePINVOKE.FBXSDK_M_TO_YD_get();
  public static readonly int FBXSDK_PROPERTY_ID_NULL = FbxWrapperNativePINVOKE.FBXSDK_PROPERTY_ID_NULL_get();
  public static readonly int FBXSDK_PROPERTY_ID_ROOT = FbxWrapperNativePINVOKE.FBXSDK_PROPERTY_ID_ROOT_get();
  public static readonly string FBXSDK_IO_END_NODE_STR = FbxWrapperNativePINVOKE.FBXSDK_IO_END_NODE_STR_get();
  public static readonly bool IOSVisible = FbxWrapperNativePINVOKE.IOSVisible_get();
  public static readonly bool IOSHidden = FbxWrapperNativePINVOKE.IOSHidden_get();
  public static readonly bool IOSSavable = FbxWrapperNativePINVOKE.IOSSavable_get();
  public static readonly bool IOSNotSavable = FbxWrapperNativePINVOKE.IOSNotSavable_get();
  public static readonly bool IOSEnabled = FbxWrapperNativePINVOKE.IOSEnabled_get();
  public static readonly bool IOSDisabled = FbxWrapperNativePINVOKE.IOSDisabled_get();
  public static readonly int IOSBinary = FbxWrapperNativePINVOKE.IOSBinary_get();
  public static readonly int IOSASCII = FbxWrapperNativePINVOKE.IOSASCII_get();
  public static readonly string FBXSDK_CONTAINER_TEMPLATE_STR = FbxWrapperNativePINVOKE.FBXSDK_CONTAINER_TEMPLATE_STR_get();
  public static readonly string FBXSDK_TEMPLATE_STR = FbxWrapperNativePINVOKE.FBXSDK_TEMPLATE_STR_get();
  public static readonly string FBXSDK_EXTENDS_TEMPLATE_STR = FbxWrapperNativePINVOKE.FBXSDK_EXTENDS_TEMPLATE_STR_get();
  public static readonly string FBXSDK_CURVENODE_TRANSFORM = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_TRANSFORM_get();
  public static readonly string FBXSDK_CURVENODE_TRANSLATION = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_TRANSLATION_get();
  public static readonly string FBXSDK_CURVENODE_ROTATION = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_ROTATION_get();
  public static readonly string FBXSDK_CURVENODE_SCALING = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_SCALING_get();
  public static readonly string FBXSDK_CURVENODE_COMPONENT_X = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COMPONENT_X_get();
  public static readonly string FBXSDK_CURVENODE_COMPONENT_Y = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COMPONENT_Y_get();
  public static readonly string FBXSDK_CURVENODE_COMPONENT_Z = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COMPONENT_Z_get();
  public static readonly string FBXSDK_CURVENODE_COLOR = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COLOR_get();
  public static readonly string FBXSDK_CURVENODE_COLOR_RED = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COLOR_RED_get();
  public static readonly string FBXSDK_CURVENODE_COLOR_GREEN = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COLOR_GREEN_get();
  public static readonly string FBXSDK_CURVENODE_COLOR_BLUE = FbxWrapperNativePINVOKE.FBXSDK_CURVENODE_COLOR_BLUE_get();
  public static readonly string FBXSDK_TAKENODE_DEFAULT_NAME = FbxWrapperNativePINVOKE.FBXSDK_TAKENODE_DEFAULT_NAME_get();
  public static readonly string FBXSDK_ROOTCURVE_DEFAULT_NAME = FbxWrapperNativePINVOKE.FBXSDK_ROOTCURVE_DEFAULT_NAME_get();
}

}

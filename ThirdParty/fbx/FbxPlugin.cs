//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxPlugin : FbxListener {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxPlugin(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FbxWrapperNativePINVOKE.FbxPlugin_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxPlugin obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SWIGTYPE_p_FbxListNodeT_FbxPlugin_t GetListNode(int index) {
    SWIGTYPE_p_FbxListNodeT_FbxPlugin_t ret = new SWIGTYPE_p_FbxListNodeT_FbxPlugin_t(FbxWrapperNativePINVOKE.FbxPlugin_GetListNode__SWIG_0(swigCPtr, index), false);
    return ret;
  }

  public SWIGTYPE_p_FbxListNodeT_FbxPlugin_t GetListNode() {
    SWIGTYPE_p_FbxListNodeT_FbxPlugin_t ret = new SWIGTYPE_p_FbxListNodeT_FbxPlugin_t(FbxWrapperNativePINVOKE.FbxPlugin_GetListNode__SWIG_1(swigCPtr), false);
    return ret;
  }

  public virtual bool SpecificInitialize() {
    bool ret = FbxWrapperNativePINVOKE.FbxPlugin_SpecificInitialize(swigCPtr);
    return ret;
  }

  public virtual bool SpecificTerminate() {
    bool ret = FbxWrapperNativePINVOKE.FbxPlugin_SpecificTerminate(swigCPtr);
    return ret;
  }

  public virtual void WriteBegin(FbxScene pScene) {
    FbxWrapperNativePINVOKE.FbxPlugin_WriteBegin(swigCPtr, FbxScene.getCPtr(pScene));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void WriteParameters(FbxObject pParams) {
    FbxWrapperNativePINVOKE.FbxPlugin_WriteParameters(swigCPtr, FbxObject.getCPtr(pParams));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void WriteEnd(FbxScene pScene) {
    FbxWrapperNativePINVOKE.FbxPlugin_WriteEnd(swigCPtr, FbxScene.getCPtr(pScene));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void ReadBegin(FbxScene pScene) {
    FbxWrapperNativePINVOKE.FbxPlugin_ReadBegin(swigCPtr, FbxScene.getCPtr(pScene));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void ReadParameters(FbxObject pParams) {
    FbxWrapperNativePINVOKE.FbxPlugin_ReadParameters(swigCPtr, FbxObject.getCPtr(pParams));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void ReadEnd(FbxScene pScene) {
    FbxWrapperNativePINVOKE.FbxPlugin_ReadEnd(swigCPtr, FbxScene.getCPtr(pScene));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxPluginDef GetDefinition() {
    FbxPluginDef ret = new FbxPluginDef(FbxWrapperNativePINVOKE.FbxPlugin_GetDefinition(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_void GetModuleHdl() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxPlugin_GetModuleHdl(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public FbxObject GetPluginSettings() {
    FbxObject ret = new FbxObject(FbxWrapperNativePINVOKE.FbxPlugin_GetPluginSettings__SWIG_0(swigCPtr), false);
    return ret;
  }

  public virtual void Destroy() {
    FbxWrapperNativePINVOKE.FbxPlugin_Destroy(swigCPtr);
  }

}

}

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxArrayFbxVector2 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxArrayFbxVector2(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxArrayFbxVector2 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxArrayFbxVector2() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FbxWrapperNativePINVOKE.delete_FbxArrayFbxVector2(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxArrayFbxVector2() : this(FbxWrapperNativePINVOKE.new_FbxArrayFbxVector2__SWIG_0(), true) {
  }

  public FbxArrayFbxVector2(int pCapacity) : this(FbxWrapperNativePINVOKE.new_FbxArrayFbxVector2__SWIG_1(pCapacity), true) {
  }

  public FbxArrayFbxVector2(FbxArrayFbxVector2 pArray) : this(FbxWrapperNativePINVOKE.new_FbxArrayFbxVector2__SWIG_2(FbxArrayFbxVector2.getCPtr(pArray)), true) {
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public int InsertAt(int pIndex, FbxVector2 pElement, bool pCompact) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_InsertAt__SWIG_0(swigCPtr, pIndex, FbxVector2.getCPtr(pElement), pCompact);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int InsertAt(int pIndex, FbxVector2 pElement) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_InsertAt__SWIG_1(swigCPtr, pIndex, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Add(FbxVector2 pElement) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Add(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int AddUnique(FbxVector2 pElement) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_AddUnique(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int AddCompact(FbxVector2 pElement) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_AddCompact(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Size() {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Size(swigCPtr);
    return ret;
  }

  public int Capacity() {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Capacity(swigCPtr);
    return ret;
  }

  public FbxVector2 at(int pIndex) {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_at(swigCPtr, pIndex), false);
    return ret;
  }

  public FbxVector2 GetAt(int pIndex) {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_GetAt(swigCPtr, pIndex), true);
    return ret;
  }

  public FbxVector2 GetFirst() {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_GetFirst(swigCPtr), true);
    return ret;
  }

  public FbxVector2 GetLast() {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_GetLast(swigCPtr), true);
    return ret;
  }

  public int Find(FbxVector2 pElement, int pStartIndex) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Find__SWIG_0(swigCPtr, FbxVector2.getCPtr(pElement), pStartIndex);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Find(FbxVector2 pElement) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Find__SWIG_1(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int FindReverse(FbxVector2 pElement, int pStartIndex) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_FindReverse__SWIG_0(swigCPtr, FbxVector2.getCPtr(pElement), pStartIndex);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int FindReverse(FbxVector2 pElement) {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_FindReverse__SWIG_1(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Reserve(int pCapacity) {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Reserve(swigCPtr, pCapacity);
    return ret;
  }

  public void SetAt(int pIndex, FbxVector2 pElement) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_SetAt(swigCPtr, pIndex, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetFirst(FbxVector2 pElement) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_SetFirst(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetLast(FbxVector2 pElement) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_SetLast(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector2 RemoveAt(int pIndex) {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_RemoveAt(swigCPtr, pIndex), true);
    return ret;
  }

  public FbxVector2 RemoveFirst() {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_RemoveFirst(swigCPtr), true);
    return ret;
  }

  public FbxVector2 RemoveLast() {
    FbxVector2 ret = new FbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_RemoveLast(swigCPtr), true);
    return ret;
  }

  public bool RemoveIt(FbxVector2 pElement) {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_RemoveIt(swigCPtr, FbxVector2.getCPtr(pElement));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void RemoveRange(int pIndex, int pCount) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_RemoveRange(swigCPtr, pIndex, pCount);
  }

  public bool Resize(int pSize) {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Resize(swigCPtr, pSize);
    return ret;
  }

  public bool Grow(int pSize) {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Grow(swigCPtr, pSize);
    return ret;
  }

  public bool Shrink(int pSize) {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Shrink(swigCPtr, pSize);
    return ret;
  }

  public bool Compact() {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Compact(swigCPtr);
    return ret;
  }

  public void Clear() {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Clear(swigCPtr);
  }

  public void Sort(SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int pCompareFunc) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_Sort(swigCPtr, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int.getCPtr(pCompareFunc));
  }

  public FbxVector2 GetArray() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_GetArray(swigCPtr);
    FbxVector2 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector2(cPtr, false);
    return ret;
  }

  public FbxVector2 ToFbxVector2() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_ToFbxVector2(swigCPtr);
    FbxVector2 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector2(cPtr, false);
    return ret;
  }

  public void AddArray(FbxArrayFbxVector2 pOther) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_AddArray(swigCPtr, FbxArrayFbxVector2.getCPtr(pOther));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddArrayNoDuplicate(FbxArrayFbxVector2 pOther) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_AddArrayNoDuplicate(swigCPtr, FbxArrayFbxVector2.getCPtr(pOther));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RemoveArray(FbxArrayFbxVector2 pOther) {
    FbxWrapperNativePINVOKE.FbxArrayFbxVector2_RemoveArray(swigCPtr, FbxArrayFbxVector2.getCPtr(pOther));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxArrayFbxVector2 assign(FbxArrayFbxVector2 pOther) {
    FbxArrayFbxVector2 ret = new FbxArrayFbxVector2(FbxWrapperNativePINVOKE.FbxArrayFbxVector2_assign(swigCPtr, FbxArrayFbxVector2.getCPtr(pOther)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool eq(FbxArrayFbxVector2 pOther) {
    bool ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_eq(swigCPtr, FbxArrayFbxVector2.getCPtr(pOther));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetCount() {
    int ret = FbxWrapperNativePINVOKE.FbxArrayFbxVector2_GetCount(swigCPtr);
    return ret;
  }

}

}

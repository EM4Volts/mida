//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxShape : FbxGeometryBase {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxShape(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FbxWrapperNativePINVOKE.FbxShape_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxShape obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      FbxWrapperNativePINVOKE.FbxShape_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(FbxWrapperNativePINVOKE.FbxShape_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxShape Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxShape(cPtr, false);
    return ret;
  }

  public new static FbxShape Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxShape(cPtr, false);
    return ret;
  }

  public bool SetBlendShapeChannel(FbxBlendShapeChannel pBlendShapeChannel) {
    bool ret = FbxWrapperNativePINVOKE.FbxShape_SetBlendShapeChannel(swigCPtr, FbxBlendShapeChannel.getCPtr(pBlendShapeChannel));
    return ret;
  }

  public FbxBlendShapeChannel GetBlendShapeChannel() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_GetBlendShapeChannel(swigCPtr);
    FbxBlendShapeChannel ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxBlendShapeChannel(cPtr, false);
    return ret;
  }

  public FbxGeometry GetBaseGeometry() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_GetBaseGeometry(swigCPtr);
    FbxGeometry ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGeometry(cPtr, false);
    return ret;
  }

  public int GetControlPointIndicesCount() {
    int ret = FbxWrapperNativePINVOKE.FbxShape_GetControlPointIndicesCount(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_int GetControlPointIndices() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_GetControlPointIndices(swigCPtr);
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void SetControlPointIndicesCount(int pCount) {
    FbxWrapperNativePINVOKE.FbxShape_SetControlPointIndicesCount(swigCPtr, pCount);
  }

  public void AddControlPointIndex(int pIndex) {
    FbxWrapperNativePINVOKE.FbxShape_AddControlPointIndex(swigCPtr, pIndex);
  }

  public void Reset() {
    FbxWrapperNativePINVOKE.FbxShape_Reset(swigCPtr);
  }

  public override void Compact() {
    FbxWrapperNativePINVOKE.FbxShape_Compact(swigCPtr);
  }

  public override FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(FbxWrapperNativePINVOKE.FbxShape_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override FbxObject Clone(FbxObject.ECloneType pCloneType, FbxObject pContainer, SWIGTYPE_p_void pSet) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_Clone__SWIG_0(swigCPtr, (int)pCloneType, FbxObject.getCPtr(pContainer), SWIGTYPE_p_void.getCPtr(pSet));
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Clone(FbxObject.ECloneType pCloneType, FbxObject pContainer) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_Clone__SWIG_1(swigCPtr, (int)pCloneType, FbxObject.getCPtr(pContainer));
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Clone(FbxObject.ECloneType pCloneType) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_Clone__SWIG_2(swigCPtr, (int)pCloneType);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Clone() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxShape_Clone__SWIG_3(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

}

}

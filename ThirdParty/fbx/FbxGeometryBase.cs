//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Internal.Fbx {

public class FbxGeometryBase : FbxLayerContainer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxGeometryBase(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FbxWrapperNativePINVOKE.FbxGeometryBase_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxGeometryBase obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(FbxWrapperNativePINVOKE.FbxGeometryBase_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxGeometryBase Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxGeometryBase ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGeometryBase(cPtr, false);
    return ret;
  }

  public new static FbxGeometryBase Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxGeometryBase ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGeometryBase(cPtr, false);
    return ret;
  }

  public virtual void InitControlPoints(int pCount) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitControlPoints(swigCPtr, pCount);
  }

  public void InitNormals(int pCount) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitNormals__SWIG_0(swigCPtr, pCount);
  }

  public void InitNormals() {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitNormals__SWIG_1(swigCPtr);
  }

  public void InitNormals(FbxGeometryBase pSrc) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitNormals__SWIG_2(swigCPtr, FbxGeometryBase.getCPtr(pSrc));
  }

  public void InitTangents(int pCount, int pLayerIndex, string pName) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitTangents__SWIG_0(swigCPtr, pCount, pLayerIndex, pName);
  }

  public void InitTangents(int pCount, int pLayerIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitTangents__SWIG_1(swigCPtr, pCount, pLayerIndex);
  }

  public void InitTangents(int pCount) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitTangents__SWIG_2(swigCPtr, pCount);
  }

  public void InitTangents() {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitTangents__SWIG_3(swigCPtr);
  }

  public void InitTangents(FbxGeometryBase pSrc, int pLayerIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitTangents__SWIG_4(swigCPtr, FbxGeometryBase.getCPtr(pSrc), pLayerIndex);
  }

  public void InitTangents(FbxGeometryBase pSrc) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitTangents__SWIG_5(swigCPtr, FbxGeometryBase.getCPtr(pSrc));
  }

  public void InitBinormals(int pCount, int pLayerIndex, string pName) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitBinormals__SWIG_0(swigCPtr, pCount, pLayerIndex, pName);
  }

  public void InitBinormals(int pCount, int pLayerIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitBinormals__SWIG_1(swigCPtr, pCount, pLayerIndex);
  }

  public void InitBinormals(int pCount) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitBinormals__SWIG_2(swigCPtr, pCount);
  }

  public void InitBinormals() {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitBinormals__SWIG_3(swigCPtr);
  }

  public void InitBinormals(FbxGeometryBase pSrc, int pLayerIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitBinormals__SWIG_4(swigCPtr, FbxGeometryBase.getCPtr(pSrc), pLayerIndex);
  }

  public void InitBinormals(FbxGeometryBase pSrc) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_InitBinormals__SWIG_5(swigCPtr, FbxGeometryBase.getCPtr(pSrc));
  }

  public virtual void SetControlPointAt(FbxVector4 pCtrlPoint, FbxVector4 pNormal, int pIndex, bool pI2DSearch) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_SetControlPointAt__SWIG_0(swigCPtr, FbxVector4.getCPtr(pCtrlPoint), FbxVector4.getCPtr(pNormal), pIndex, pI2DSearch);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetControlPointAt(FbxVector4 pCtrlPoint, FbxVector4 pNormal, int pIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_SetControlPointAt__SWIG_1(swigCPtr, FbxVector4.getCPtr(pCtrlPoint), FbxVector4.getCPtr(pNormal), pIndex);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetControlPointAt(FbxVector4 pCtrlPoint, int pIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_SetControlPointAt__SWIG_2(swigCPtr, FbxVector4.getCPtr(pCtrlPoint), pIndex);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual FbxVector4 GetControlPointAt(int pIndex) {
    FbxVector4 ret = new FbxVector4(FbxWrapperNativePINVOKE.FbxGeometryBase_GetControlPointAt(swigCPtr, pIndex), true);
    return ret;
  }

  public virtual void SetControlPointNormalAt(FbxVector4 pNormal, int pIndex, bool pI2DSearch) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_SetControlPointNormalAt__SWIG_0(swigCPtr, FbxVector4.getCPtr(pNormal), pIndex, pI2DSearch);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetControlPointNormalAt(FbxVector4 pNormal, int pIndex) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_SetControlPointNormalAt__SWIG_1(swigCPtr, FbxVector4.getCPtr(pNormal), pIndex);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual int GetControlPointsCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetControlPointsCount(swigCPtr);
    return ret;
  }

  public virtual FbxVector4 GetControlPoints(FbxStatus pStatus) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetControlPoints__SWIG_0(swigCPtr, FbxStatus.getCPtr(pStatus));
    FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
    return ret;
  }

  public virtual FbxVector4 GetControlPoints() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetControlPoints__SWIG_1(swigCPtr);
    FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
    return ret;
  }

  public virtual void SetControlPointCount(int pCount) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_SetControlPointCount(swigCPtr, pCount);
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t PrimaryVisibility {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_PrimaryVisibility_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_PrimaryVisibility_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t CastShadow {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_CastShadow_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CastShadow_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ReceiveShadow {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_ReceiveShadow_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_ReceiveShadow_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 BBoxMin {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_BBoxMin_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_BBoxMin_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTFbxDouble3 BBoxMax {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_BBoxMax_set(swigCPtr, FbxPropertyTFbxDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_BBoxMax_get(swigCPtr);
      FbxPropertyTFbxDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTFbxDouble3(cPtr, false);
      return ret;
    } 
  }

  public void ComputeBBox() {
    FbxWrapperNativePINVOKE.FbxGeometryBase_ComputeBBox(swigCPtr);
  }

  public FbxLayerElementNormal CreateElementNormal() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementNormal(swigCPtr);
    FbxLayerElementNormal ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementNormal(cPtr, false);
    return ret;
  }

  public bool RemoveElementNormal(FbxLayerElementNormal pElementNormal) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementNormal(swigCPtr, FbxLayerElementNormal.getCPtr(pElementNormal));
    return ret;
  }

  public FbxLayerElementNormal GetElementNormal(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementNormal__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementNormal ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementNormal(cPtr, false);
    return ret;
  }

  public FbxLayerElementNormal GetElementNormal() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementNormal__SWIG_1(swigCPtr);
    FbxLayerElementNormal ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementNormal(cPtr, false);
    return ret;
  }

  public int GetElementNormalCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementNormalCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementBinormal CreateElementBinormal() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementBinormal(swigCPtr);
    FbxLayerElementBinormal ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementBinormal(cPtr, false);
    return ret;
  }

  public bool RemoveElementBinormal(FbxLayerElementBinormal pElementBinormal) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementBinormal(swigCPtr, FbxLayerElementBinormal.getCPtr(pElementBinormal));
    return ret;
  }

  public FbxLayerElementBinormal GetElementBinormal(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementBinormal__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementBinormal ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementBinormal(cPtr, false);
    return ret;
  }

  public FbxLayerElementBinormal GetElementBinormal() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementBinormal__SWIG_1(swigCPtr);
    FbxLayerElementBinormal ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementBinormal(cPtr, false);
    return ret;
  }

  public int GetElementBinormalCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementBinormalCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementTangent CreateElementTangent() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementTangent(swigCPtr);
    FbxLayerElementTangent ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementTangent(cPtr, false);
    return ret;
  }

  public bool RemoveElementTangent(FbxLayerElementTangent pElementTangent) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementTangent(swigCPtr, FbxLayerElementTangent.getCPtr(pElementTangent));
    return ret;
  }

  public FbxLayerElementTangent GetElementTangent(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementTangent__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementTangent ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementTangent(cPtr, false);
    return ret;
  }

  public FbxLayerElementTangent GetElementTangent() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementTangent__SWIG_1(swigCPtr);
    FbxLayerElementTangent ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementTangent(cPtr, false);
    return ret;
  }

  public int GetElementTangentCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementTangentCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementMaterial CreateElementMaterial() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementMaterial(swigCPtr);
    FbxLayerElementMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementMaterial(cPtr, false);
    return ret;
  }

  public bool RemoveElementMaterial(FbxLayerElementMaterial pElementMaterial) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementMaterial(swigCPtr, FbxLayerElementMaterial.getCPtr(pElementMaterial));
    return ret;
  }

  public FbxLayerElementMaterial GetElementMaterial(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementMaterial__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementMaterial(cPtr, false);
    return ret;
  }

  public FbxLayerElementMaterial GetElementMaterial() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementMaterial__SWIG_1(swigCPtr);
    FbxLayerElementMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementMaterial(cPtr, false);
    return ret;
  }

  public int GetElementMaterialCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementMaterialCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementPolygonGroup CreateElementPolygonGroup() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementPolygonGroup(swigCPtr);
    FbxLayerElementPolygonGroup ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementPolygonGroup(cPtr, false);
    return ret;
  }

  public bool RemoveElementPolygonGroup(FbxLayerElementPolygonGroup pElementPolygonGroup) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementPolygonGroup(swigCPtr, FbxLayerElementPolygonGroup.getCPtr(pElementPolygonGroup));
    return ret;
  }

  public FbxLayerElementPolygonGroup GetElementPolygonGroup(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementPolygonGroup__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementPolygonGroup ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementPolygonGroup(cPtr, false);
    return ret;
  }

  public FbxLayerElementPolygonGroup GetElementPolygonGroup() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementPolygonGroup__SWIG_1(swigCPtr);
    FbxLayerElementPolygonGroup ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementPolygonGroup(cPtr, false);
    return ret;
  }

  public int GetElementPolygonGroupCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementPolygonGroupCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementVertexColor CreateElementVertexColor() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementVertexColor(swigCPtr);
    FbxLayerElementVertexColor ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementVertexColor(cPtr, false);
    return ret;
  }

  public bool RemoveElementVertexColor(FbxLayerElementVertexColor pElementVertexColor) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementVertexColor(swigCPtr, FbxLayerElementVertexColor.getCPtr(pElementVertexColor));
    return ret;
  }

  public FbxLayerElementVertexColor GetElementVertexColor(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVertexColor__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementVertexColor ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementVertexColor(cPtr, false);
    return ret;
  }

  public FbxLayerElementVertexColor GetElementVertexColor() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVertexColor__SWIG_1(swigCPtr);
    FbxLayerElementVertexColor ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementVertexColor(cPtr, false);
    return ret;
  }

  public int GetElementVertexColorCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVertexColorCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementSmoothing CreateElementSmoothing() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementSmoothing(swigCPtr);
    FbxLayerElementSmoothing ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementSmoothing(cPtr, false);
    return ret;
  }

  public bool RemoveElementSmoothing(FbxLayerElementSmoothing pElementSmoothing) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementSmoothing(swigCPtr, FbxLayerElementSmoothing.getCPtr(pElementSmoothing));
    return ret;
  }

  public FbxLayerElementSmoothing GetElementSmoothing(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementSmoothing__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementSmoothing ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementSmoothing(cPtr, false);
    return ret;
  }

  public FbxLayerElementSmoothing GetElementSmoothing() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementSmoothing__SWIG_1(swigCPtr);
    FbxLayerElementSmoothing ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementSmoothing(cPtr, false);
    return ret;
  }

  public int GetElementSmoothingCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementSmoothingCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementCrease CreateElementVertexCrease() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementVertexCrease(swigCPtr);
    FbxLayerElementCrease ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementCrease(cPtr, false);
    return ret;
  }

  public bool RemoveElementVertexCrease(FbxLayerElementCrease pElementCrease) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementVertexCrease(swigCPtr, FbxLayerElementCrease.getCPtr(pElementCrease));
    return ret;
  }

  public FbxLayerElementCrease GetElementVertexCrease(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVertexCrease__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementCrease ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementCrease(cPtr, false);
    return ret;
  }

  public FbxLayerElementCrease GetElementVertexCrease() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVertexCrease__SWIG_1(swigCPtr);
    FbxLayerElementCrease ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementCrease(cPtr, false);
    return ret;
  }

  public int GetElementVertexCreaseCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVertexCreaseCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementCrease CreateElementEdgeCrease() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementEdgeCrease(swigCPtr);
    FbxLayerElementCrease ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementCrease(cPtr, false);
    return ret;
  }

  public bool RemoveElementEdgeCrease(FbxLayerElementCrease pElementCrease) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementEdgeCrease(swigCPtr, FbxLayerElementCrease.getCPtr(pElementCrease));
    return ret;
  }

  public FbxLayerElementCrease GetElementEdgeCrease(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementEdgeCrease__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementCrease ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementCrease(cPtr, false);
    return ret;
  }

  public FbxLayerElementCrease GetElementEdgeCrease() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementEdgeCrease__SWIG_1(swigCPtr);
    FbxLayerElementCrease ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementCrease(cPtr, false);
    return ret;
  }

  public int GetElementEdgeCreaseCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementEdgeCreaseCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementHole CreateElementHole() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementHole(swigCPtr);
    FbxLayerElementHole ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementHole(cPtr, false);
    return ret;
  }

  public bool RemoveElementHole(FbxLayerElementHole pElementHole) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementHole(swigCPtr, FbxLayerElementHole.getCPtr(pElementHole));
    return ret;
  }

  public FbxLayerElementHole GetElementHole(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementHole__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementHole ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementHole(cPtr, false);
    return ret;
  }

  public FbxLayerElementHole GetElementHole() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementHole__SWIG_1(swigCPtr);
    FbxLayerElementHole ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementHole(cPtr, false);
    return ret;
  }

  public int GetElementHoleCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementHoleCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementUserData CreateElementUserData() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementUserData(swigCPtr);
    FbxLayerElementUserData ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUserData(cPtr, false);
    return ret;
  }

  public bool RemoveElementUserData(FbxLayerElementUserData pElementUserData) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementUserData(swigCPtr, FbxLayerElementUserData.getCPtr(pElementUserData));
    return ret;
  }

  public FbxLayerElementUserData GetElementUserData(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUserData__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementUserData ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUserData(cPtr, false);
    return ret;
  }

  public FbxLayerElementUserData GetElementUserData() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUserData__SWIG_1(swigCPtr);
    FbxLayerElementUserData ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUserData(cPtr, false);
    return ret;
  }

  public int GetElementUserDataCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUserDataCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementVisibility CreateElementVisibility() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementVisibility(swigCPtr);
    FbxLayerElementVisibility ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementVisibility(cPtr, false);
    return ret;
  }

  public bool RemoveElementVisibility(FbxLayerElementVisibility pElementVisibility) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementVisibility(swigCPtr, FbxLayerElementVisibility.getCPtr(pElementVisibility));
    return ret;
  }

  public FbxLayerElementVisibility GetElementVisibility(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVisibility__SWIG_0(swigCPtr, pIndex);
    FbxLayerElementVisibility ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementVisibility(cPtr, false);
    return ret;
  }

  public FbxLayerElementVisibility GetElementVisibility() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVisibility__SWIG_1(swigCPtr);
    FbxLayerElementVisibility ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementVisibility(cPtr, false);
    return ret;
  }

  public int GetElementVisibilityCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementVisibilityCount(swigCPtr);
    return ret;
  }

  public FbxLayerElementUV CreateElementUV(string pUVSetName, FbxLayerElement.EType pTypeIdentifier) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementUV__SWIG_0(swigCPtr, pUVSetName, (int)pTypeIdentifier);
    FbxLayerElementUV ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUV(cPtr, false);
    return ret;
  }

  public FbxLayerElementUV CreateElementUV(string pUVSetName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_CreateElementUV__SWIG_1(swigCPtr, pUVSetName);
    FbxLayerElementUV ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUV(cPtr, false);
    return ret;
  }

  public bool RemoveElementUV(FbxLayerElementUV pElementUV) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_RemoveElementUV(swigCPtr, FbxLayerElementUV.getCPtr(pElementUV));
    return ret;
  }

  public FbxLayerElementUV GetElementUV(int pIndex, FbxLayerElement.EType pTypeIdentifier) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUV__SWIG_0(swigCPtr, pIndex, (int)pTypeIdentifier);
    FbxLayerElementUV ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUV(cPtr, false);
    return ret;
  }

  public FbxLayerElementUV GetElementUV(int pIndex) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUV__SWIG_1(swigCPtr, pIndex);
    FbxLayerElementUV ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUV(cPtr, false);
    return ret;
  }

  public FbxLayerElementUV GetElementUV() {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUV__SWIG_2(swigCPtr);
    FbxLayerElementUV ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUV(cPtr, false);
    return ret;
  }

  public int GetElementUVCount(FbxLayerElement.EType pTypeIdentifier) {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUVCount__SWIG_0(swigCPtr, (int)pTypeIdentifier);
    return ret;
  }

  public int GetElementUVCount() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUVCount__SWIG_1(swigCPtr);
    return ret;
  }

  public FbxLayerElementUV GetElementUV(string pUVSetName) {
    global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_GetElementUV__SWIG_6(swigCPtr, pUVSetName);
    FbxLayerElementUV ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementUV(cPtr, false);
    return ret;
  }

  public void GetUVSetNames(FbxStringList pUVSetNameList) {
    FbxWrapperNativePINVOKE.FbxGeometryBase_GetUVSetNames(swigCPtr, FbxStringList.getCPtr(pUVSetNameList));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public override bool ContentWriteTo(FbxStream pStream) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_ContentWriteTo(swigCPtr, FbxStream.getCPtr(pStream));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool ContentReadFrom(FbxStream pStream) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_ContentReadFrom(swigCPtr, FbxStream.getCPtr(pStream));
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int MemoryUsage() {
    int ret = FbxWrapperNativePINVOKE.FbxGeometryBase_MemoryUsage(swigCPtr);
    return ret;
  }

  public override FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(FbxWrapperNativePINVOKE.FbxGeometryBase_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (FbxWrapperNativePINVOKE.SWIGPendingException.Pending) throw FbxWrapperNativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void Compact() {
    FbxWrapperNativePINVOKE.FbxGeometryBase_Compact(swigCPtr);
  }

  public SWIGTYPE_p_FbxArrayT_FbxVector4_t mControlPoints {
    set {
      FbxWrapperNativePINVOKE.FbxGeometryBase_mControlPoints_set(swigCPtr, SWIGTYPE_p_FbxArrayT_FbxVector4_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = FbxWrapperNativePINVOKE.FbxGeometryBase_mControlPoints_get(swigCPtr);
      SWIGTYPE_p_FbxArrayT_FbxVector4_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxArrayT_FbxVector4_t(cPtr, false);
      return ret;
    } 
  }

  public bool GetNormals(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t pLockableArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetNormals(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t.getCPtr(pLockableArray));
    return ret;
  }

  public bool GetNormalsIndices(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t pLockableArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetNormalsIndices(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(pLockableArray));
    return ret;
  }

  public bool GetTangents(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t pLockableArray, int pLayerIndex) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetTangents__SWIG_0(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t.getCPtr(pLockableArray), pLayerIndex);
    return ret;
  }

  public bool GetTangents(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t pLockableArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetTangents__SWIG_1(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t.getCPtr(pLockableArray));
    return ret;
  }

  public bool GetTangentsIndices(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t pLockableArray, int pLayerIndex) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetTangentsIndices__SWIG_0(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(pLockableArray), pLayerIndex);
    return ret;
  }

  public bool GetTangentsIndices(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t pLockableArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetTangentsIndices__SWIG_1(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(pLockableArray));
    return ret;
  }

  public bool GetBinormals(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t pLockableArray, int pLayerIndex) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetBinormals__SWIG_0(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t.getCPtr(pLockableArray), pLayerIndex);
    return ret;
  }

  public bool GetBinormals(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t pLockableArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetBinormals__SWIG_1(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_FbxVector4_t.getCPtr(pLockableArray));
    return ret;
  }

  public bool GetBinormalsIndices(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t pLockableArray, int pLayerIndex) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetBinormalsIndices__SWIG_0(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(pLockableArray), pLayerIndex);
    return ret;
  }

  public bool GetBinormalsIndices(SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t pLockableArray) {
    bool ret = FbxWrapperNativePINVOKE.FbxGeometryBase_GetBinormalsIndices__SWIG_1(swigCPtr, SWIGTYPE_p_p_FbxLayerElementArrayTemplateT_int_t.getCPtr(pLockableArray));
    return ret;
  }

}

}
